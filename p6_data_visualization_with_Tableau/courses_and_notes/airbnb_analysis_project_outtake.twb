<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0915.2101                               -->
<workbook source-build='10.3.3 (10300.17.0915.2101)' source-platform='mac' version='10.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='airbnb_analysis_project_outtake' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='airbnb_union' inline='true' name='federated.0gonxai1jbwhnj1fdvey906ims1a' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airbnb_union' name='textscan.1ui7f5z18er2cj165epyb1jwckyz'>
            <connection class='textscan' directory='/Users/ggaasemyr/Documents/udacity/ipython_notebooks/p6/Project/data_files/san_francisco' filename='airbnb_union.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='neighbourhoods' name='ogrdirect.0a87a360isphtf18505sa0m3deof'>
            <connection class='ogrdirect' directory='/Users/ggaasemyr/Documents/udacity/ipython_notebooks/p6/Project/data_files' filename='neighbourhoods.geojson' ogr-grid-shift-folder='/Applications/Tableau Desktop 10.3.app/Contents/install/local/proj4' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='neighborhood_population' name='excel-direct.1d4u3wp1ogt5sj1djsg6w0yntmg6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ggaasemyr/Documents/udacity/ipython_notebooks/p6/Project/data_files/neighborhood_population.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[neighbourhoods.geojson].[neighbourhood]' />
              <expression op='[homes &amp; residents].[nbhd_match]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[airbnb_union.csv].[neighborhood]' />
                <expression op='[neighbourhoods.geojson].[neighbourhood]' />
              </expression>
            </clause>
            <relation connection='textscan.1ui7f5z18er2cj165epyb1jwckyz' name='airbnb_union.csv' table='[airbnb_union#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='room_id' ordinal='0' />
                <column datatype='string' name='host_id' ordinal='1' />
                <column datatype='string' name='room_type' ordinal='2' />
                <column datatype='string' name='borough' ordinal='3' />
                <column datatype='string' name='neighborhood' ordinal='4' />
                <column datatype='integer' name='reviews' ordinal='5' />
                <column datatype='real' name='overall_satisfaction' ordinal='6' />
                <column datatype='integer' name='accommodates' ordinal='7' />
                <column datatype='integer' name='bedrooms' ordinal='8' />
                <column datatype='integer' name='price' ordinal='9' />
                <column datatype='integer' name='minstay' ordinal='10' />
                <column datatype='real' name='latitude' ordinal='11' />
                <column datatype='real' name='longitude' ordinal='12' />
                <column datatype='datetime' name='last_modified' ordinal='13' />
                <column datatype='date' name='date_collected' ordinal='14' />
              </columns>
            </relation>
            <relation connection='ogrdirect.0a87a360isphtf18505sa0m3deof' name='neighbourhoods.geojson' table='[neighbourhoods.geojson]' type='table'>
              <columns>
                <column datatype='string' name='neighbourhood' ordinal='0' />
                <column datatype='string' name='neighbourhood_group' ordinal='1' />
                <column datatype='spatial' name='Geometry' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1d4u3wp1ogt5sj1djsg6w0yntmg6' name='homes &amp; residents' table='[&apos;homes &amp; residents$&apos;]' type='table'>
            <columns gridOrigin='A1:E35:no:A1:E35:0' header='yes' outcome='2'>
              <column datatype='string' name='Neighborhood' ordinal='0' />
              <column datatype='string' name='nbhd_match' ordinal='1' />
              <column datatype='integer' name='Homes' ordinal='2' />
              <column datatype='integer' name='Residents' ordinal='3' />
              <column datatype='real' name='Residents per home' ordinal='4' />
            </columns>
          </relation>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>room_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room_id]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>room_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[host_id]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>host_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>borough</remote-name>
            <remote-type>129</remote-type>
            <local-name>[borough]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>borough</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>neighborhood</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[reviews]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>reviews</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>overall_satisfaction</remote-name>
            <remote-type>5</remote-type>
            <local-name>[overall_satisfaction]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>overall_satisfaction</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>accommodates</remote-name>
            <remote-type>20</remote-type>
            <local-name>[accommodates]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>accommodates</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bedrooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bedrooms]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>bedrooms</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minstay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minstay]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>minstay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_modified</remote-name>
            <remote-type>135</remote-type>
            <local-name>[last_modified]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>last_modified</remote-alias>
            <ordinal>13</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_collected</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_collected]</local-name>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias>date_collected</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airbnb_union.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[neighbourhoods.geojson]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood_group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighbourhood_group]</local-name>
            <parent-name>[neighbourhoods.geojson]</parent-name>
            <remote-alias>neighbourhood_group</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[neighbourhoods.geojson]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>17</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <avg-vertex-count>358</avg-vertex-count>
            <spatial-prim-flags>6</spatial-prim-flags>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighborhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Neighborhood]</local-name>
            <parent-name>[homes &amp; residents]</parent-name>
            <remote-alias>Neighborhood</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nbhd_match</remote-name>
            <remote-type>130</remote-type>
            <local-name>[nbhd_match]</local-name>
            <parent-name>[homes &amp; residents]</parent-name>
            <remote-alias>nbhd_match</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Homes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Homes]</local-name>
            <parent-name>[homes &amp; residents]</parent-name>
            <remote-alias>Homes</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Residents]</local-name>
            <parent-name>[homes &amp; residents]</parent-name>
            <remote-alias>Residents</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residents per home</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residents per home]</local-name>
            <parent-name>[homes &amp; residents]</parent-name>
            <remote-alias>Residents per home</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[homes &amp; residents]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E35:no:A1:E35:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank: Price per bedroom' datatype='integer' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(MEDIAN([Calculation_2508716152417083392]))'>
          <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[neighbourhood]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Top 10' datatype='string' name='[Calculation_20125465660153866]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation2] &lt;=10 THEN &#10;&quot;#&quot; + STR([Calculation2]) + &quot; &quot; + MIN([neighborhood])&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Units per Host' datatype='integer' name='[Calculation_2111554968758022147]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [host_id] : COUNTD([room_id]) }' />
      </column>
      <column caption='Price per bedroom' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_2508716152417083392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[price] / [bedrooms]' />
      </column>
      <column caption='Calculation1' datatype='integer' name='[Calculation_442549099781648398]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [host_id] : COUNT(IF [room_type] = &quot;Entire home/apt&quot; THEN 1 END) }' />
      </column>
      <column caption='Quarter' datatype='string' name='[Calculation_5745889495740887044]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS(&quot;1,2,3&quot;,STR(MONTH([date_collected])))&#10;THEN &apos;Q1&apos; ELSEIF &#10;CONTAINS(&quot;4,5,6&quot;,STR(MONTH([date_collected])))&#10;THEN &apos;Q2&apos; ELSEIF &#10;CONTAINS(&quot;7,8,9&quot;,STR(MONTH([date_collected])))&#10;THEN &apos;Q3&apos; ELSEIF &#10;CONTAINS(&quot;10,11,12&quot;,STR(MONTH([date_collected])))&#10;THEN &apos;Q4&apos; END' />
      </column>
      <column datatype='string' name='[Minstay (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[minstay]' new-bin='true'>
          <bin default-name='false' value='&quot;100+&quot;'>
            <value>100</value>
            <value>120</value>
            <value>122</value>
            <value>153</value>
            <value>180</value>
            <value>183</value>
            <value>360</value>
            <value>365</value>
            <value>1000</value>
          </bin>
          <bin default-name='false' value='&quot;11 - 31&quot;'>
            <value>11</value>
            <value>12</value>
            <value>13</value>
            <value>14</value>
            <value>15</value>
            <value>16</value>
            <value>17</value>
            <value>18</value>
            <value>19</value>
            <value>20</value>
            <value>21</value>
            <value>22</value>
            <value>23</value>
            <value>24</value>
            <value>25</value>
            <value>26</value>
            <value>27</value>
            <value>28</value>
            <value>29</value>
            <value>30</value>
            <value>31</value>
          </bin>
          <bin default-name='false' value='&quot;32 - 99&quot;'>
            <value>32</value>
            <value>36</value>
            <value>40</value>
            <value>45</value>
            <value>50</value>
            <value>60</value>
            <value>70</value>
            <value>90</value>
          </bin>
        </calculation>
      </column>
      <column caption='Neighborhood1' datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
      <column caption='Number of Rooms per Host' datatype='integer' name='[Number of Homes per Host (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [host_id] : COUNTD(IF [room_type] = &quot;Private room&quot; THEN &#10;[room_id] END) }' />
      </column>
      <column datatype='integer' name='[Number of Homes per Host (copy 3)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [host_id] : COUNT([date_collected]) }' />
      </column>
      <column datatype='string' name='[Number of Homes per Host (copy 4) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Number of Homes per Host (copy 4)]' new-bin='true'>
          <bin default-name='true' value='&quot;0&quot;'>
            <value>0</value>
          </bin>
          <bin default-name='true' value='&quot;1&quot;'>
            <value>1</value>
          </bin>
          <bin default-name='true' value='&quot;2 &amp; 3&quot;'>
            <value>2</value>
            <value>3</value>
          </bin>
          <bin default-name='false' value='&quot;4+&quot;'>
            <value>4</value>
            <value>5</value>
            <value>6</value>
            <value>7</value>
            <value>8</value>
            <value>9</value>
            <value>10</value>
            <value>11</value>
            <value>12</value>
            <value>13</value>
            <value>14</value>
            <value>15</value>
            <value>16</value>
            <value>17</value>
            <value>18</value>
            <value>19</value>
            <value>20</value>
            <value>21</value>
            <value>22</value>
            <value>23</value>
            <value>24</value>
            <value>25</value>
            <value>26</value>
            <value>27</value>
            <value>28</value>
            <value>29</value>
            <value>30</value>
            <value>31</value>
            <value>32</value>
            <value>33</value>
            <value>34</value>
            <value>35</value>
            <value>36</value>
            <value>37</value>
            <value>38</value>
            <value>39</value>
            <value>40</value>
            <value>41</value>
            <value>42</value>
            <value>43</value>
            <value>44</value>
            <value>45</value>
            <value>46</value>
            <value>47</value>
            <value>48</value>
            <value>49</value>
            <value>50</value>
            <value>51</value>
            <value>52</value>
            <value>53</value>
            <value>54</value>
            <value>56</value>
            <value>57</value>
            <value>58</value>
            <value>60</value>
            <value>62</value>
            <value>63</value>
            <value>64</value>
            <value>66</value>
            <value>67</value>
            <value>68</value>
            <value>71</value>
            <value>72</value>
            <value>76</value>
            <value>78</value>
            <value>79</value>
            <value>83</value>
            <value>84</value>
            <value>88</value>
            <value>99</value>
            <value>104</value>
            <value>110</value>
            <value>131</value>
            <value>132</value>
            <value>138</value>
            <value>158</value>
            <value>159</value>
            <value>164</value>
            <value>178</value>
            <value>213</value>
            <value>261</value>
            <value>269</value>
            <value>355</value>
            <value>379</value>
            <value>984</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Homes per Host (copy 4)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [host_id] : COUNTD(IF [room_type] = &quot;Entire home/apt&quot; THEN &#10;[room_id] END) }' />
      </column>
      <column caption='Number of Homes per Host' datatype='integer' name='[Number of Homes per Host (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [host_id] : COUNTD(IF [room_type] = &quot;Entire home/apt&quot; THEN &#10;[room_id] END) }' />
      </column>
      <column datatype='string' name='[Number of Homes per Host (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Number of Homes per Host (copy)]' new-bin='true'>
          <bin default-name='true' value='&quot;0&quot;'>
            <value>0</value>
          </bin>
          <bin default-name='true' value='&quot;1&quot;'>
            <value>1</value>
          </bin>
          <bin default-name='true' value='&quot;2 &amp; 3&quot;'>
            <value>2</value>
            <value>3</value>
          </bin>
          <bin default-name='false' value='&quot;4+&quot;'>
            <value>4</value>
            <value>5</value>
            <value>6</value>
            <value>7</value>
            <value>8</value>
            <value>9</value>
            <value>10</value>
            <value>11</value>
            <value>12</value>
            <value>14</value>
            <value>15</value>
            <value>16</value>
            <value>19</value>
            <value>21</value>
            <value>24</value>
            <value>32</value>
            <value>37</value>
            <value>38</value>
            <value>41</value>
            <value>54</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Number of Rooms per Host (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Number of Homes per Host (copy 2)]' new-bin='true'>
          <bin default-name='true' value='&quot;1&quot;'>
            <value>1</value>
          </bin>
          <bin default-name='true' value='&quot;2&quot;'>
            <value>2</value>
          </bin>
          <bin default-name='true' value='&quot;3 &amp; 4&quot;'>
            <value>3</value>
            <value>4</value>
          </bin>
          <bin default-name='true' value='&quot;5, 6, 7 and 15 more&quot;'>
            <value>5</value>
            <value>6</value>
            <value>7</value>
            <value>8</value>
            <value>9</value>
            <value>10</value>
            <value>11</value>
            <value>12</value>
            <value>13</value>
            <value>14</value>
            <value>16</value>
            <value>18</value>
            <value>20</value>
            <value>21</value>
            <value>22</value>
            <value>25</value>
            <value>29</value>
            <value>50</value>
          </bin>
        </calculation>
      </column>
      <column caption='Number of units per Host (group)' datatype='string' default-type='ordinal' name='[Number of Rooms per Host (group)]' role='measure' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_2111554968758022147]' new-bin='true'>
          <bin default-name='false' value='&quot;1-2&quot;'>
            <value>1</value>
            <value>2</value>
          </bin>
          <bin default-name='false' value='&quot;11-20&quot;'>
            <value>11</value>
            <value>12</value>
            <value>13</value>
            <value>14</value>
            <value>15</value>
            <value>16</value>
            <value>17</value>
            <value>18</value>
            <value>19</value>
            <value>20</value>
          </bin>
          <bin default-name='false' value='&quot;21-30&quot;'>
            <value>21</value>
            <value>22</value>
            <value>23</value>
            <value>24</value>
            <value>25</value>
            <value>26</value>
            <value>28</value>
            <value>29</value>
            <value>30</value>
          </bin>
          <bin default-name='false' value='&quot;3-5&quot;'>
            <value>3</value>
            <value>4</value>
            <value>5</value>
          </bin>
          <bin default-name='false' value='&quot;31- 40&quot;'>
            <value>31</value>
            <value>32</value>
            <value>37</value>
            <value>38</value>
            <value>40</value>
          </bin>
          <bin default-name='false' value='&quot;41-50&quot;'>
            <value>41</value>
            <value>50</value>
          </bin>
          <bin default-name='false' value='&quot;51-71&quot;'>
            <value>54</value>
            <value>69</value>
            <value>71</value>
          </bin>
          <bin default-name='false' value='&quot;6-10&quot;'>
            <value>6</value>
            <value>7</value>
            <value>8</value>
            <value>9</value>
            <value>10</value>
          </bin>
        </calculation>
      </column>
      <column caption='Accommodates' datatype='integer' name='[accommodates]' role='measure' type='quantitative' />
      <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
      <column caption='Borough' datatype='string' name='[borough]' role='dimension' type='nominal' />
      <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
      <column datatype='string' name='[host_id]' role='dimension' type='nominal' />
      <column caption='Last Modified' datatype='datetime' name='[last_modified]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Minstay' datatype='integer' name='[minstay]' role='measure' type='quantitative' />
      <column caption='Nbhd Match' datatype='string' name='[nbhd_match]' role='dimension' type='nominal' />
      <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
      <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' type='nominal' />
      <column caption='Overall Satisfaction' datatype='real' name='[overall_satisfaction]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Reviews' datatype='integer' name='[reviews]' role='measure' type='quantitative' />
      <column caption='Room Id' datatype='string' name='[room_id]' role='dimension' type='nominal' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_2508716152417083392]' derivation='Attribute' name='[attr:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Attribute' name='[attr:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Attribute' name='[attr:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2111554968758022147]' derivation='Avg' name='[avg:Calculation_2111554968758022147:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2508716152417083392]' derivation='Avg' name='[avg:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Homes per Host (copy)]' derivation='Avg' name='[avg:Number of Homes per Host (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[accommodates]' derivation='Avg' name='[avg:accommodates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bedrooms]' derivation='Avg' name='[avg:bedrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[minstay]' derivation='Avg' name='[avg:minstay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[overall_satisfaction]' derivation='Avg' name='[avg:overall_satisfaction:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[reviews]' derivation='Avg' name='[avg:reviews:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='CountD' name='[ctd:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[host_id]' derivation='CountD' name='[ctd:host_id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2111554968758022147]' derivation='Sum' name='[cum:sum:Calculation_2111554968758022147:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Rooms per Host (group)]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_2111554968758022147]' derivation='Sum' name='[cum:sum:Calculation_2111554968758022147:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Avg' name='[diff:avg:Calculation_2508716152417083392:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[date_collected]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Avg' name='[diff:avg:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2111554968758022147]' derivation='Sum' name='[diff:cum:sum:Calculation_2111554968758022147:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2111554968758022147]' derivation='Sum' name='[diff:cum:sum:Calculation_2111554968758022147:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Rooms per Host (group)]' ordering-type='Field' type='CumTotal' />
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2111554968758022147]' derivation='Sum' name='[diff:sum:Calculation_2111554968758022147:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2508716152417083392]' derivation='Max' name='[max:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative' />
      <column-instance column='[minstay]' derivation='Max' name='[max:minstay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Max' name='[max:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2508716152417083392]' derivation='Median' name='[med:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Median' name='[med:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[accommodates]' derivation='Median' name='[med:accommodates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bedrooms]' derivation='Median' name='[med:bedrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[minstay]' derivation='Median' name='[med:minstay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Median' name='[med:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Min' name='[min:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2111554968758022147]' derivation='None' name='[none:Calculation_2111554968758022147:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2508716152417083392]' derivation='None' name='[none:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Homes per Host (copy)]' derivation='None' name='[none:Number of Homes per Host (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='None' name='[none:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[minstay]' derivation='None' name='[none:minstay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
      <column-instance column='[overall_satisfaction]' derivation='None' name='[none:overall_satisfaction:ok]' pivot='key' type='ordinal' />
      <column-instance column='[overall_satisfaction]' derivation='None' name='[none:overall_satisfaction:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[reviews]' derivation='None' name='[none:reviews:qk]' pivot='key' type='quantitative' />
      <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2508716152417083392]' derivation='Avg' name='[pcdf:avg:Calculation_2508716152417083392:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[date_collected]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Avg' name='[pcdf:avg:Calculation_2508716152417083392:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[neighbourhood]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Avg' name='[pcdf:avg:Calculation_2508716152417083392:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='CellInPane' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Avg' name='[pcdf:avg:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Count' name='[pcdf:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Avg' name='[pcrk:avg:Calculation_2508716152417083392:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[date_collected]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Avg' name='[pcrk:avg:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Median' name='[pcrk:med:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Avg' name='[pcto:avg:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Number of Homes per Host (copy)]' derivation='Avg' name='[pcto:avg:Number of Homes per Host (copy):qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Number of Homes per Host (copy)]' derivation='Avg' name='[pcto:avg:Number of Homes per Host (copy):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[price]' derivation='Avg' name='[pcto:avg:price:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[price]' derivation='Avg' name='[pcto:avg:price:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[date_collected]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[price]' derivation='Avg' name='[pcto:avg:price:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Count' name='[pcto:cnt:Number of Records:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[host_id]' derivation='CountD' name='[pcto:ctd:host_id:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[host_id]' derivation='CountD' name='[pcto:ctd:host_id:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_2111554968758022147]' derivation='Sum' name='[pcto:cum:sum:Calculation_2111554968758022147:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_2111554968758022147]' derivation='Sum' name='[pcto:cum:sum:Calculation_2111554968758022147:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Rooms per Host (group)]' ordering-type='Field' type='CumTotal' />
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_2111554968758022147]' derivation='Sum' name='[pcto:sum:Calculation_2111554968758022147:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Sum' name='[pcto:sum:Calculation_2508716152417083392:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Sum' name='[pcto:sum:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Number of Homes per Host (copy)]' derivation='Sum' name='[pcto:sum:Number of Homes per Host (copy):qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Number of Homes per Host (copy)]' derivation='Sum' name='[pcto:sum:Number of Homes per Host (copy):qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Number of Homes per Host (copy)]' derivation='Sum' name='[pcto:sum:Number of Homes per Host (copy):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:9]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (copy 3) (group)]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[price]' derivation='Sum' name='[pcto:sum:price:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[price]' derivation='Sum' name='[pcto:sum:price:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance aggregation-param='50' column='[Calculation_2508716152417083392]' derivation='Percentile' name='[prc50:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='50' column='[price]' derivation='Percentile' name='[prc50:price:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='95' column='[Calculation_2508716152417083392]' derivation='Percentile' name='[prc95:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='95' column='[price]' derivation='Percentile' name='[prc95:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2508716152417083392]' derivation='Median' name='[rank:med:Calculation_2508716152417083392:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Median' name='[rank:med:Calculation_2508716152417083392:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Median' name='[rank:med:Calculation_2508716152417083392:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='RowInPane' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Median' name='[rank:med:Calculation_2508716152417083392:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[neighbourhood]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Median' name='[rank:med:Calculation_2508716152417083392:qk:9]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[neighborhood]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_2508716152417083392]' derivation='Median' name='[rank:med:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_2111554968758022147]' derivation='Sum' name='[sum:Calculation_2111554968758022147:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2508716152417083392]' derivation='Sum' name='[sum:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Homes per Host (copy)]' derivation='Sum' name='[sum:Number of Homes per Host (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[accommodates]' derivation='Sum' name='[sum:accommodates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bedrooms]' derivation='Sum' name='[sum:bedrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[minstay]' derivation='Sum' name='[sum:minstay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[overall_satisfaction]' derivation='Sum' name='[sum:overall_satisfaction:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[reviews]' derivation='Sum' name='[sum:reviews:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[neighborhood]' ordering-type='Field' />
      </column-instance>
      <group name='[2+ homes]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Number of Homes per Host (group)]' member='&quot;2 &amp; 3&quot;' />
          <groupfilter function='member' level='[Number of Homes per Host (group)]' member='&quot;4+&quot;' />
        </groupfilter>
      </group>
      <group name='[Date Collected &amp; host_id (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[date_collected]' />
          <groupfilter function='level-members' level='[host_id]' />
        </groupfilter>
      </group>
      <group name='[Host multiple properties]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='COUNTD([room_id]) &gt;= 2' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[host_id]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='COUNTD([room_id]) &gt; 1' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[host_id]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group name='[host 10+]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='COUNTD([room_id]) &gt;= 10' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[host_id]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group name='[host_id &amp; Date Collected (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[host_id]' />
          <groupfilter function='level-members' level='[date_collected]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/ggaasemyr/Documents/My Tableau Repository/Datasources/airbnb_union.tde' schema='Extract' tablename='Extract' update-time='12/01/2017 09:20:58 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Calculation_2508716152417083392]' value='[Extract].[Calculation_2508716152417083392]' />
            <map key='[Calculation_5745889495740887044]' value='[Extract].[Calculation_5745889495740887044]' />
            <map key='[Geometry]' value='[Extract].[Geometry]' />
            <map key='[Homes]' value='[Extract].[Homes]' />
            <map key='[Minstay (group)]' value='[Extract].[Minstay (group)]' />
            <map key='[Neighborhood]' value='[Extract].[Neighborhood]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Residents per home]' value='[Extract].[Residents per home]' />
            <map key='[Residents]' value='[Extract].[Residents]' />
            <map key='[accommodates]' value='[Extract].[accommodates]' />
            <map key='[bedrooms]' value='[Extract].[bedrooms]' />
            <map key='[borough]' value='[Extract].[borough]' />
            <map key='[date_collected]' value='[Extract].[date_collected]' />
            <map key='[host_id]' value='[Extract].[host_id]' />
            <map key='[last_modified]' value='[Extract].[last_modified]' />
            <map key='[latitude]' value='[Extract].[latitude]' />
            <map key='[longitude]' value='[Extract].[longitude]' />
            <map key='[minstay]' value='[Extract].[minstay]' />
            <map key='[nbhd_match]' value='[Extract].[nbhd_match]' />
            <map key='[neighborhood]' value='[Extract].[neighborhood1]' />
            <map key='[neighbourhood]' value='[Extract].[neighbourhood]' />
            <map key='[neighbourhood_group]' value='[Extract].[neighbourhood_group]' />
            <map key='[overall_satisfaction]' value='[Extract].[overall_satisfaction]' />
            <map key='[price]' value='[Extract].[price]' />
            <map key='[reviews]' value='[Extract].[reviews]' />
            <map key='[room_id]' value='[Extract].[room_id]' />
            <map key='[room_type]' value='[Extract].[room_type]' />
          </cols>
          <calculations>
            <calculation column='[Calculation_2508716152417083392]' formula='[price] / [bedrooms]' />
            <calculation column='[Calculation_5745889495740887044]' formula='IF CONTAINS(&quot;1,2,3&quot;,STR(MONTH([date_collected])))&#10;THEN &apos;Q1&apos; ELSEIF &#10;CONTAINS(&quot;4,5,6&quot;,STR(MONTH([date_collected])))&#10;THEN &apos;Q2&apos; ELSEIF &#10;CONTAINS(&quot;7,8,9&quot;,STR(MONTH([date_collected])))&#10;THEN &apos;Q3&apos; ELSEIF &#10;CONTAINS(&quot;10,11,12&quot;,STR(MONTH([date_collected])))&#10;THEN &apos;Q4&apos; END' />
            <calculation column='[Minstay (group)]' formula='CASE [minstay]&#10;  WHEN 100 THEN &quot;100+&quot;&#10;  WHEN 120 THEN &quot;100+&quot;&#10;  WHEN 122 THEN &quot;100+&quot;&#10;  WHEN 153 THEN &quot;100+&quot;&#10;  WHEN 180 THEN &quot;100+&quot;&#10;  WHEN 183 THEN &quot;100+&quot;&#10;  WHEN 360 THEN &quot;100+&quot;&#10;  WHEN 365 THEN &quot;100+&quot;&#10;  WHEN 1000 THEN &quot;100+&quot;&#10;  WHEN 11 THEN &quot;11 - 31&quot;&#10;  WHEN 12 THEN &quot;11 - 31&quot;&#10;  WHEN 13 THEN &quot;11 - 31&quot;&#10;  WHEN 14 THEN &quot;11 - 31&quot;&#10;  WHEN 15 THEN &quot;11 - 31&quot;&#10;  WHEN 16 THEN &quot;11 - 31&quot;&#10;  WHEN 17 THEN &quot;11 - 31&quot;&#10;  WHEN 18 THEN &quot;11 - 31&quot;&#10;  WHEN 19 THEN &quot;11 - 31&quot;&#10;  WHEN 20 THEN &quot;11 - 31&quot;&#10;  WHEN 21 THEN &quot;11 - 31&quot;&#10;  WHEN 22 THEN &quot;11 - 31&quot;&#10;  WHEN 23 THEN &quot;11 - 31&quot;&#10;  WHEN 24 THEN &quot;11 - 31&quot;&#10;  WHEN 25 THEN &quot;11 - 31&quot;&#10;  WHEN 26 THEN &quot;11 - 31&quot;&#10;  WHEN 27 THEN &quot;11 - 31&quot;&#10;  WHEN 28 THEN &quot;11 - 31&quot;&#10;  WHEN 29 THEN &quot;11 - 31&quot;&#10;  WHEN 30 THEN &quot;11 - 31&quot;&#10;  WHEN 31 THEN &quot;11 - 31&quot;&#10;  WHEN 32 THEN &quot;32 - 99&quot;&#10;  WHEN 36 THEN &quot;32 - 99&quot;&#10;  WHEN 40 THEN &quot;32 - 99&quot;&#10;  WHEN 45 THEN &quot;32 - 99&quot;&#10;  WHEN 50 THEN &quot;32 - 99&quot;&#10;  WHEN 60 THEN &quot;32 - 99&quot;&#10;  WHEN 70 THEN &quot;32 - 99&quot;&#10;  WHEN 90 THEN &quot;32 - 99&quot;&#10;  ELSE STR([minstay])&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='205532' timestamp-start='2017-12-01 21:20:58.294' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_2508716152417083392</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_2508716152417083392]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_2508716152417083392</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1736</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>28000.0</statistic>
                <statistic aggregation='Count' datatype='integer'>179363</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_5745889495740887044</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_5745889495740887044]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_5745889495740887044</remote-alias>
              <ordinal>1</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Q1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Q4&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>205532</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Geometry</remote-name>
              <remote-type>0</remote-type>
              <local-name>[Geometry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Geometry</remote-alias>
              <ordinal>2</ordinal>
              <family>neighbourhoods.geojson</family>
              <local-type>spatial</local-type>
              <aggregation>Count</aggregation>
              <approx-count>37</approx-count>
              <spatial-prim-flags>6</spatial-prim-flags>
              <precision>-1</precision>
              <scale>1</scale>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Count' datatype='integer'>205532</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1073741823</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;spatial&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Homes</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Homes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Homes</remote-alias>
              <ordinal>3</ordinal>
              <family>homes &amp; residents</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>652</statistic>
                <statistic aggregation='Max' datatype='integer'>26983</statistic>
                <statistic aggregation='Count' datatype='integer'>204761</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Neighborhood</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Neighborhood]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Neighborhood</remote-alias>
              <ordinal>4</ordinal>
              <family>homes &amp; residents</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bayview&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Addition&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>204761</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>205532</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Residents per home</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Residents per home]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Residents per home</remote-alias>
              <ordinal>6</ordinal>
              <family>homes &amp; residents</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>1.54787635084192</statistic>
                <statistic aggregation='Max' datatype='real'>3.6709141274238228</statistic>
                <statistic aggregation='Count' datatype='integer'>204761</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Residents</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Residents]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Residents</remote-alias>
              <ordinal>7</ordinal>
              <family>homes &amp; residents</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1759</statistic>
                <statistic aggregation='Max' datatype='integer'>55383</statistic>
                <statistic aggregation='Count' datatype='integer'>204761</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>accommodates</remote-name>
              <remote-type>16</remote-type>
              <local-name>[accommodates]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>accommodates</remote-alias>
              <ordinal>8</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>18</statistic>
                <statistic aggregation='Count' datatype='integer'>197111</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bedrooms</remote-name>
              <remote-type>16</remote-type>
              <local-name>[bedrooms]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bedrooms</remote-alias>
              <ordinal>9</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Count' datatype='integer'>194842</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>borough</remote-name>
              <remote-type>129</remote-type>
              <local-name>[borough]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>borough</remote-alias>
              <ordinal>10</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;NA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;NA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>205532</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;NA&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_collected</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date_collected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date_collected</remote-alias>
              <ordinal>11</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>28</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2013-11-17#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-07-10#</statistic>
                <statistic aggregation='Count' datatype='integer'>205532</statistic>
                <statistic aggregation='Median' datatype='date'>#2016-07-17#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>host_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[host_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>host_id</remote-alias>
              <ordinal>12</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18016</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;100004287&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;NA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>205532</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>last_modified</remote-name>
              <remote-type>135</remote-type>
              <local-name>[last_modified]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>last_modified</remote-alias>
              <ordinal>13</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>184825</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2013-11-29 21:57:38#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2017-04-08 21:21:29.477#</statistic>
                <statistic aggregation='Count' datatype='integer'>188797</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>14</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23918</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>37.708278</statistic>
                <statistic aggregation='Max' datatype='real'>37.831093000000003</statistic>
                <statistic aggregation='Count' datatype='integer'>205532</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>15</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24071</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-122.513065</statistic>
                <statistic aggregation='Max' datatype='real'>-122.363243</statistic>
                <statistic aggregation='Count' datatype='integer'>205532</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>minstay</remote-name>
              <remote-type>2</remote-type>
              <local-name>[minstay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>minstay</remote-alias>
              <ordinal>16</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1000</statistic>
                <statistic aggregation='Count' datatype='integer'>134055</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nbhd_match</remote-name>
              <remote-type>129</remote-type>
              <local-name>[nbhd_match]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nbhd_match</remote-alias>
              <ordinal>17</ordinal>
              <family>homes &amp; residents</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bayview&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Addition&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>204761</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighborhood1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighborhood]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighborhood1</remote-alias>
              <ordinal>18</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>37</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bayview&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Addition&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>205532</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighbourhood</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighbourhood]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighbourhood</remote-alias>
              <ordinal>19</ordinal>
              <family>neighbourhoods.geojson</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>37</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bayview&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western Addition&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>205532</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighbourhood_group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighbourhood_group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighbourhood_group</remote-alias>
              <ordinal>20</ordinal>
              <family>neighbourhoods.geojson</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>overall_satisfaction</remote-name>
              <remote-type>4</remote-type>
              <local-name>[overall_satisfaction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>overall_satisfaction</remote-alias>
              <ordinal>21</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>5.0</statistic>
                <statistic aggregation='Count' datatype='integer'>159178</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>2</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>22</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1080</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>30000</statistic>
                <statistic aggregation='Count' datatype='integer'>205532</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reviews</remote-name>
              <remote-type>2</remote-type>
              <local-name>[reviews]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>reviews</remote-alias>
              <ordinal>23</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>445</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>513</statistic>
                <statistic aggregation='Count' datatype='integer'>205483</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[room_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_id</remote-alias>
              <ordinal>24</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>25138</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10000073&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9999999&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>205532</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>room_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[room_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>room_type</remote-alias>
              <ordinal>25</ordinal>
              <family>airbnb_union.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Entire home/apt&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Shared room&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>205489</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Minstay (group)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Minstay (group)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Minstay (group)</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <scale>1</scale>
              <width>32</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>134055</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;11 - 31&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>128</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.497951' group-percentage='0.135246' measure-ordering='alphabetic' measure-percentage='0.366803' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[sum:Number of Records:ok]' type='palette'>
            <map to='#43719f'>
              <bucket>24096</bucket>
            </map>
            <map to='#43719f'>
              <bucket>24692</bucket>
            </map>
            <map to='#43719f'>
              <bucket>25542</bucket>
            </map>
            <map to='#43719f'>
              <bucket>32416</bucket>
            </map>
            <map to='#43719f'>
              <bucket>33501</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>16596</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>106746</bucket>
            </map>
            <map to='#6394be'>
              <bucket>5587</bucket>
            </map>
            <map to='#6394be'>
              <bucket>7146</bucket>
            </map>
            <map to='#6394be'>
              <bucket>7399</bucket>
            </map>
            <map to='#6394be'>
              <bucket>7604</bucket>
            </map>
            <map to='#6394be'>
              <bucket>7783</bucket>
            </map>
            <map to='#6394be'>
              <bucket>7913</bucket>
            </map>
            <map to='#6394be'>
              <bucket>7983</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8037</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8051</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8076</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8236</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8286</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8310</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8319</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8391</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8397</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8407</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8508</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8539</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8549</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8669</bucket>
            </map>
            <map to='#6394be'>
              <bucket>8899</bucket>
            </map>
            <map to='#6394be'>
              <bucket>16710</bucket>
            </map>
            <map to='#6394be'>
              <bucket>20132</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>58555</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>4771</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>5140</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>5202</bucket>
            </map>
            <map to='#89b8da'>
              <bucket>8344</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>24662</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>215</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17873</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>32671</bucket>
            </map>
            <map to='#e15759'>
              <bucket>30474</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>9542</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>16452</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:room_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#72a3c9'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
            <map to='#b3b7b8'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[attr:price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[avg:accommodates:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[avg:Calculation_2111554968758022147:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[avg:Number of Homes per Host (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[avg:price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[ctd:host_id:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[max:price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:accommodates:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Calculation_2111554968758022147:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Number of Homes per Host (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:avg:Number of Homes per Host (copy):qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:avg:Number of Homes per Host (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:avg:price:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:avg:price:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:avg:price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:ctd:host_id:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:ctd:host_id:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Homes per Host (copy):qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Homes per Host (copy):qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Homes per Host (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[prc50:price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[prc95:price:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:accommodates:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Calculation_2111554968758022147:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Homes per Host (copy):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[avg:latitude:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[avg:bedrooms:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:bedrooms:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:bedrooms:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[avg:reviews:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:reviews:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:reviews:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[avg:minstay:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[max:minstay:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:minstay:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:minstay:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:overall_satisfaction:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:minstay:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:overall_satisfaction:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:price:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:price:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:price:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[avg:longitude:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[attr:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[avg:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[avg:overall_satisfaction:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[cum:sum:Calculation_2111554968758022147:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[cum:sum:Calculation_2111554968758022147:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[diff:avg:Calculation_2508716152417083392:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[diff:avg:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[diff:cum:sum:Calculation_2111554968758022147:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[diff:cum:sum:Calculation_2111554968758022147:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[diff:sum:Calculation_2111554968758022147:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[max:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:overall_satisfaction:ok]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcdf:avg:Calculation_2508716152417083392:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcdf:avg:Calculation_2508716152417083392:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcdf:avg:Calculation_2508716152417083392:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcdf:avg:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcrk:avg:Calculation_2508716152417083392:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcrk:avg:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcrk:med:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:avg:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:cum:sum:Calculation_2111554968758022147:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:cum:sum:Calculation_2111554968758022147:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Calculation_2111554968758022147:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Calculation_2508716152417083392:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[prc50:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[prc95:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[rank:med:Calculation_2508716152417083392:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[rank:med:Calculation_2508716152417083392:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[rank:med:Calculation_2508716152417083392:qk:6]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[rank:med:Calculation_2508716152417083392:qk:7]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[rank:med:Calculation_2508716152417083392:qk:9]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[rank:med:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Calculation_2508716152417083392:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[attr:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[ctd:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[min:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcdf:cnt:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:cnt:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:3]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:7]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:9]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Number of Rooms per Host (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;5, 6, 7 and 15 more&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3 &amp; 4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighborhood:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Financial District&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Presidio Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bayview&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ocean View&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crocker Amazon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pacific Heights&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inner Richmond&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Treasure Island/YBI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glen Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russian Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Diamond Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Parkside&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Noe Valley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bernal Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Outer Mission&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mission&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Western Addition&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Downtown/Civic Center&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Potrero Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Inner Sunset&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Twin Peaks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lakeshore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Visitacion Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nob Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Beach&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Golden Gate Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seacliff&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Excelsior&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Presidio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Castro/Upper Market&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Outer Richmond&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West of Twin Peaks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haight Ashbury&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South of Market&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chinatown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Outer Sunset&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Set 1:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Number of Homes per Host (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;18&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;46&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;25&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4+&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;22&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2 &amp; 3&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;33&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='2. Rental Types' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Room Type' />
        <param name='target' value='2. Rental Types' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 6' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Number of Homes per Host (group)' />
        <param name='target' value='Dashboard 6' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Data Points per year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Records per Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column-instance column='[date_collected]' derivation='Count' name='[cnt:date_collected:qk]' pivot='key' type='quantitative' />
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year-Trunc' name='[tyr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]' field-type='quantitative' major-origin='0' major-spacing='10000' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</rows>
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>30474</value>
                <value>#2015-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>9542</value>
                <value>#2014-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>215</value>
                <value>#2013-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:date_collected:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>58555</value>
                <value>#2017-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='Data_points collected per month'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Data Points (number of records)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Month' name='[mn:date_collected:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year-Trunc' name='[tyr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Quarter:&#9;</run>
                <run bold='true'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Calculation_5745889495740887044:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Date Collected:&#9;</run>
                <run bold='true'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Records:&#9;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[mn:date_collected:ok]</rows>
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Data_points collected per quarter'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Records per quarter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column caption='Quarter' datatype='string' name='[Calculation_5745889495740887044]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(&quot;1,2,3&quot;,STR(MONTH([date_collected])))&#10;THEN &apos;Q1&apos; ELSEIF &#10;CONTAINS(&quot;4,5,6&quot;,STR(MONTH([date_collected])))&#10;THEN &apos;Q2&apos; ELSEIF &#10;CONTAINS(&quot;7,8,9&quot;,STR(MONTH([date_collected])))&#10;THEN &apos;Q3&apos; ELSEIF &#10;CONTAINS(&quot;10,11,12&quot;,STR(MONTH([date_collected])))&#10;THEN &apos;Q4&apos; END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_5745889495740887044]' derivation='None' name='[none:Calculation_5745889495740887044:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year-Trunc' name='[tyr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Calculation_5745889495740887044:nk]' value='32' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#e6e6e6' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Quarter:&#9;</run>
                <run bold='true'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Calculation_5745889495740887044:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Date Collected:&#9;</run>
                <run bold='true'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Records:&#9;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Calculation_5745889495740887044:nk]</rows>
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Dates_collected_per_year1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Data Collections per Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column-instance column='[date_collected]' derivation='CountD' name='[ctd:date_collected:qk]' pivot='key' type='quantitative' />
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year-Trunc' name='[tyr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[ctd:date_collected:qk]' scope='cols' value='Number of dates' />
            <format attr='subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[ctd:date_collected:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[ctd:date_collected:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[ctd:date_collected:qk]' value='normal' />
            <format attr='font-size' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[ctd:date_collected:qk]' value='15' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[ctd:date_collected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Dates_collected_per_year2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Data Collections per Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column-instance column='[date_collected]' derivation='CountD' name='[ctd:date_collected:qk]' pivot='key' type='quantitative' />
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Month' name='[mn:date_collected:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date_collected]' derivation='Year-Trunc' name='[tyr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-family' data-class='subtotal' value='Tableau Regular' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#f5f5f5' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' value='Tableau Regular' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='band-color' scope='rows' value='#f5f5f5' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[ctd:date_collected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[mn:date_collected:ok]</rows>
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Hosts with multiple homes (HMH)'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column caption='Number of Homes per Host' datatype='integer' name='[Number of Homes per Host (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [host_id] : COUNTD(IF [room_type] = &quot;Entire home/apt&quot; THEN &#10;[room_id] END) }' />
            </column>
            <column datatype='string' name='[Number of Homes per Host (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Number of Homes per Host (copy)]' new-bin='true'>
                <bin default-name='true' value='&quot;0&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='true' value='&quot;1&quot;'>
                  <value>1</value>
                </bin>
                <bin default-name='true' value='&quot;2 &amp; 3&quot;'>
                  <value>2</value>
                  <value>3</value>
                </bin>
                <bin default-name='false' value='&quot;4+&quot;'>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>14</value>
                  <value>15</value>
                  <value>16</value>
                  <value>19</value>
                  <value>21</value>
                  <value>24</value>
                  <value>32</value>
                  <value>37</value>
                  <value>38</value>
                  <value>41</value>
                  <value>54</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Homes per Host (copy)]' derivation='Avg' name='[avg:Number of Homes per Host (copy):qk]' pivot='key' type='quantitative' />
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column datatype='string' name='[host_id]' role='dimension' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[host_id]' derivation='CountD' name='[pcto:ctd:host_id:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[host_id]' derivation='CountD' name='[pcto:ctd:host_id:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Room Id' datatype='string' name='[room_id]' role='dimension' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[Number of Homes per Host (copy)]' derivation='Sum' name='[sum:Number of Homes per Host (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year-Trunc' name='[tyr:date_collected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year' name='[yr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]'>
            <groupfilter function='member' level='[none:room_type:nk]' member='&quot;Entire home/apt&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[yr:date_collected:ok]' context='true'>
            <groupfilter from='2014' function='range' level='[yr:date_collected:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[yr:date_collected:ok]</column>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]' value='true' />
            <format attr='break-on-special' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]' value='true' />
            <format attr='show-null-value-warning' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]' value='true' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#d4d4d4' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]' value='Number of Homes &#10;per Host' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_3' value='arrow' />
            <format attr='line-end' id='annotation_1' value='arrow' />
            <format attr='line-end' id='annotation_2' value='arrow' />
            <format attr='line-end' id='annotation_4' value='arrow' />
            <format attr='line-end-size' id='annotation_1' value='small' />
            <format attr='line-end-size' id='annotation_2' value='small' />
            <format attr='line-end-size' id='annotation_4' value='small' />
            <format attr='line-end-size' id='annotation_3' value='small' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]' />
              <lod column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]' />
              <lod column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:ctd:host_id:qk:4]' />
              <lod column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Homes per Host (copy):qk]' />
              <lod column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[avg:Number of Homes per Host (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</rows>
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</cols>
        <mark-labels>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;1&quot;</value>
                <value>#2017-01-01 00:00:00#</value>
                <value>0.78148801895688758</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;2 &amp; 3&quot;</value>
                <value>#2017-01-01 00:00:00#</value>
                <value>0.14981744323814589</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;4+&quot;</value>
                <value>#2017-01-01 00:00:00#</value>
                <value>0.06869453780496651</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;1&quot;</value>
                <value>4934</value>
                <value>#2014-01-01 00:00:00#</value>
                <value>0.72218969555035128</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;2 &amp; 3&quot;</value>
                <value>1204</value>
                <value>#2014-01-01 00:00:00#</value>
                <value>0.17622950819672131</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;4+&quot;</value>
                <value>694</value>
                <value>#2014-01-01 00:00:00#</value>
                <value>0.1015807962529274</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Why is this not showing percent of total per year, like in Sheet 13?</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2014-01-03 16:19:44.030#'>
                  <node-reference>
                    <axis>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.18867956243352807'>
                  <node-reference>
                    <axis>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:7]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2014-06-05 10:43:00.228#'>
                  <node-reference>
                    <axis>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.14851691012643473'>
                  <node-reference>
                    <axis>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:7]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='11.6619' text-width='159'>
            <formatted-text>
              <run fontalignment='0' fontsize='9'>In 2014 multi-home owners had more than a fourth (~27%) of all the available homes on AirBnb in San Francisco.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;2 &amp; 3&quot;</value>
                    <value>1204</value>
                    <value>#2014-01-01 00:00:00#</value>
                    <value>0.17622950819672131</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='80' y='-158' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='208'>
            <formatted-text>
              <run fontsize='9'>In 2014 2.5% of the SF AIrBnB hosts controlled more than 10% of the market, averaging 7.6 homes each..</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:ctd:host_id:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;4+&quot;</value>
                    <value>694</value>
                    <value>#2014-01-01 00:00:00#</value>
                    <value>0.0072876528731780866</value>
                    <value>0.1015807962529274</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='224' y='-100' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='215'>
            <formatted-text>
              <run fontalignment='0' fontsize='9'>In 2017 about 1.8% of the SF AirBnB hosts owned less than 7% of the available homes, with an average of 8 homes.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:ctd:host_id:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;4+&quot;</value>
                    <value>2841</value>
                    <value>#2017-01-01 00:00:00#</value>
                    <value>0.0097168704975707822</value>
                    <value>0.06869453780496651</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-175' y='-111' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='191'>
            <formatted-text>
              <run fontalignment='0' fontsize='9'>By 2017 the portion of homes owned by multi-home owners had decreased to less than 21%.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[avg:Number of Homes per Host (copy):qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Homes per Host (copy):qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:ctd:host_id:qk:4]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:8]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;2 &amp; 3&quot;</value>
                    <value>2.183423913043478</value>
                    <value>1607</value>
                    <value>6196</value>
                    <value>#2017-01-01 00:00:00#</value>
                    <value>0.11498203405717856</value>
                    <value>0.14981744323814589</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-127' y='-182' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Median for all of San Francisco'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column caption='Price per bedroom' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_2508716152417083392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[price] / [bedrooms]' />
            </column>
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_2508716152417083392]' derivation='Median' name='[med:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year-Trunc' name='[tyr:date_collected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year' name='[yr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[yr:date_collected:ok]'>
            <groupfilter from='2014' function='range' level='[yr:date_collected:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[yr:date_collected:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]' scope='rows' value='false' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</rows>
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Neighborhoods price ranks, bottom'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column caption='Rank: Price per bedroom' datatype='integer' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(MEDIAN([Calculation_2508716152417083392]))'>
                <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[neighbourhood]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Price per bedroom' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_2508716152417083392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[price] / [bedrooms]' />
            </column>
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_2508716152417083392]' derivation='Median' name='[med:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative' />
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year-Trunc' name='[tyr:date_collected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[neighborhood]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' included-values='in-range'>
            <min>32</min>
            <max>37</max>
          </filter>
          <slices>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' scope='rows' value='true' />
            <encoding attr='space' class='1' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' field-type='quantitative' fold='true' max='38' min='31' range-type='fixed' reverse='true' scope='rows' type='space' />
            <format attr='subtitle' class='1' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='1' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' field-type='quantitative' max='38' min='31' range-type='fixed' reverse='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]' />
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&#10;&#10;&lt;</run>
                <run>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]' />
              <lod column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]' />
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#ffffff' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.3756906986236572' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk] + [federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk])</rows>
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Neighborhoods price ranks, top'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column caption='Rank: Price per bedroom' datatype='integer' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(MEDIAN([Calculation_2508716152417083392]))'>
                <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[neighbourhood]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Price per bedroom' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_2508716152417083392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[price] / [bedrooms]' />
            </column>
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_2508716152417083392]' derivation='Median' name='[med:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative' />
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year-Trunc' name='[tyr:date_collected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[neighborhood]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[date_collected]' derivation='Year' name='[yr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' included-values='in-range'>
            <min>1</min>
            <max>7</max>
          </filter>
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[yr:date_collected:ok]'>
            <groupfilter from='2014' function='range' level='[yr:date_collected:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]</column>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[yr:date_collected:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' scope='rows' value='true' />
            <encoding attr='space' class='1' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' field-type='quantitative' fold='true' reverse='true' scope='rows' type='space' />
            <format attr='subtitle' class='1' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='1' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]' field-type='quantitative' major-show='false' minor-show='false' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]' scope='cols' value='true' />
            <encoding attr='space' class='1' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
            <format attr='height' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='529' />
                <format attr='maxheight' value='529' />
                <format attr='minwidth' value='829' />
                <format attr='maxwidth' value='829' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]' />
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&#10;&#10;&lt;</run>
                <run>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]' />
              <lod column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]' />
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#ffffff' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.3756906986236572' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk] + [federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk])</rows>
        <cols>([federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk] + [federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Room Type Distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#555555' fontname='Tableau Book' fontsize='14'>Types of AirBnB rentals in San Francisco</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year-Trunc' name='[tyr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]'>
            <groupfilter from='&quot;Entire home/apt&quot;' function='range' level='[none:room_type:nk]' to='&quot;Shared room&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Shared room&quot;</bucket>
              <bucket>&quot;Private room&quot;</bucket>
              <bucket>&quot;Entire home/apt&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='hnlabel' value='vertical' />
            <format attr='display' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:3]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:3]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]' />
              <lod column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Room Type:&#9;</run>
                <run bold='true'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count:&#9;</run>
                <run bold='true'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% of Total:&#9;</run>
                <run bold='true'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:3]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#ffffffe7' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</rows>
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:3]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 22'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column caption='Number of Homes per Host' datatype='integer' name='[Number of Homes per Host (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [host_id] : COUNTD(IF [room_type] = &quot;Entire home/apt&quot; THEN &#10;[room_id] END) }' />
            </column>
            <column datatype='string' name='[Number of Homes per Host (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Number of Homes per Host (copy)]' new-bin='true'>
                <bin default-name='true' value='&quot;0&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='true' value='&quot;1&quot;'>
                  <value>1</value>
                </bin>
                <bin default-name='true' value='&quot;2 &amp; 3&quot;'>
                  <value>2</value>
                  <value>3</value>
                </bin>
                <bin default-name='false' value='&quot;4+&quot;'>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>14</value>
                  <value>15</value>
                  <value>16</value>
                  <value>19</value>
                  <value>21</value>
                  <value>24</value>
                  <value>32</value>
                  <value>37</value>
                  <value>38</value>
                  <value>41</value>
                  <value>54</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column datatype='string' name='[host_id]' role='dimension' type='nominal' />
            <column caption='Neighborhood' datatype='string' name='[neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[neighborhood]' derivation='None' name='[none:neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Room Id' datatype='string' name='[room_id]' role='dimension' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[date_collected]' derivation='Year' name='[yr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]'>
            <groupfilter function='member' level='[none:neighborhood:nk]' member='&quot;Western Addition&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]'>
            <groupfilter function='member' level='[none:room_type:nk]' member='&quot;Entire home/apt&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[yr:date_collected:ok]'>
            <groupfilter function='member' level='[yr:date_collected:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]</column>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[yr:date_collected:ok]</column>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:7]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 29'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column caption='Rank: Price per bedroom' datatype='integer' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(MEDIAN([Calculation_2508716152417083392]))'>
                <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[neighbourhood]' ordering-type='Field' />
              </calculation>
            </column>
            <column caption='Price per bedroom' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_2508716152417083392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[price] / [bedrooms]' />
            </column>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Max' name='[max:date_collected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2508716152417083392]' derivation='Median' name='[med:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year-Trunc' name='[tyr:date_collected:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[neighbourhood]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[date_collected]' derivation='Year' name='[yr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[yr:date_collected:ok]'>
            <groupfilter from='2014' function='range' level='[yr:date_collected:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[yr:date_collected:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]' field-type='quantitative' max='-13618760.487375047' min='-13641832.927925896' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]' field-type='quantitative' max='4563249.1587882806' min='4537579.158705214' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]' value='104' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]' num-steps='4' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]' value='Median Price per Bedroom'>
              <formatted-text>
                <run>Median Price per Bedroom</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#00000000' />
            <format attr='line-end' id='annotation_0' value='dot' />
            <format attr='stroke-size' id='annotation_0' value='2' />
            <format attr='stroke-color' id='annotation_0' value='#b4b4b4' />
            <format attr='fill-color' id='annotation_3' value='#00000000' />
            <format attr='stroke-size' id='annotation_3' value='2' />
            <format attr='stroke-color' id='annotation_3' value='#b4b4b4' />
            <format attr='line-end' id='annotation_3' value='dot' />
            <format attr='fill-color' id='annotation_7' value='#00000000' />
            <format attr='stroke-color' id='annotation_7' value='#b4b4b4' />
            <format attr='stroke-size' id='annotation_7' value='2' />
            <format attr='line-end' id='annotation_7' value='dot' />
            <format attr='stroke-size' id='annotation_9' value='2' />
            <format attr='stroke-color' id='annotation_9' value='#b4b4b4' />
            <format attr='fill-color' id='annotation_9' value='#00000000' />
            <format attr='body-type' id='annotation_9' value='box' />
            <format attr='stroke-color' id='annotation_10' value='#b4b4b4' />
            <format attr='line-end' id='annotation_10' value='dot' />
            <format attr='line-end-size' id='annotation_10' value='smallest' />
            <format attr='fill-color' id='annotation_10' value='#00000000' />
            <format attr='stroke-color' id='annotation_11' value='#b4b4b4' />
            <format attr='line-end' id='annotation_11' value='dot' />
            <format attr='line-end-size' id='annotation_11' value='smallest' />
            <format attr='fill-color' id='annotation_11' value='#00000000' />
            <format attr='stroke-size' id='annotation_12' value='2' />
            <format attr='stroke-color' id='annotation_12' value='#b4b4b4' />
            <format attr='fill-color' id='annotation_12' value='#00000000' />
            <format attr='line-end-size' id='annotation_12' value='smallest' />
            <format attr='line-end' id='annotation_12' value='dot' />
            <format attr='stroke-size' id='annotation_13' value='2' />
            <format attr='stroke-color' id='annotation_13' value='#b4b4b4' />
            <format attr='line-end' id='annotation_13' value='dot' />
            <format attr='line-end-size' id='annotation_13' value='smallest' />
            <format attr='fill-color' id='annotation_13' value='#00000000' />
            <format attr='line-end' id='annotation_9' value='dot' />
            <format attr='line-end-size' id='annotation_9' value='smallest' />
            <format attr='line-end-size' id='annotation_0' value='smallest' />
            <format attr='line-end-size' id='annotation_3' value='smallest' />
            <format attr='line-end-size' id='annotation_7' value='smallest' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
            <format attr='enabled' id='181657' value='false' />
            <format attr='enabled' id='181658' value='false' />
            <format attr='enabled' id='181686' value='false' />
            <format attr='enabled' id='181708' value='false' />
            <format attr='enabled' id='181730' value='false' />
            <format attr='enabled' id='181732' value='false' />
            <format attr='enabled' id='181795' value='false' />
            <format attr='enabled' id='181796' value='false' />
            <format attr='enabled' id='181794' value='false' />
            <format attr='enabled' id='181866' value='false' />
            <format attr='enabled' id='181797' value='false' />
            <format attr='enabled' id='181793' value='false' />
            <format attr='enabled' id='181799' value='false' />
            <format attr='enabled' id='181798' value='false' />
            <format attr='enabled' id='182057' value='false' />
            <format attr='enabled' id='182484' value='false' />
            <format attr='enabled' id='182485' value='false' />
            <format attr='enabled' id='182486' value='false' />
            <format attr='enabled' id='181661' value='false' />
            <format attr='enabled' id='181662' value='false' />
            <format attr='enabled' id='181951' value='false' />
            <format attr='enabled' id='182071' value='false' />
            <format attr='enabled' id='182099' value='false' />
            <format attr='enabled' id='181665' value='false' />
            <format attr='enabled' id='181666' value='false' />
            <format attr='enabled' id='182041' value='false' />
            <format attr='enabled' id='182048' value='false' />
            <format attr='enabled' id='182002' value='false' />
            <format attr='enabled' id='182003' value='false' />
            <format attr='enabled' id='181943' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='Zip Code' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]' />
              <lod column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]' />
              <lod column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]' />
              <lod column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]' />
              <lod column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk:1]' />
              <geometry column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='right' />
                <format attr='text-orientation' value='0' />
                <format attr='wrap' value='auto' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='text-decoration' value='none' />
                <format attr='font-style' value='normal' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='normal' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-halo' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='280' />
                <format attr='maxheight' value='280' />
                <format attr='minwidth' value='215' />
                <format attr='maxwidth' value='215' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</rows>
        <cols>([federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok] * [federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)])</cols>
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>17026441898861993552</value>
                <value>216.5</value>
                <value>&quot;Presidio&quot;</value>
                <value>36</value>
                <value>#2017-01-01 00:00:00#</value>
                <value>37.803381098879427</value>
                <value>-122.46903209714236</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.525424' y='0.4' />
          </mark-label>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>17026441898861993552</value>
                <value>233.0</value>
                <value>&quot;Presidio&quot;</value>
                <value>88</value>
                <value>#2016-01-01 00:00:00#</value>
                <value>37.803381098879427</value>
                <value>-122.46903209714236</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.508475' y='0.422222' />
          </mark-label>
          <mark-label id='2'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>17123257878348033232</value>
                <value>192.25</value>
                <value>&quot;Marina&quot;</value>
                <value>1222</value>
                <value>#2015-01-01 00:00:00#</value>
                <value>37.806741500220859</value>
                <value>-122.43968735778419</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.447368' y='0.392857' />
          </mark-label>
          <mark-label id='3'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>17123257878348033232</value>
                <value>190.0</value>
                <value>&quot;Marina&quot;</value>
                <value>434</value>
                <value>#2014-01-01 00:00:00#</value>
                <value>37.806741500220859</value>
                <value>-122.43968735778419</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.710526' y='0.535714' />
          </mark-label>
          <mark-label id='4'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[max:date_collected:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>16927051832302670452</value>
                <value>#2016-12-23#</value>
                <value>78.0</value>
                <value>&quot;Lakeshore&quot;</value>
                <value>748</value>
                <value>#2016-01-01 00:00:00#</value>
                <value>37.726754972278655</value>
                <value>-122.50158593837075</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.491525' y='0.473684' />
          </mark-label>
          <mark-label id='5'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6176204942700079783</value>
                <value>65.0</value>
                <value>&quot;Treasure Island/YBI&quot;</value>
                <value>142</value>
                <value>#2017-01-01 00:00:00#</value>
                <value>37.815175596906286</value>
                <value>-122.36759718506667</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.433333' y='0.653061' />
          </mark-label>
          <mark-label id='6'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6176204942700079783</value>
                <value>79.0</value>
                <value>&quot;Treasure Island/YBI&quot;</value>
                <value>3</value>
                <value>#2015-01-01 00:00:00#</value>
                <value>37.815175596906286</value>
                <value>-122.36759718506667</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.4' y='0.683673' />
          </mark-label>
          <mark-label id='7'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                  <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6777391686087301782</value>
                <value>51.0</value>
                <value>&quot;Visitacion Valley&quot;</value>
                <value>13</value>
                <value>#2014-01-01 00:00:00#</value>
                <value>37.712961232458206</value>
                <value>-122.41682310272559</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.350877' y='0.566667' />
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='112'>
            <formatted-text>
              <run fontcolor='#4e79a7' fontsize='8'>Most $ </run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#4e79a7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]&gt; </run>
              <run fontalignment='2'>Æ&#10;</run>
              <run bold='true' fontalignment='2' fontcolor='#4e79a7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]&gt;</run>
              <run fontalignment='2' fontcolor='#4e79a7' fontsize='8'>/bedroom</run>
              <run fontalignment='2'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>17123257878348033232</value>
                    <value>190.0</value>
                    <value>&quot;Marina&quot;</value>
                    <value>434</value>
                    <value>#2014-01-01 00:00:00#</value>
                    <value>37.806741500220859</value>
                    <value>-122.43968735778419</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-1' y='-50' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='95'>
            <formatted-text>
              <run fontcolor='#75a1c7' fontsize='8'>Least $:</run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#75a1c7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]&gt; </run>
              <run fontalignment='2'>Æ&#10;</run>
              <run bold='true' fontalignment='2' fontcolor='#75a1c7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]&gt;</run>
              <run fontalignment='2' fontcolor='#75a1c7' fontsize='8'>/bedroom</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>6777391686087301782</value>
                    <value>51.0</value>
                    <value>&quot;Visitacion Valley&quot;</value>
                    <value>13</value>
                    <value>#2014-01-01 00:00:00#</value>
                    <value>37.712961232458206</value>
                    <value>-122.41682310272559</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='73' y='-78' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='0' text-width='114'>
            <formatted-text>
              <run fontcolor='#4e79a7' fontsize='8'>Most $ </run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#4e79a7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]&gt; </run>
              <run fontalignment='2'>Æ&#10;</run>
              <run bold='true' fontalignment='2' fontcolor='#4e79a7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]&gt;</run>
              <run fontalignment='2' fontcolor='#4e79a7' fontsize='8'>/bedroom</run>
              <run fontalignment='2'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk:1]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>17123257878348033232</value>
                    <value>192.25</value>
                    <value>&quot;Marina&quot;</value>
                    <value>1222</value>
                    <value>#2015-01-01 00:00:00#</value>
                    <value>37.806741500220859</value>
                    <value>-122.43968735778419</value>
                    <value>1</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-1' y='-50' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='12' text-width='92'>
            <formatted-text>
              <run fontcolor='#75a1c7' fontsize='8'>Least $ </run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#75a1c7' fontsize='8'>Treasure Island </run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#75a1c7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]&gt;</run>
              <run fontcolor='#75a1c7' fontsize='8'>/bedroom</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk:1]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>6176204942700079783</value>
                    <value>79.0</value>
                    <value>&quot;Treasure Island/YBI&quot;</value>
                    <value>3</value>
                    <value>#2015-01-01 00:00:00#</value>
                    <value>37.815175596906286</value>
                    <value>-122.36759718506667</value>
                    <value>37</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-11' y='-73' />
          </annotation>
          <annotation class='point' id='10' mark-position='1' pullback='12' text-width='99'>
            <formatted-text>
              <run fontcolor='#4e79a7' fontsize='8'>Most $ </run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#4e79a7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]&gt; </run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#4e79a7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]&gt;</run>
              <run fontcolor='#4e79a7' fontsize='8'>/bedroom</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk:1]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>17026441898861993552</value>
                    <value>233.0</value>
                    <value>&quot;Presidio&quot;</value>
                    <value>88</value>
                    <value>#2016-01-01 00:00:00#</value>
                    <value>37.803381098879427</value>
                    <value>-122.46903209714236</value>
                    <value>1</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='13' y='-48' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='12' text-width='92'>
            <formatted-text>
              <run fontcolor='#4e79a7' fontsize='8'>Most $ </run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#4e79a7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]&gt; </run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#4e79a7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]&gt;</run>
              <run fontcolor='#4e79a7' fontsize='8'>/bedroom</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk:1]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>17026441898861993552</value>
                    <value>216.5</value>
                    <value>&quot;Presidio&quot;</value>
                    <value>36</value>
                    <value>#2017-01-01 00:00:00#</value>
                    <value>37.803381098879427</value>
                    <value>-122.46903209714236</value>
                    <value>1</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='16' y='-47' />
          </annotation>
          <annotation class='point' id='12' mark-position='1' pullback='0' text-width='100'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#75a1c7' fontsize='8'>Least $ </run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0' fontcolor='#75a1c7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]&gt; </run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0' fontcolor='#75a1c7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]&gt;</run>
              <run fontalignment='0' fontcolor='#75a1c7' fontsize='8'>/bedroom</run>
              <run fontalignment='0'>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk:1]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>16927051832302670452</value>
                    <value>78.0</value>
                    <value>&quot;Lakeshore&quot;</value>
                    <value>748</value>
                    <value>#2016-01-01 00:00:00#</value>
                    <value>37.726754972278655</value>
                    <value>-122.50158593837075</value>
                    <value>37</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-34' y='-43' />
          </annotation>
          <annotation class='point' id='13' mark-position='1' pullback='12' text-width='90'>
            <formatted-text>
              <run fontcolor='#75a1c7' fontsize='8'>Least $ </run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#75a1c7' fontsize='8'>Treasure Island </run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#75a1c7' fontsize='8'>&lt;[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]&gt;</run>
              <run fontcolor='#75a1c7' fontsize='8'>/bedroom</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[clct:Geometry:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighbourhood:nk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Latitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Longitude (generated)]</field>
                      <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk:1]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>6176204942700079783</value>
                    <value>65.0</value>
                    <value>&quot;Treasure Island/YBI&quot;</value>
                    <value>142</value>
                    <value>#2017-01-01 00:00:00#</value>
                    <value>37.815175596906286</value>
                    <value>-122.36759718506667</value>
                    <value>37</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-16' y='-73' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sheet 31'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column caption='Price per bedroom' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_2508716152417083392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[price] / [bedrooms]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Bedrooms' datatype='integer' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2508716152417083392]' derivation='None' name='[none:Calculation_2508716152417083392:qk]' pivot='key' type='quantitative' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Calculation_2508716152417083392:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>1000.0</max>
          </filter>
          <slices>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Calculation_2508716152417083392:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</rows>
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Calculation_2508716152417083392:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 33'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column datatype='string' name='[host_id]' role='dimension' type='nominal' />
            <column-instance column='[host_id]' derivation='None' name='[none:host_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year' name='[yr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:host_id:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]'>
            <groupfilter function='member' level='[none:room_type:nk]' member='&quot;Entire home/apt&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]' included-values='in-range'>
            <min>2</min>
            <max>78</max>
          </filter>
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[yr:date_collected:ok]'>
            <groupfilter function='member' level='[yr:date_collected:ok]' member='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[yr:date_collected:ok]</column>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</column>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]' field-type='quantitative' max='200' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]</rows>
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:host_id:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 35'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column datatype='string' name='[host_id]' role='dimension' type='nominal' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column caption='Room Id' datatype='string' name='[room_id]' role='dimension' type='nominal' />
            <column-instance column='[date_collected]' derivation='Year-Trunc' name='[tyr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[io:Set 1:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#f5f5f5' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</rows>
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk:3]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 39'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column caption='Number of Homes per Host' datatype='integer' name='[Number of Homes per Host (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [host_id] : COUNTD(IF [room_type] = &quot;Entire home/apt&quot; THEN &#10;[room_id] END) }' />
            </column>
            <column datatype='string' name='[Number of Homes per Host (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Number of Homes per Host (copy)]' new-bin='true'>
                <bin default-name='true' value='&quot;0&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='true' value='&quot;1&quot;'>
                  <value>1</value>
                </bin>
                <bin default-name='true' value='&quot;2 &amp; 3&quot;'>
                  <value>2</value>
                  <value>3</value>
                </bin>
                <bin default-name='false' value='&quot;4+&quot;'>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>14</value>
                  <value>15</value>
                  <value>16</value>
                  <value>19</value>
                  <value>21</value>
                  <value>24</value>
                  <value>32</value>
                  <value>37</value>
                  <value>38</value>
                  <value>41</value>
                  <value>54</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column datatype='string' name='[host_id]' role='dimension' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Homes per Host (copy)]' derivation='Sum' name='[pcto:sum:Number of Homes per Host (copy):qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column caption='Room Id' datatype='string' name='[room_id]' role='dimension' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Year-Trunc' name='[tyr:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]'>
            <groupfilter function='member' level='[none:room_type:nk]' member='&quot;Entire home/apt&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Records:qk]' />
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]' />
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[pcto:sum:Number of Homes per Host (copy):qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]</rows>
        <cols>([federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok] / [federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 41'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column datatype='string' name='[Number of Homes per Host (copy 4) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Number of Homes per Host (copy 4)]' new-bin='true'>
                <bin default-name='true' value='&quot;0&quot;'>
                  <value>0</value>
                </bin>
                <bin default-name='true' value='&quot;1&quot;'>
                  <value>1</value>
                </bin>
                <bin default-name='true' value='&quot;2 &amp; 3&quot;'>
                  <value>2</value>
                  <value>3</value>
                </bin>
                <bin default-name='false' value='&quot;4+&quot;'>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>60</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>71</value>
                  <value>72</value>
                  <value>76</value>
                  <value>78</value>
                  <value>79</value>
                  <value>83</value>
                  <value>84</value>
                  <value>88</value>
                  <value>99</value>
                  <value>104</value>
                  <value>110</value>
                  <value>131</value>
                  <value>132</value>
                  <value>138</value>
                  <value>158</value>
                  <value>159</value>
                  <value>164</value>
                  <value>178</value>
                  <value>213</value>
                  <value>261</value>
                  <value>269</value>
                  <value>355</value>
                  <value>379</value>
                  <value>984</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Homes per Host (copy 4)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [host_id] : COUNTD(IF [room_type] = &quot;Entire home/apt&quot; THEN &#10;[room_id] END) }' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column datatype='string' name='[host_id]' role='dimension' type='nominal' />
            <column caption='Room Id' datatype='string' name='[room_id]' role='dimension' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date_collected]' derivation='Day-Trunc' name='[tdy:date_collected:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (copy 4) (group)]</rows>
        <cols>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tdy:date_collected:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 42'>
      <table>
        <view>
          <datasources>
            <datasource caption='airbnb_union' name='federated.0gonxai1jbwhnj1fdvey906ims1a' />
          </datasources>
          <datasource-dependencies datasource='federated.0gonxai1jbwhnj1fdvey906ims1a'>
            <column caption='Number of Homes per Host' datatype='integer' name='[Number of Homes per Host (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [host_id] : COUNTD(IF [room_type] = &quot;Entire home/apt&quot; THEN &#10;[room_id] END) }' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Date Collected' datatype='date' name='[date_collected]' role='dimension' type='quantitative' />
            <column datatype='string' name='[host_id]' role='dimension' type='nominal' />
            <column-instance column='[Number of Homes per Host (copy)]' derivation='None' name='[none:Number of Homes per Host (copy):qk]' pivot='key' type='quantitative' />
            <column caption='Room Id' datatype='string' name='[room_id]' role='dimension' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[host_id &amp; Date Collected (Combined)]' direction='DESC' using='[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:Number of Records:qk]' />
          <filter class='quantitative' column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Number of Homes per Host (copy):qk]' included-values='in-range'>
            <min>0</min>
            <max>7</max>
          </filter>
          <slices>
            <column>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Number of Homes per Host (copy):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gonxai1jbwhnj1fdvey906ims1a].[cnt:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gonxai1jbwhnj1fdvey906ims1a].[host_id &amp; Date Collected (Combined)]</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='2. Rental Types'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='85750' id='1' name='Room Type Distribution' w='99600' x='0' y='14250' />
              <zone h='14250' id='6' leg-item-order='reversed' name='Room Type Distribution' pane-specification-id='0' param='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]' type='color' w='99600' x='0' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 4'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='19' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='51' h='7875' id='18' is-fixed='true' type='title' w='100000' x='0' y='0' />
            <zone h='92125' id='17' param='vert' type='layout-flow' w='100000' x='0' y='7875'>
              <zone h='92125' id='14' param='horz' type='layout-flow' w='100000' x='0' y='7875'>
                <zone h='92125' id='12' param='vert' type='layout-flow' w='100000' x='0' y='7875'>
                  <zone h='92125' id='9' param='horz' type='layout-flow' w='100000' x='0' y='7875'>
                    <zone fixed-size='869' h='92125' id='5' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='7875'>
                      <zone fixed-size='1028' h='92125' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='7875'>
                        <zone h='92125' id='7' name='Sheet 29' show-title='false' w='100000' x='0' y='7875' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone fixed-size='65' h='9500' id='15' is-fixed='true' name='Sheet 29' pane-specification-id='0' param='[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]' single-line='true' type='color' w='24100' x='600' y='1125' />
        <zone h='25500' id='20' name='Median for all of San Francisco' w='80200' x='4300' y='49125' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 5'>
      <style />
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <zones>
        <zone h='55000' id='1' name='Neighborhoods price ranks, top' w='100000' x='0' y='0' />
        <zone h='44333' id='6' name='Neighborhoods price ranks, bottom' show-title='false' w='100000' x='0' y='54167' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 6'>
      <style />
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='7' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' name='Hosts with multiple homes (HMH)' show-title='false' w='100000' x='0' y='0' />
        </zone>
        <zone h='12500' id='6' name='Hosts with multiple homes (HMH)' pane-specification-id='0' param='[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]' type='color' w='24250' x='65000' y='17833' />
      </zones>
    </dashboard>
    <dashboard name='Metadata'>
      <style />
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='15' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='6' param='vert' type='layout-flow' w='97500' x='0' y='0'>
              <zone h='99333' id='4' type='layout-basic' w='97500' x='0' y='0'>
                <zone h='99333' id='8' param='vert' type='layout-flow' w='50000' x='0' y='0'>
                  <zone fixed-size='153' h='27501' id='9' is-fixed='true' name='Dates_collected_per_year1' w='50000' x='0' y='0'>
                    <layout-cache fixed-size-w='302' type-h='fixed' type-w='fixed' />
                  </zone>
                  <zone h='51001' id='10' name='Dates_collected_per_year2' w='50000' x='0' y='27501'>
                    <layout-cache fixed-size-h='298' type-h='fixed' type-w='fixed' />
                  </zone>
                </zone>
                <zone h='99333' id='17' type='layout-basic' w='47500' x='50000' y='0'>
                  <zone h='27500' id='12' param='vert' type='layout-flow' w='47500' x='50000' y='0'>
                    <zone fixed-size='142' h='25668' id='11' is-fixed='true' name='Data Points per year' w='47500' x='50000' y='0'>
                      <layout-cache type-h='cell' type-w='fixed' />
                    </zone>
                  </zone>
                  <zone h='71833' id='18' param='vert' type='layout-flow' w='47500' x='50000' y='27500'>
                    <zone fixed-size='223' h='38501' id='13' is-fixed='true' name='Data_points collected per quarter' w='47500' x='50000' y='27500'>
                      <layout-cache fixed-size-w='322' type-h='fixed' type-w='fixed' />
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='20' h='100000' id='14' is-fixed='true' param='vert' type='layout-flow' w='2500' x='97500' y='0'>
              <zone h='4334' id='16' name='Data_points collected per quarter' pane-specification-id='0' param='[federated.0gonxai1jbwhnj1fdvey906ims1a].[sum:Number of Records:ok]' type='color' w='2500' x='97500' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 2' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='background-color' id='story-description_6' value='#00000000' />
          <format attr='border-style' id='story-description_6' value='none' />
          <format attr='border-style' id='story-description_7' value='none' />
          <format attr='background-color' id='story-description_7' value='#00000000' />
          <format attr='border-style' id='story-description_8' value='dotted' />
          <format attr='background-color' id='story-description_8' value='#ffffff' />
          <format attr='background-color' id='story-description_9' value='#00000000' />
          <format attr='border-style' id='story-description_9' value='none' />
          <format attr='border-style' id='story-description_10' value='none' />
          <format attr='background-color' id='story-description_10' value='#00000000' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4668' id='3' type='title' w='100000' x='0' y='0' />
            <zone fixed-size='147' h='16079' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4668' />
            <zone h='78838' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='20747'>
              <flipboard active-id='7' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Introduction' captured-sheet='' id='10' />
                  <story-point caption='Median price per bedroom AirBnB listings in San Francisco.' captured-sheet='Dashboard 4' id='3' />
                  <story-point caption='Neighborhood price rank' captured-sheet='Dashboard 5' id='4'>
                    <capturedDeltas>
                      <worksheet name='Neighborhoods price ranks, bottom'>
                        <selection-collection />
                      </worksheet>
                      <worksheet name='Neighborhoods price ranks, top'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='horizontal'>
                              <node-reference>
                                <axis>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Types of rentals' captured-sheet='2. Rental Types' id='5' />
                  <story-point caption='Hosts with multiple homes' captured-sheet='Dashboard 6' id='7' />
                  <story-point caption='Map of HMH (TBD)' captured-sheet='' id='8' />
                  <story-point caption='Summary (TBD)' captured-sheet='' id='9' />
                  <story-point caption='The datasets (metadata)' captured-sheet='Metadata' id='6'>
                    <capturedDeltas>
                      <worksheet name='Data Points per year'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='7365' hidden='true' id='6' story-point-id='3' type='text' w='40059' x='27657' y='20954'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book' fontsize='9'>Since 2014 the median price per bedroom has been decreasing  a little year by year. Fewer and fewer neighborhoods charges very high prices as time goes by.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='9336' hidden='true' id='7' story-point-id='4' type='text' w='50492' x='3248' y='15975'>
          <formatted-text>
            <run fontalignment='0' fontsize='9'>Which  neighborhoods are the priciest and most affordable stay fairly stable throughout the years 2014-17.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='7676' hidden='true' id='8' story-point-id='6' type='text' w='29724' x='55315' y='21680'>
          <formatted-text>
            <run fontsize='9'>Due to the relatively low amount of data available for 2013 I decided to exclude that year from the story, as including it would inacurately skew the findings.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='9440' hidden='true' id='9' story-point-id='5' type='text' w='42815' x='17913' y='20021'>
          <formatted-text>
            <run fontalignment='0' fontsize='10'>The distribution of rental types in San Francisco is fairly stable from year to year, with around 60% of the rental units being entire homes or apartments.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='5705' id='10' story-point-id='7' type='text' w='45374' x='9449' y='18568'>
          <formatted-text>
            <run fontalignment='0' fontsize='9'>In 2014, 27% of entire homes available were owned by multi-home owners. By 2017, only 21% of entire homes available were owned by multi-home owners, indicating that </run>
            <run bold='true' fontalignment='0' fontsize='10'>proportionally less landlords are renting out their units on AirBnB. Landlords may have been early adopters to Airbnb, while proportionally more individual homeowners have joined the service in later years.</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Dates_collected_per_year1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Data Points per year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Dates_collected_per_year2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Data_points collected per quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Data_points collected per month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Metadata'>
      <viewpoints>
        <viewpoint name='Data Points per year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Data_points collected per quarter'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Dates_collected_per_year1' />
        <viewpoint name='Dates_collected_per_year2' />
      </viewpoints>
      <active id='9' />
    </window>
    <window class='dashboard' name='2. Rental Types'>
      <viewpoints>
        <viewpoint name='Room Type Distribution' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Room Type Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Hosts with multiple homes (HMH)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gonxai1jbwhnj1fdvey906ims1a].[Number of Homes per Host (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 29'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='102'>
            <card pane-specification-id='0' param='[federated.0gonxai1jbwhnj1fdvey906ims1a].[med:Calculation_2508716152417083392:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='2' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Neighborhoods price ranks, top'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Neighborhoods price ranks, bottom'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gonxai1jbwhnj1fdvey906ims1a].[usr:Calculation2:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:neighborhood:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Story 2'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Median for all of San Francisco'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 29'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
          <map-scale-visibility value='0' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <device-preview selected='Desktop' visible='true' />
    </window>
    <window class='worksheet' name='Sheet 31'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints>
        <viewpoint name='Neighborhoods price ranks, bottom'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Neighborhoods price ranks, top'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview selected='Desktop' />
    </window>
    <window class='worksheet' name='Median for all of San Francisco'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 6'>
      <viewpoints>
        <viewpoint name='Hosts with multiple homes (HMH)'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Sheet 33'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 35'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gonxai1jbwhnj1fdvey906ims1a].[io:Set 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 39'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:room_type:nk]</field>
            <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:ok]</field>
            <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tyr:date_collected:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 41'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[tdy:date_collected:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 42'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gonxai1jbwhnj1fdvey906ims1a].[none:Number of Homes per Host (copy):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='2. Rental Types' width='192'>
      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
      o9wQDHBkKIHteAzFg2zWu3ieR6napKHYibDDVotx62C+8C8eTxIydQLBMI7dfr5DcCxikBs5
      8rz3/MqIBU2GkhZWJMRI0uQ7430Mp6O93pZ4TMe2iceTBHSDwYHM8x2CCSXIptR8TzBAw3bY
      bnVIhQPcXW8wUO6g+c9+X6p4ecLhELXqNgRCbN5fe3FD8EKxQmcX74Dq9WPlvazt9fH3sraX
      xw8bLmHdw/N8dP3ZTwPvdt2LWCsfjSiUtq8ZQIjXhQQglCYBCKVJAEJpEoBQmgQglCYBCKVJ
      AEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQg
      lCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJp
      EoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYB
      CKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQ
      mgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJ
      AEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQg
      lCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJp
      EoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYB
      CKVJAEJpEoBQmgQglPZ/4zJDVJUqtD8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
      jOb/AUJd08JHmJfiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
      sMYdzf8HhckXdGC5vugAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='104' name='Data Points per year' width='192'>
      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
      4P8BSoyDloSKsdEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Data_points collected per month' width='192'>
      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
    </thumbnail>
    <thumbnail height='104' name='Data_points collected per quarter' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='52' name='Dates_collected_per_year1' width='192'>
      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
      99N2+8RwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dates_collected_per_year2' width='192'>
      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
      L84rCCfj/wMa6SoKJ+qhgwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hosts with multiple homes (HMH)' width='192'>
      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
      Nqua/x+wyQM3cP9VeQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Median for all of San Francisco' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Metadata' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Neighborhoods price ranks, bottom' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Neighborhoods price ranks, top' width='192'>
      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
    </thumbnail>
    <thumbnail height='104' name='Room Type Distribution' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABoCAYAAACnk/+EAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJaElEQVR4nO3df0zU9x3H8Wfnrbf7Wu8qyzmoo5ZGYpAMB11YahqdukQSEgzt0jhX3RaW
      YGJCITu7SfAHCyE4MTASG0nnFrqmJSbKwkIDyZyZNWwhi8QpZR1mSNBpZT28Y35vh1/i/jgO
      DjkEgS/c9/N9P/zL75f78v0e3/d9P5/P917fzzOPHj16hBA29aXl3gEhlpMUgLA1KQBha1IA
      wtakAIStSQEIW5MCELYmBWAyXdeXexcSzsjIyHLvwgQpAGFrUgDC1hzLvQN28NMPupZ7F8QM
      5AogbM0GBWCgB4PoYSPu2qDfjz84c0fVmOF1RlhH13XirxVWoXATyGCwq5WTZzoIjS9xpRdy
      xJdHEgB+WqsP0TYwvi57D8f3b8U5/rPhoV5a3qvn4r1tnKjfjTu61TudlB9rIhDzm7YVV7E7
      x7sExyQWm7oFoH/Kr8/8i33HTpCT4gaCtFcf5DcXNuHbkULf+RraKKSuMQ+NIX5XWkFj50ZK
      Nnvpb6+lpuUWr+3MxXV/6mbHeI7vlVaRk+HFAQT7L3Cw5gSb6n5JhrYcByoWQt0C0LKobMyK
      WeBmTRKMYgBB/npplD1H8oics17ePLCNkvc+Qd/8Ol975QecyEvBbfRy49LfpmzWmZJFbkrM
      Vl94kWTgoekHJMygbgE8pu9CA43dyZTuS4VwL9dCHr61cnK988WNJI9exQDc3vEzfPQh8OVp
      2woH/QTDYf7Tf5WWMy18tdBHlnz6W5L6BWAM0VpfQVtfMsVVhyPNFP0hLtd61jpjfm5s7pv0
      d5/l2Ifd4/9Lx7clfRF3WCwltQsg3E9DSQ096flUnSrAGz3aFS4IXeOmTswntzHRWZ5Nytb9
      NG4FIxyk7/KH1JZV42soJ905+2tFYlF4GFSnvbqGntwiTvliTn4A51oyXAH+HZgcxNRvdBPw
      eHmac9jhdJOx4ycUega49Flw0fZcLB11C0C/QfvdZHxv5eIwDAzDiBnT1/j29mRaTn9M5A7A
      HT461UVm/iuPFYDB1O6tzp+bz9M7NHnfwPB/yl8CkPF1N8J6nlH1qRB6XytltW3Tlq/L91Fe
      kM7M9wF0WqvLJpZPSsfXUEqo411OtfVMWZNd6GN/Xvx+gK7rHD5/feEHJEyhbAHMjUHQP4zB
      SpKSnmYYxyCsjxI2DJyaG+cTelJSAIlN7U7wrBy4k+ZzB9eBU3M8VX9BJCZ1+wBCzIHNm0Dm
      03UdTZO7ZLFGRkZYtWrVcu8GIFcAYXNSAMLWpACErUkBCFuz+TDo0pBMcOKSK4CwNRsUgDmZ
      YKEGhZtA5mSCY/WeP0p9R4hSiUNalroFYFImOMoYbKe+I4CLNRKHtDB1m0BaFpWNvvGTH+Jm
      gvdPzQT3/P4TdIhkghvr2VuwGc9ovNPbT1NVCzt9P2N7MvJoFAtTtwAeE80EF76aCuHbXAt5
      WDMtE/wAA9C8KZEmzwyZ4P7WX9GV+UNeT09CD4WX6AiEGdRtAkUtdiZ4qJOaNic/P7UZiJz8
      jhWLvM9iyahdAIueCQ7SXNEEmW/CYB99xjD3RkM8e7WX1etfJjVJviBtNQoXQEwmuCh36oHG
      ZIKztMiaSCZ47ZO/4x/+goeZmWTSzblz3cAot0IBbrU1M7zlRxTtSDPvcIQp1C2AaCa4fDwT
      DDAGDqeDaCa45vTHbKksQItmgouqnpwJdqaxt6QkZn2Y5neq2Xi4kix130mlKftn02/fJMRd
      akuKpyyPZoLTCt4m//ohyoojuWFX9h6O53ohTib4YPFlIplg32OPPhlDe96JMYrC76TabB6I
      mW8meO4kE5zYbP65Nd9MsFCFbe4DCBGPzZtA5pNM8HSSCRYiQUgBCFuTAhC2JgUgbM3mw6BL
      QzLBiUuuAMLWbFAAkgkWM1O4CWRWJjjO/AHJ+dRVFiCj/dajbgGYlQk2Puf6QDIHThxmo3Ns
      PEezQh6VblHqFoBJ8wQzOsx9zyY2uB1E/gkrs83fb7HmCdYHeggErtHWrqHh4oUN3yArLWnJ
      jkMsLrULIDYSWVpC447ocgcuQjyMzQGPzW2aVC1jL42NMQv0Xo4W/4I36uplsmwLUngUyPxp
      UgHQXibD45FHo1iUugVgyjSp0Nd6mubO/okT/k7XWS4GnKx+1tzDEeZQ9uvQ5kyT6mPtvU7e
      PdlE30R7yUVh6RHyMuL3AyQRltiULYC5mX8kMqwHCeNA07QndqSkABKb2p3gWc0/EunU3DL2
      rwB1+wBCzIHNm0Dmk0jkdBKJFCJBSAEIW5MCELYmBSBszebDoEtDIpGJS64AwtZsUABmRSIN
      gn4/QV2mSLIyhZtA5k2TGh7s5HBVEwFcQEgikRambgGYFons52RVEzkHqtid5QXCDA2F5eS3
      KHULwKRI5OAfP2Igu5jyrOh3iJx4vfKtIKtStwAes1iRyP8O3Wfdmv/R2XqGzuvDPJeaza43
      dpAilwBLUr8TbAzRWltM7dkvJqdJHZv/NKmOlS4GOpr4u/ES2/M28/znZzlW1kC/9IUtSe0r
      wKJPkwrGA8g9UEfR+Atzcr7Js++U8afPghRluWd5tUg0Cl8BzMkEf8UDXZ3/iFmisX6DBwkF
      W5O6BWBSJjjtO7twdTdyYXD83oH/Ch90BXhJOgGWpGwewKxMcLoThq40U9F4kehtgMxCHyV5
      6fH3QyKRCU3ZApibBUyTaugMDT/A6V6N2zlzV0oKILGp3Qme1QKmSXVoeL3S7LE6dfsAQsyB
      zZtA5pNM8HSSCRYiQUgBCFuTAhC2JgUgbM3mw6BLQzLBiUuuAMLWbFAAMk2qmJnCTSAzMsE6
      54+W0XF3+m/L99VRkC7j/VajbgGYkgnWKChvID/63xVOxgZbKav5J9lpcvJbkboFYFIm2OF0
      TnnTOv/QxrrCClLVfSeVZoM+QEQ0E1z4aiqEb3Mt5GHNtEzwAwxA86ZEmjxxMsFT+Dtp6lnH
      97+bau7OC9Oo/7llDNFaX0FbX/JkJliffyY41pWzTXh2+khT/11UltpXgHA/DQcqaCOfqlOV
      5ERzkTGZ4ElzywRP0K/wfreHH+fHD8IIa1C4AMydJ7j33Pvw2ltkyCOBLE3dAjApEwxAuJff
      XoZ9u7KmrxOWomzrVb99kxB3qS0pnrI8mglOK3ib/OuHKCuO5IZd2Xs4nuuFOJngg8WXic0E
      93c0E8jeR448BcXybB6IWUAmeI4kE5zYlL0CzM0CMsFCCf8HkyErAo9k39sAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='64' name='Sheet 22' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 29' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9548k6X3n+XnCpi1f1VXVdnqmx3vDISlaSZShKFIkoVstVrcrngTcYQ+H
      g4B7cX/B3VvhcNjV7t0BWqwAmZVoJIqSSNGMI8dPm+lp7135Sp+R4Z57EflkRUZFZmWZNtPd
      X6C6qzIjnnieJ36/5/n5R0gpJfdxH/cotNvdgfu4j9uJ+wxwH/c07jPAfdzTuM8A93FPI5UB
      yuXyre7HfXxM4DgOjuPc7m7sGFIZ4L5h6D564W6jjfsi0H3c0zBudwduLyR+q8nC4hK+1Bkd
      n6SQ1amtrrBQrjM6sYuxYhYpQ5xamYZrMjZeQLTv9lt1KnWP4dERdNH3Qfdxh+LeZoCwxXs/
      /SmXmiEZzaWhjfPLz+/jh//0OqO7MlwvC/7V7/0ulVNv8vpbb1MSz/KHf/AFTEAGLu+/8j1e
      Pd7iD/+XbzF6b8/kxxb3tggkLJ7+7Bf5xte+wmdfeIKwucTlc2eYeeyX+PKXv8mndvl8cL7E
      yMwhfv0bv82IoXduXbx8gkvVYR6dHCa8jUO4j+3hHmcAjWwuS+nKUf7++z/m4ed+iVxOUBwf
      RWg60/tmqK42KYxOMprNoKnpcku88eZxnvncZ8lokvvSz8cX9zYDELJ49h3+y/eO87nf/Xe8
      eGgGLZS4ThMJlBYWsbJm9y1Scvqddzi35HPtwzf48OJZ3nr/9F1nHblXcE9LrjJo8Oprh/nM
      l79CkRalMhSHJnnngw95bJfLu+fKfOqbIzRrFZxGhZZbo1yuMvPUC/yrvVVC6bN45gb79ozf
      7qHcxxZxjzMA7Hn4INePvcV1IDOxny+8+CjPlCr88KdvcfATv8b+guCjX7zNqbkqhVH4+avv
      8cu/9UX2Do0BAeFnWuyaHkfcl4M+lhBp4dClUomRkZHb0Z87A1IShCGapiHuU3YXms0mQggy
      mczt7sqO4J7eAXpCCHRd3/i6+/jYI5UBgiC4q+I97mPn4HneXbUrpjKA7/tUq9UNb1YTIaUk
      bIsMOwEhxDqrStpnG90vpSSXy2EY995G5/s+TqtFLpvF831838P3AwxdxzAMdF1HCEGj2SSf
      y23q3TWbzYEWSEUfYRh2/b1d7BR9aJqWzgCiLQKEUiLDsK84oB6qaRqapnUa3giKQIUQqZ1X
      bSWvizNdckLVZ/HrwzDEsqwdY86PE3IJwvY8j6bjEIQB9XoNP/Cj+RWSybGJgQhUSkmr1ULX
      dYIwREDfuY3TQ5zwBnnORvQRhmHXNapdde0g9NG3J8nBqZU+CIKuDgkhKBQK5HK5TXG5F/j4
      YdD7+bG21CqyEeKrThiGuK5LtVrFcRyCIOhM2r2AJKGZpslQscjI0DCTY+PkszkAnFaLcrUy
      8Bx32o8tSBDRh5rjOHRdZ3h4GNM0k030hJSSlu8hWSPoNCaI7/aDQC2KHallo4vTCDr+WXxl
      zmazmxqkrmnoIuJkIUTn3vigevUhDVJKfN/vWgHUS2k0GpTLZer1+j3DAL2g5npkaLgzR5Va
      lVqjvul2ku8m7W+1Oid3pA0ax9B1BNFiZppmR2zbCn3EF+84NiUXqIGoQajGpJQ0m02CICCb
      zQ4kjwkhMHSjI25lMpkOIyRFHk3TMAxjw4HGv1erQ1J88zwP13XveSZQc6yJtXdZqVXxfX/L
      bcbpQ+3Aqu1ms4mmaWSz2YHmXhMCU48kdNu2MU2z016SPnRdH9hqlxSZemqHSTkq3un4lhP/
      X0qJ3layXNft2WayE/l8HsMwkFKmKleFQgFd12m1Wp3vezFDcltMbtEAjUYD3/exbRtd1/E8
      D13X0TQN3/cxTfOusnSkQc3/xOgYru/heR5Oy6HZcigahQ3vT+6yye/S6APoO7dp9GGaJoVC
      1J9Wq7VuBTcMo7Po1ut1giDoKbXEaaNz/4YjTTTSb9sJ2wqz+t6yLIIg6HRa3ZMkSkV0uVyu
      o7BqmtZFmErE8n2/5yqVpjD1UpZd1+1i0vgLVZN+tzMBQCaTwZZ25+/N7ozx+e5FH8lr1P+W
      ZXXtxmn0oXQKXdcZGhrq0IoSZ+IMlcvlqNVqPceQ1GellP1FoLgVJjnoNCZwHAcpJaZpYllW
      lwlSyWBxLld/Kxk9KetZltX5XT03l8uh63pX3+L9U1tvrz5u9IKVleNeEpGS4uZmkFxsku0p
      +L5Pq9VC0zRM0ySbzZLJZLokjCR9qB/XdTsilGVZHbFH/a6gdoPk/fH+KQPOQFag5KA2Igrf
      9/E8r0P8acSXprwEQYDnRdvwRjAMg3w+35H50kQz9aMmND4R/Vb1+ItTzHwf6xEXMTdj42+1
      WoRhSD6fx7btru/6vSfP8zr3btSvTCZDJpPpmNFV2+r/uAVoQytQvHPxTqmb0zrUUa5SbLLx
      1TxOXErkabVag3QHwzAYGhrqYgT1jPiz40pTcnXqNU51XZq8eR+DQdFGP1Ek+Q4UDaSZNRXd
      pOmVachmswwNDWHbdteOpp4R9zFtyAC9CCbpB1BI+gi6FI62BzI5Qcp0uZkVV9M0MpkMw8PD
      XZYnJf4AqZaBQeX6MAzvh4P0QZqYk9Tt0owQcfpI0pDaFZL04bpu5HgbcEFSi22xWKRYLGJZ
      FkDX/R1m6NeQ4sjkqh3n1iRBKUtNcovUdZ18Ps/w8HDHHhy/V103KJfH+5jNZikWi107jPpO
      TUjazhNH/IWqH8/z7otBKUiaIfvRR/I+ZalJMoNt2+TzeUZGRjBNc53Fxvf9nlJHP+i6TqFQ
      6CySSUV9y/EB/VZS1Vk1MMMwOkTveR6+76euHqZpbslGL4To6AbxuJ9eL2pQKLPsZnen++hN
      H3HCNwwDy7KwLKujvCoDRPJ+ZSbfrFiq3nsmkyGfz6+zFPYsjJX2wuM3J0WdOIIgwPf9jpgy
      NDSEaZoEQUC9Xu8p8liWhed5m+ZyhbjNeKcIttlsdvX5PvrTB5AaLhOHWuSUVKBMzo7j0Gw2
      U/UHtchtVkKI32/bNrZtd+ufvS6Omx7TuHmjACjHcTqae3xrVNubaZodRxREk6ZMXVtlAKBj
      HotvwYMowP2gzHD3UhxRPyTpo9/3aVALYZJJFG1omtbx/io6c12341Pa6jtQO0E8miE1I2xh
      YWFdCHHatjQITNPEMIyORi5l5PiKe15rtVqXOc22bXK53FbGCESTJYToMFXSEafGkrbK9IOS
      J+/lZJlms0mtVuvMgZpn9ftmoMRey7I6Dq24eKR8Mo1Go6v9QqGwqZiztDFYloXjOIPpAEqk
      2Qr3eZ5Hs9nsOLrUoOMKahwqgnM7K62yNlmWRbFYxLbtLuJP2q83kvHjCv9WFoG7GUocVnrf
      Zt6bcnLVarUusUgtvmlKdBiG2xZHlYSQzWYHYwBlW99Ojqzruql2fhULFHeMbEXZ6XWv2k6T
      ItsgYh5EzFQsFikUCp3t8z66ocyO26EPFZ+VhGVZ64wb2/HPKP1kQytQ3DOnaVrHxJjmeR0U
      aQNUO0Iul+skWodhOJBXOA3KaxgnasMwumJ7ki+qFwMIIcjn851o1O1su3cb4u9eEb/6XP2/
      mR0hvivHocIfCoVClz6wlR1AStkRp6CtWG/m5tTPYeDKaL7v47puVwBTvF21wrqu23FebBbx
      ILdsNtuZNGVxiKd6Jpk8bcsNguCelvkHxU4YB1qtVpd4HG9XCEGxWOxUpdjqTtNqtTrimm3b
      vRkgKTP31PY38XApJbVajWKx2DGLJlcRFcuxHSjlyff9jtKqdppMJtMRxQaZxHja3X2sIc3C
      lvx+s3OmDCJqtVcJ+Er8VkaI7SJuhdpyKMR2UKvVOkqxcnPvFOLh2GEYUqvVOumQwDrrlprg
      +Bh1Xe+KJ7mP3thp+lAFGZTDtFd8/1ahEquEEFF06o61nEA/+U/5CZRtNx6/s13ELT6qH81m
      k2az2ZEz+xG1iiHJZrNdk3UfO4e46JmG+Aq9nQy1NCSli5vGAMkBpg1YiSlxB8d2ww6EEKk+
      hFarRblcxrIsMplMZ6dQ3kGll2wmG0xKSct1ce/HDG0aSYU3OX9KOkhGHm+HPoQQHZ+Dwk0r
      mDOI3KwG0mg0Oq5uZXEZJAc4DWqQirnin8OaBzufz+O6blckqe/7Az9XSkmj2aRUKSGEYGRo
      mIy9luBxf9fojc1YhjzPo1ardRYnYJ2nfzMQIsosVFbGm8YAqoOdxIOY+zkOP/ARgeiEu+q6
      ju/7ncyvrUANMq24l0qvU0wWv2dQM6eUkqbTpFKr4Ld1i6XVlSg5W9MYGRohc1936Im4WKl0
      syRtqJXeC3zM9mIaT4fcTqSAruvYtn1zdYA4hybl6Pg25vo+gezODVAa/3ZgGEZXyp167na8
      iEpM84OAUrWCF4tqVW27nkelVrkvEm2AJE3ErUodcQeJ63f7g3zfX5cKuZVnKzH4prs100II
      OjJdyhh2SnRQu0DcgQKRuLUVT2IYhiyvruD5XtTtBH3HCT6tONR9rCHphe+1+gMI0qtObBfK
      2HFLGKBnGIKEjGlh6t1ydzypZrvPVqEM8RxixQSbab/WqOO4LVZLJVbLJfxgTb9IKmae79N0
      mvd3gT6IRwin+RAANKGRtdZb9RzH2XKkQBwbZoTtFJJiSL84HEVMjUajYwverlVIeYEVIyqH
      y6CQUuK1FeqW59JsOeu+X3/Plrt8zyHJAHGmSGMQFWAZT7zaKjYsjJXsZJp1J+4NVPb/tHj8
      tLb6odFodBW23U6RW1VXptFodMxrg3p4gzDAddMzlSBdbPP87a9QdzKS7y6ex5Fc0NRncfk+
      ruNtZYHzfb9DH+r5WylotmEoRBwbOawGIag0xafX92EYdlLk1AC3CrXTqNTMQTKL1AtrtSJb
      v/psECaoNxv4gU8xXyR7l5ymotBr1+73/gdNStrIjBz/PF4kTflyNou+ZtAk9/brVPzaeE2W
      7SIeXeg4TiePdKvKsooD32i18DyPRrNJpV5NzWFOQ5Iomo6DaZh3HQMoxMXZfgtDnBZuVji5
      53kd+tiMD6lvODSkm6c2ws1Q/lSAmxJhtpsaZ5oGCwsVyk60ggS+z9UbZVp+u6BrGOC4Tuqu
      57pBl4wfeB7vnbzO0Ytl3CCW4mcYFHL5LfXxToaihVTL3m2CCnlRMWaD9qVnUnxafZ9BCO5m
      Wz6klJ20PDXIrRWx8vnB99/l1TPLAFRWF/nTv3qPpUYk6mTsDJNjE+TbIdXqZYdBwNHjC6jU
      Hhl4/PyDa5y5VuXslRWWmmsTXywU78ocgrTCV3dKxGwQBFSrVZrNJtAtRqeh5wkxSaW3Vwrj
      7YCa/Eql0inAu3lCC9m9e4yL10r4T01y5fQNDj06i0HAscMn+eeTqxiWwW989hGOvnuCc2WP
      2akR9mZcfnZqiatNj08/t4dxPWDVCRkbzfHQnkmmc9odQww3C2kibjxH+HZDmUrVotiPNnqK
      QMnCV4MoL7cyclLJllsvZCvIZIo8JOucW61xdNni8YksXqPO+/Me/9M3X+Z3nx/j54evMbfs
      cvCBSZ7ZP8Te/ZM8PTPMr7y0h4mMhmZafP7JSSrLFf75nUucW11TlhvNrTnd7nQo03Lys346
      4q2kDfVMpST3o4+eDHCrO7xdbEW5kkLj+Rcn+M73jjF6cBJbSCQQhAJdF+gCTD3H7/zGk8xo
      Pv/y1jUqfjRpQhNoAnQhCM0szzy6i889OsRHZ0qEKDlZEt6FDoGkL+dOR7++bqgE36lQitjW
      +ynI5UwyY9NMZyUHp4rYGZNsocDLUxr/6W/e5K9+scynnxvnw6PX+HDOYXR2momhIvlswA9+
      cZkaGSZHRwlqDX5yZIHDVwI+8+I+Cu1cAk0I5F0aEnGn00e8MnhfyUWmjETVBeqV7nYnIG6J
      MAxjx0+2d10XoRuYutYOyw0wzehcAs91afkBhdxazvGZC1fIDU2yezwyefq+3zmPbKf7djuh
      KuUpPeBOpA2gK5NMVfRIQ19PcJw3BhnoZq/v1cbANtw28d0M23I8KV8IgWWt1aqxMxmSwc4P
      7JtFiLV+qBLud/pKuRUo2lAL0GaPPYWbTx9phZFTr+vXyKCdjKc1Dhrm0A/J7J9ebYUybBPn
      1ipI7CQMXUfX1gd13c11hAbRA5RJHdLjejaLrnDpPrShvlMJVr2wYSjErd7iNpPypgmt7dTa
      rAlUEgaRwqvr6pTEEIRA03pXuvBaLqGmY5v3y6TEPcC3EoPuAOqaeM2iNAxUGCvt765Gepzs
      sRUkTa8bXbel54YBr/ziQ/7D94+w0AwJnSr/7/fe4tvvXsbv08yZU6d46/Lq4M+5i5Gc843o
      I+2erWBQ65O6LlmwK4mBY4HU3/24fiu7RVqk6GbEqDAMaTQaXQfyDfBUllfqrC47nL5eIwyX
      WKg20Vaa1KtV3j9+jSomLz6xh5xTZzWAhaUGu8d3UczkWLixyPnFGnMrDk89+QB7bZeffHCV
      lm7xS88eYCJ/0zJN7yioVFeF+OrcKwJ4s0iLOt0MVNBjrxTKDU+JVEgb2E5wdPJZaStL/NlK
      BkweobNZh1iA4KlD41xbXOXkfIUnDk6gI3FaDl4gqM7d4Nvv3WDuwg3+779+l8NXa5w+dYa3
      Lq9y5vxl3jhXIuus8t1fXKVRq+EbOs7CVb7/zrW+u8jdjuS7u5ntp30Xpw9YWyB7OST7OsKS
      h80lqySra7bjFEm2k/Z98ve4DyA+6M0hZO/sCNfmlrmx2mJ2qoAHVMsVrq5WkEHI5fk6QRDy
      2DOP8Ee/+SiWLghCiSsFzz+znxcOjOBVHRYW61xaaSJlyFKtfk8wQDzqNx4uk4wc2K7DbKN2
      kvSRXCAVw/Sijw2tQEnZLv6QneDwOAH38jAmv1dJ82rC1bnBm4EGZIaH2dUqcTHMMz1kAoLr
      lxepBTYEIboepW1OjuXWyYoyBCkkQoScu7JAmM3hhQLE3Wv1SUOSDhR9bCdaN44kQafRRvxH
      0Yaq+6T+7rUDbHhARpozLL7ibrd6Q1LkSTpY4rtP2r2dgQhBoVAYzCQqQ67PlSiMD+Mtl1g1
      cuwpwlzZZ8wO+fDCClgmQ2PD7LMkdcNmZthmaWkFx8hiBy2wcwzR4lJZMpMLee/CKrZtMjk+
      wsFdBbRbazy7ZUgekJFGlMnFajtILr4K6vcgCHpKD3H6ME1z3bG60IcB+hF2XBFOKsXJ77aC
      JAMk6wr1YopOpv9dbHu/3VAM0M8T3Is+ksaUrSDZVtLHEBfJks/IZDLrlOFNUUqS0JMP2Cnf
      QZLTk8ef9krNDIJg4MO272P7SBNH4t/1shjuhE6gnpc8uKWfPpiWNzJwNOigXr+dRtLeD/09
      ivE48HavcFvbq90ppcQPQu7CqIYtI402BqWPnaKT5HPTlPHk81WRZIWBdoA4V/UaZPLMrZ1E
      fFuD9ISMeD9VWhxIlhcW+Y9/8y7vXV7B8UJ81+XsxXmuLDaQhKwurfLKu2d498wirUDiOk2O
      fHiBV45c7WSHlRaX+em7Zzl8eomNo/tDLpy9Qe3uSwPoibjZMU0qUO9luxahXkiKPWn0ofrQ
      arViUoIc7HwAYMMaLP1KIe4k+vVBDVL1NaiX+PMfHubUfJlX3z3L1ZUmP/3Jm/wf//VNfn6+
      glur8t9+8A7zbsC//PAoP79c58yJk3z3yDynT53nL96+AcDiwiJ2weLdj5aTBeHSesjJI9eo
      3Z1R0F2I62m9rCxpyvDNoo2NzOGKUZRzLHSd/tGgQqwdW9kv3kYVnI0rrL08upsZfHzLTDrD
      0tqJc74QAhm4NBs2u0cz/Pe/8TzjGQ39sUf5fXmSpQDcepMbQZF/+/IjXLLq/PjsDeaWKnz2
      5ed4MV/h//rn67j+BMcu+PzKl0Z45Sdv85+/W0Iz83z9lx7g6HsfcWrFRxua4FufmeafXjnJ
      jZZHqezzol/mP37nNAUr5NDjD3Dl1AUuNXx2jU7w1U/v5m//6QgrgWBsepKvPjHO9145TojG
      Sgtm8wYLTcG//p0Xmc3cuQq9Mnf2E0njYquipXj65FZpQ7UdX/n7OWbjTNhhRtnjhJj4UZXx
      QrW9OhhvOGk92oo4FB9Ympm0Vx9UeXV1zpRRGOdrn95Ns77Cf/6Hw1wseTywfwpFU9mRIZ4q
      BvzJX7/JX7w7jxt61OoSw9AxLQMDWLk6j7FnkmEtZHb3Xv6H336Rg0XJ+StLzJUFv/7yATLL
      ixw5u4CY2MX/+Dsv8cxonhDJYtXlpU8/xX5Zx969jz/+7z7JXqvOu0fOYu0/xP/6jRcoNOss
      lRxyY+P82688w6SV5atffokvzGjM1e9MOUqZmuMGin6Oqri/Zidyy+OLXNIPkWadUs+Ol1cH
      0Kz1/h1g7UA5dUrHRkizBsQrhcVNVMlBpN0f/6yXpSl5vyqn7jhO57PAaVDC5JmnHsRbuMSp
      uQqzeUHLC2m5Lr6w+OKvPsfnQ49XXjuGNzbGcLDI5cUSs7UKLV3nwyt1nnh0FwIHDQ1NQK3Z
      ojAqqTVdlioejz8+S1YGZCwDXUh8JMiQveOTPDiVY7kMzUCiCwGhj67beL4E1CHTUZkWXRMY
      GFhm9JytaFJSyk7dzK1UShsE6oQdVXmhH5I7t/pd/Z8ms/ejjeSCmhS9066Lny1WrVbXzOm+
      11sEUjZ1lVS83rrS3ak0JSQ+0KRduJevIDnAfvpEXLGKl09Uu5Cmacxdus7r5ys89sg+vjCb
      4+//4T1OlUP8pYt835QM+SUOX61gDo/xB89MEa7Af/vZGf4yNPn8i/upXV9mcjgDIsBtLvH/
      fbfEyPQunnpommC1zOHT80gjy+99cR+nXzvNn1y4jEkGWzOYHMuhAZMHpin+y3H+5C8vMzG7
      i68/N8PKP3/An34bpnbPsms0x1zDRwiNXVM5dCA/UgRjc+JiEAQ0m82oLKNc2xWz2eyOn3Sp
      KrEpfatXMeM4DSRt9eq7NAPKoL6CXhJBnCbVc4Mg6ByaqJ6X6ggrlUrr0viCIKBWq6UygdqK
      FNRJK/EJSOoEaZ8nr+/nUIu3kclkep8eGLR45egCv/T0Hgw9rZ0Q1wsxDR2t7b4N/IAAQenq
      Bd5YLPK1l6bQ2s8MQomhq0mX+L5E09srtgzxAolp6OtyCmQocb0Ay2qftxyGuH6IZRmbOmmz
      F1Q9nLSQAXXY9E7sBuqY0niKodp1ehUcjtOH6l+aJzltcUxbIAdxqMWZqlgs9owQGFjD0jSt
      q8x4HCojTHUoHofRT0HarjdQtd3XQqVZfObp3eg9RiqEhm0ZHeIH0A0dy9Cwc6N8/unJziQJ
      IWLEDyAwDC0W9iAQMkxNhBeawLbXSvYJLXruTgkoyTlQFhFl9fBu4jlmQohOqEEawcbPS4jT
      RNy7v1kLYnIXSX4Xf06/0igDM4DqmDpTK+17WBNL+pmk+jkr4hOQdICpwSVXiV7HL7UvQNe3
      loo3PDXGmL05MaTRaFCv17dd1n2ziHvA42KhGrfSjW4WhIhSU3uttMkdPUkfSbl/o+jg+DVJ
      UTvJGMlIgjg2lbmhOF2d46XQK+tmI0VXdTQe2pC2ApimiWmaXWY3tarsVFTqTkAtELV6Hbdc
      7rv17jQ2mgNVJOpmlmoUQnTO3op/llzEYDDTeJoDNo0+MpnMOjNrx9a/AX0MzAC9uCsO1blk
      7fe4uWqjF5Vm9VFRfGk7gXLCDKo03UyoVbAoBM1m85YWi81kMtTr9c7fUkokEoHo2gU2ypHd
      KuLvIw2qD2q3jlsKlYKq2umFNOK3LItcLreOyZSlSp0514s+NsUAyhKUVITjW1sul+s6iDr+
      nZJDgyDonP6StNcm74mf8ZV2bdy+e6dA7Vi3+pmGYXR25iAMcX0X0zAx9eg1qzm/GbtSEAQ4
      jrPuYOukqJrUI+MLpBIbfd/vrOBJH1ScyA3D6NI74vSh7tvI+jUwA8Q1/3q93nVGU9zclMzL
      jXdKEYWUEtu2O0cVqdUjSegqz/d2r+z9rFF3CpT4oYioTRJoiQSdZrN5UxhA13VyuRxhGFKt
      VlPt+spBmew3RDuD6pdlWWSzWZrNZkd3SVqLlK9qu+9kUwygHmbbdpdmH1eQB9le1fVqpfQ8
      r7OFFYvFznPuFOI/ffo0Y2NjTE5O3ta+9IMSv9QuLYTA0qPyjLfq+epH6QHxhSPt2NqN2rJt
      G8/zOuKz8mlAetTBVrCl8gWmaTI0NESlUiEMQwqFQicMYTMEq+R7pcw2m81OOtudBJUhNzEx
      cdsZsh/UIqRKF6b1VdO0zi5wM+ZZ9UHXder1escLqySEzUCd6xaGIZ7nEQTBji+KW2KApEa+
      3SOLlJLSz1x1u6BWr6Rse6dC6QJqV41DibE7UaGtH+LSgurPdtpRq/3NMCps2RygFN5BLDuD
      tnezLBTbhWKAO8Xc2g9qBY47wmBNYTQM45bMs2VZ2La94/Sx04y7rVlQFpi78RCIOAzD+FiN
      Udd1bNvuGCUKhQKFQuGmBcf1QiaTuaP8NGnYFgMo8eDjRBxbgQr6+rhAiToqoFGdrxwn/p1a
      mTdCPCr4TsS2a/j1qrt+N8EwDBqNxh29kiWhxJx4n1W8kOd5uK5LNpvFtu2btitomkY+f2ef
      krktBrjTFNabha3ucrfTO6085I7jkM1mCcOw62RNwzBuukj0caCPu6KKq/Ie3iy/wVaV4NNn
      z+K6Lk898UTns1arxeLiEufOneWJJ55gYmJip7vbmY/1SeBrSCsSdbdCLQZp3vm7ggEqlQp/
      /td/w2c+9TLPPPkkwDrv8nYwqBl0fn6eH/7oR3zpV79ENpvhxvwC//TKG7x88Qq//JlP4/se
      r732Gu8fOcrS/ByHDj3Mt771Bz3DzLcDFXaSFoh2J1rabiaOHDvGu0eO8Y3f+jLj42PAWtTy
      XcEAjtPi2GKNhZ+9ycLCIrPTuxgZHubKlSs8//zz23b9K291kpB83+ejEycZHRlmfHycv/u7
      v+fZZ59FCPiHH/yA/fsPkNfhH989zrkLF6ksLdB0mnhuCzSNixcv8B/+9D/xrVkHQegAACAA
      SURBVD/4d4yPje1YiIJSgnvlSXycdJmdwPXrN3hzroH2wx/zyIE9zOzaRb1Wo1gs3h0MUK3X
      8e0Cp81JLhyfJ/vBOfJ+g6f2TfPMM89suj0pJVeuXKXZbLC6ukqlUsHzPK5cuYKm6aysLHPu
      3DmEELz51ltMz8xSc6FVXeH3f//fRMVYEfzVt7+DaxUQMuREPY+z62kQYLZqCM/FqtxgtVzm
      Bz/4R8bGx3nxhRcYGR6mWOyR3bYJKAtQq9XqBMEpbFVMVKLVnRZ82A++71NzfZziJD8uC15/
      8zT58Bh5r843fvVzdwcDHD1xEkfPIHUDNzuMmx2mLEOaKxXGXnmN3/zlL/RcXaWULCwskM/n
      WV1d5cy5c1y/PscHH57CrS0TBiGf/OTLjI2N8cobb/P2ySs45UWKmkMul2PVs7hxrUVT5Cj6
      Gn/zne9i2BmOlAIa0qA5+xiYNlLTQYvEHNeMLGdL+VGy1QVOnL+EeeEiV+YXyedy/OHv/+tt
      z4lyHOVyOYIg6ETeqnyKzYpBquBYq9X6WDFArVbj5NV5AmMSdINmcYomsBK4/OD9k3cHAyxX
      agSGFZVRUIub0Fi1hvnrcxV++Nr/ye/95q/w2KOP4jgOpXKFpuNw6uJl3jt9gYaeAd8jEDoe
      AuPaOXKahwxDfAnvnV9ht2Px0bUGZW8IcgVCdwGnXqVkzxIICwRUjQl+euws7t7HCa0x9H1P
      YS1fxSuOI4fWK7uhlaU+vp/m8DTZ+jJLDZ2DwcaVFjaLeHzVViJbVb7xTpU8v5XwfJ+S64Op
      ddFHqFuckqMffwbwPI/lUhlpTSe+iV5UYOUo7Xma//L2GfZ8eJ6m61EOBE1hEhgW/tiDoBuo
      mdGry/giR8McRiKQQmexbnPpTCkiGiEAnZo1RUOOEWDGnigIgxCpm0jAz48Q5IYwFy8hfJdg
      dBZSVt7QsKkPz6I7VQq2wz/984948cXnmRgf3/H52or4E6/r83GzHNXrdaqebL+3ONohIre+
      SzuLy1eusNACChpry397lWr/GZg2NXOakxAbsUwtvGOszFE3hgn0YjexJFa+EI1QWGtJ7QKE
      0AlaHiLwEUZb5BI63q6DmIuX0ObP4e06iNQ0BAnrjAApND68eJVLZ09RazT4+le/ckcQXDwr
      72bnFu80jpw4hWsV2gywnj4+1vYwKSVXrl1jWWQ6f6/PPVU/sXTO1G1cRj8yQJceSe5Irpwy
      doUQAhFxAFJqINefY+uN7wU7hzl3FuF7JCEQBGaW+vQjNH3Jaycu8Nobb9wxYQQqJfXjJAIF
      QcDJC5fxskWA1Hf/sWYA3/c5ev4KnpU8ATCeOtmuQkAsp7nry+473d2PkLdaiGA9kSafIEgy
      hgBhgJdyRoGm4Y3thtwI9vVTyDDoSiKBqFRKaGVpzj6C5rc4deZcJzXwdmMr8fy3G5cuX2be
      05F6Umlfe2cfrxElcO7CRY7MVQiNaAfoiOjx1Vsqzh+kRYE0LcJcERGs3+qTlQySwWUIga+Z
      6NXl1GsAvOEp3JmHsa+dQDTK63sQBoRSYBNycP8+Xn/99TsqEO/jEN4A0eL4xruHmdeLnc/W
      pKBYXvEt79kOwXVd3nj/CI3hmeiDuAUoBknc8kHsouT/dP6WVgYjLNF/D0iBlAQYaM16j6+j
      XF2pmwSTB7AXzuMNTaF7DlqrAb6LCHwCobNUHObkmTMQBOzdt59HHj602d7c01gtlXj7yhJB
      YSYmq66/7mPLAHNz85ycLyHzu+le3pNZUCocIMkAvRFkipgsrGOAbqU4hKCFHroYBGihC6GH
      roVofmxaAw+9WUVzmxB4aJ6D1qyRwcUeGUHXqlTKi1QnHkTmhqDtI3CBIytXKC5eYG7uxn0G
      2CQ+OHqMkpZNWN22URblTsPi0iKLvram1HSIs3fNokER5EewpA8yQMiw/eMjAgdduphaGJVa
      1DRkJkOYG0IWR5FCI9R0xMXDZC4dgTBASEmgGQRmhjBTQAwPw/AMI80rjL/0aYSuU//ZTxBD
      46CtvQ4pZbS7tZpcvj7PG2++yadffvljI4LcTgRBwLmLl/By4zHJQJBGGx9bBjhx4TJ+l/Ib
      jbRbyZddu9+gxCN1EyNskm9eQTN0tGwWmc2DMYI0LILsEEGmgOzRXmhYOLlR5NAkwrKJnx0s
      AaQkrEU1RDXTxDANtGaNIN9dkDjUdBq7HuT10yeZmhi7I4p/xeG7Pkt1l8mRHCl1h28blpaX
      mWv4YMdNyKp8Il2f3XIG6Hfu7yCQUvLB4cO8fq2Cn006iuL152WbJdoFleh9fGb83ggCWSgi
      pw/h54a6whj69QsiJgsLo1E8kJ3teV3DDfEbNTTLIjsxQaVU72KAtX4K6rse5sjleZ5dWmbX
      1NZLs1y7ssiykeXpmQJISaXWZLHuMzKUZdQSzJeaNAOYHM1TMCTXFmv4Qmcsb3L0oyuYuybZ
      W9AZyxnMXZrnowZM2AKkYHLUplJtUSxkMLZxSPJ2zxKTUvLdH/6UC2I45cvon8gm0i6wvOWe
      bhHbGRxEBxz86O3DlDJja2afRHNK1hcpMt96W3bMPNpyEEvXsK8cj76xs0jD6hC/lJKwXXIw
      2Wb88yA3gub3N1+6Zg7ZrtxgDw9D2MvSIwgNi6OtDN/+0c86JdC34h8IghAviO5zGk3eOrnA
      SrnGT48v0Gi2uLHaoFwu8+qpFVZuLPDO9QbLpSrzFYdyw6VcdWh60f3ZnMGN+VXOlV1GRzII
      Kbl8o0Jrm26L7e5wp8+c5e3rJVw7HzcLthvv/NOmjtsQDr3VAaq6MD/52c84Ob8KM1NrX8bk
      nDVJr7fqL8MAXAejVUe4DUSjghF4aIZJkCmghx7O+D6k3Z3OJ+O/xJsNA7RWE81vofsttHoZ
      GfpIGSKU+CMlwnfRnRoicBFui/LpjyidPUWr4UBhmpimnuiwRFRXeX9+Bf1vv0OttMLnP/c5
      nn/uuS3PZ63hUHUCJkcFmVaT1RBarocf+LSaLsaeLGF9lWa2wP6RAntHMmT3TTBrRIw9NDHG
      11+0+fHhK3z35xf50icO8PTDUxs8dWNsZTxSRiXgS6US3/3779O0VViM7PqvQx+Cjix0W3QA
      tQL7vt+pYhaGIa7rEkrJ8NAQmqZ1CpsuLi3zszffYnF5iVJuiKnpUeYWzuNMPoBIiiadEUJn
      5GGI5jUx6yuIegU99CLzaKZAmB9BFkZxzSzSiiww5so1dKdOZ02WMmqjrRTju9CoYrh1LN9B
      kyG6LrCzGTLjY2hTM8yfPU9YWUR3amitOgQByJBA6IRmBq8wwYoAY+UKrdlHCe1CD+IP0SpL
      6G6DxswjvD1/ndzCNfZduszzzz236blvuT7lhosUGpqukctlObjHpDJXxjFtHp/KUrvYQrMy
      fPLxSebmV/nwao0pU6Naa9EqQMYUlFaq3Ki6TEwM0yw5NPyAoOExMpTB3KY+EC96rEQi3/dx
      Wi2y7dPe1Q4YBAGnz1/g1bfeooWgue9Bxs+eZTkMCItj6xsXIKTo7Na3TQn2fZ/Dx45x7PRZ
      DF2j7vpcq1QZLhR4ft8sY8PDXF1YJGPoHL4+jze9FwpjOFcuoQUBdmWBIDuMX1CDlIq1ERKE
      kvlDiVmZZ9xfxRodY7ke0Nz/TDsAbj0kEr84jr1yjbA0j+42EF4L4TvYmiSTsbALBcSwhZmf
      xhqbwCgOda1cgdMkf/Ecfm2VwM7RGt0DmTzCtLueFXgttJVrSMNODZID0ErzmM0KrdlHAHDz
      o+SEhgw27xwbGclx/mKJN8tNnj40wVMzLc7MVbAyWZ7fM8zCuWWOORq7p4fAdzl2oYQwTJ5/
      oIjlSN46u4A2PcKjExlyOZPy1VVOrbT4xBN7mc0Ijl2vky1kMHdAsK7X6/z0jZ+zXK5g6BoL
      tQarrs+B0SKfeuJxrs3NYVg284sLXPRAO/g4bmkFd+46lgjIlG/gWBlCM8PaThCjDymjHVqm
      BHekHZG0kwjDkA8/OsHfHTuBHJ+KVlhNIEwbIUOC0gqa70OhCEGIViggdIP6hbM4K8sUH3gw
      SnS4cgW/XsOv19AsG9EJHGurv0oXCDxGn3keI5tj/o1XCHULxx7CmTjQZaFZg2ToxKvkZmbI
      Tu7CHh1DGAZC19FME83sn7klpWT5nZ9zPbcfEkTfhcDDunQMb/ejSDvXbeWREq28gOFUcScP
      dBjWcBvkli5SED5//K1/w+7duzc198lxhqHSyyAMZRQgJgTItrKo/kYSSmg5TifjzG153Kg4
      7Jko7qgVyHEc/u5HP+a0sJCWHdGHrqNZNqHTQKwsE+YLUb8sCz2TQ2gaSz9/BXNyiuzkNI3V
      ZZrXrxO0HALHQc9mSYbIIG/TDnDu/Hn+4YOjaAcOdSml0bzraGNrlg49Xs9GhhiFIvb4JDaQ
      3zWDDEOW33yV/KHHsEfGEJogBDRtfRUxKSVTn/osfr3GwrFjtGSITGEArbpK8eBDjD72BNoW
      kj+EEBGTNGtIo3fZSKnpYGUImzVIWIz06hJGo0Rr+iGk0Nb81oGPH0oCEW655GCsp10bT/yY
      KNpMIeLXJoZh2Sb7J3c2OSYMQ37y6mt8FGhY46PrjBbCzsLMHjTaST/xAQiBPT6JNTKKNTLK
      yAMP4a6uUDp5jLHnPoFuRGHqCIHWXixvKQOcPnuW1959n2sB6HsPdocSw3otU0DouniVEoQh
      XrUSxdrHS2VrWrQ6alqHWIXsfUiDVRxC09sH4nWFDEXxQkIIjPoy9uh4T+LvZ4+XYYhXXkV6
      LlqrRtCWQ5XeHFfNzeoS0s5j1lfxQh85Mo0A9PI8hlOjNX0ItDXil1JiNMuMNpf5+te+ytTU
      9pXOOwXNZpNjx4/zL+8fJpjZizk2QSfmVimvsisGFwCvUiZwmhCGhJ6LTByWoqQCzTARhrEu
      GvSWMUCr1eIffvozyrv2Yo6MtUOIiVaadmx80rwIUDtzgla1gjBMhK5T2Lt7fdFXTUPGc143
      CncQorOtA5GVpX22b7R9GISNRt8m0phASokzf535D4/T1DKE4zNrL6LTtwhGeQHhNvEm9iFC
      H2v+Al55AaEbGI0y7q4H1+kFgmgHsEyDavtchX5WE8/1kJqBaQhk6NPyJE3XI5PNkosdwRqG
      Pks1n9GCjZASXetvqpZSslpukMtnsI2dsaRfunyZ7793GOvQ4+htEVM5LyWRmTmlI6y89yYi
      l0czDMyJKayh4e6+C4EMwh4h8LeIAaSUvP3uu1THprFG15xXQghkq4XfqOO3nIiDfR8Ztk9a
      DEOac9eY/Nyvolt2p63ki9d0A9mOsU+m/KURiRAaugbm6vXob9/D8JsY0o+IpdlATBzsOZ40
      4lBh1qHn4Rg5vNlHe00GRmUR4Tl4E/uiF6SbeLMPY82dBRl2FN60/kuhsVoq8eYvfsGvfPEL
      fR2K505d4jQj/NaT41w8fon3vSK7CyH799rkjDXrWeC7HL1e55ldPh9crPC5p2fI9PH7yVBy
      6fIyew9O7wgD+L7PT955D/OBh7v1KykJmg38ZoPAcwldF4JgjT5kiJbJMv7ipzoiTZI+hKYh
      unaOePO3yBNcq9V458x5tD0PAJLQdZGuix/4lI8fibZ53YgUTdNCMy00y0LP5hh59qUN5XBh
      ml07APQXUzTbovDAg9i1GmY+j5kvdLZIYRjULpyFDRTd1H4A5tAIVnge5QZL9sOoLCB8D298
      3/pchKkH+rYvAQIfGfg4zcaGNvOp2RF+fryG0ypwdNnhsWf34FxdQiA5euIyRxcc9kyP8dKB
      PIbnc/7iPB9cquOEIZ95fJL3jlxhwQ3Zt2eKl3ZnOXbyBsdXHJ5/eAZPCLwg4NhHNziy0GR0
      fJhfe3yMt49cZ8ENcDzB557dx2xx46Ngjx0/zpJmotsZpAwJm5FI466uUL9wBmFnELqOaBsg
      Ivqw0W2L3O59kRjcC52FMP3rW8IArudR8QPMNlGVj32A36gjDAOjOMTY0y8M3FbqoQ8xBlCF
      oOJnGKxvQ6O4/2DPBHFzZAx34cbAfYq3YQ4NoyMjZ1tcwZYSvTyPCH288T3pjaSEW8T7tpaT
      zEA5AsV8gVxrgYXVJsuuyW8VJd9ZKpOZHeadSxX2HZjigbEsMmhxfKHOlx4eYXdZ8NKhCYqm
      xtRoHqvR5O3TSwz5Jkcqgl9/chpDE/zi6ipaVuf96y2+8uJu3n73Eqf2FrlabvLIE3tZOXGJ
      C4tNZovFvn2UUrK8vAzFYYQm8CplSh+8jbAzICXFRx4nOz24pStNPCbm+GpbWjrX3hIGsC2L
      8UKOcuAjNJPQ9xh65AnssYme9u/NQLNswk0mjYTtbTFNX7BHx3EuX9hSX4SmRQp2qwnZPLT1
      G6M8jwj8KCusDaXzbKiztKG36oyYgtHZ3TzwwIENdwDDMtk3bvKLc0uMTQ1jdq43+NLTM5y7
      vspP52v82rOjCCCTsdB0jXzGpFVa4q2rNT6xL4e8WsdzfYYKOYoZE8IQQWSxMTIWQzmbEUvH
      DaLUydmxAo4p8MLB0ienp6cRH55GDo8ifR9h2ky8+OlobraZEy06VkQ115Gap2bilsQC5fN5
      Pvvow7A0Fz3UstumQrMju20HmmVD2H3M5ka5q5qIDpBLIyIjm23LnFFqo1cpUz13ivLR9/Eq
      5XbsT++692bGRnObUbSJlBilOUTg4Y/v6fb2xnKVN4Lu1HjIX+Qzh2b5oz/6Q775zW9uyABC
      03hkKs/ZGzVmx6NiWxog3RbvnFlmrhkQoKMLgQZYpkFQr/KDI9dYbkGt4nD4YglXF8zsmsBb
      WuFv37rM6bIHmmC4WGDMa/A3r5/luKdzqBh7l7pgg+5FfRSCJx57jAN6QFCrIEwLkG1/i9lf
      vBkEmh4xUcfe0a0P3DJH2I0bN/h/vv09/KlZGhfPkX/gwU1tbf3QWl7Emb/B0GNPdUQgxKDr
      KoS+h1+tEDTqhJ6H32xQu3AWPZNDsyLZVC8MIX0P3bIoPPx4ZDnqEdhXPvUR15YcvLHdEfHL
      EH9s97pQh2SKZT8IwK4sIAOXQmWe6UKG//1/++NuO3gKpJQEYduyQ7cq6PkhZlKJlRI/BENv
      n92r6V1Ormq9gWnoZDpH4UpabohpRtetrbNrIscg7+HHr7zCT85cRGRz1M+fZtcXf2OAuzaG
      lCGr773F8JPPomciX0soZefwwFtmBs1kMvi1KnX3Eno+jzm0cwwmDAOZLF+ukt/blQAiy0EQ
      2Yt9H3dpEbe0Qug6+I6DMC30XB5zaBh7bILs9CzCstGVAiYEzuIC9Qun27ml6dGmQOQ5nruA
      sXoDDdlT5t9M4JcEnKEphN9Cb66gmyZ/+e3vUshm+e3f/PWe1iAhBEaMguNPtMyU3VeITihD
      mqPN1LVEboUgY689O/1JGyNr2zTnb6DlC2R279/Uvf0ghIbQdcIgIDnaW2YFijoiyIyOkX3s
      md5OJHVtn3aklEjfI3QcAtdpO8rKtJYXqZ09BbIdKtw2k4WeF5lXQ0ngupHibWfQMhmMiUmM
      XJ7qh4cZe/ZFjFx+3bPi0LJZgpbbM8xajVOYJmZ5Hndif2+FdwCk7RBSt2hicKPW4vSFFcaC
      Gl/87C8xNDS05efcCdB1neKDD5Pd05v4N6IPVfYkdFuELYeg1UJ6Hl61Qu38GQw7QxgGbRNq
      FOB4Sxkg9D3CSjlyOKmVOeo5oecSOA6h0yRs23xD3wcZIsNYPRel0QstUnAMA3Qdc3wCPwzQ
      DBMta6NbJpppI/T24dt6lNSiGQZCN9qufhFNhm4Qui1kNsowWzfRarvMZBCa6A5zjo1PShmZ
      KOdu4A/visSeLaAjwon1pc0lMGIbfPOLn+Xa4jInT53GcZxNMYDyWcRjfJLnCXuuT6jr6DLA
      RyOzQw6vXhBCEDQbkRc9jNdvkhBKAjfyFwWtFqHr4rstQj+IyjUGYcdRJoBQRopuVLxMJ8Ak
      WGoidQ+pG6CbYFigm7eOATRNwy2XqR77ICJKzUAzDDTTiIi2TaDCstGz7RPidRNh6B0bvWaY
      aKbRDoFOBuWnQErCWIhDLM5sTRwXIkp5DIKO6CpS5FYpZfv5Fn61ijmUknEUhlTOnMStlNA9
      D61ZIbTzPSNPe0IFo9EtJilmmPc1Ll+6xDe/+U0WX3yhU/N+UNRWShxbknzykTG8eoN3zlb4
      5DMzMWKQnD95nbnRCQ60lrjCMJ9+aPimW0yWTp/BO3+5TbhaJxNPGAYSHalpSKEhNQspsoSW
      3g6D0UHXI8LW9PjK1fd5t1QEMk0Te3gY+/FnuwpTiU4gUEKhjK/4kHDkJfT2dhiFYgmVStjO
      gEvonuutE2ahGMXuCC012ytakUF6Hlo2R+XsCTK7dnfMgTLw8Wo1/Ead7O69FA4+jH3pHM7C
      VWQlIPA9whBcDDwrT2jnQDeQQifI5JFm9zlrKkSkF4LhaX5x5CMCCV//2lc3XT4xk9U4fW2O
      gwdGaC2VOdeE5xtNzq00CTWDB3blqTccytkQp+FQIo/veVxdrFF3ffaOZ1muN5gazeI2mjSE
      yWR+e0FxtmXhjO7BGZmJ22jSaQN600fatLUz9qLm1qKEuZU5waZpIoMQTdfXYn+kTPQ7tqqL
      VMqPIbYysjYfsuvT7pU/tRUh0OwM7soy2Zk1eT0uekhABgFLhz+gWq7hBUDpYlRxzLAQuoGU
      knylxMQnIvv10KHHKD70KNL3om3bi7zfoecStlq0alX8poO7ukB55AChtT5/ONkXRQSBlSUs
      jHLooQcHMqEmYWYLzBiSK8st5HKVA7umWV6pcmWpxeJylVVxgIyIMaKE82eucrSsYXk1lvwp
      Fs8v8amXD3D+7FWyu/dumwFMFampaR3zcDR4QEQx/N3pjUmbVhLd9KF+kaId492mtVvGALqu
      R10KZQ/vQy+RRnT9lwbF0WvEkAyD6L8V6rk8jbnrqUpnKCXS81g++gHLYphgb3qMkAwDZG0x
      0S/RCe1IQh2B4dVrhG+9RWX307EXJaMCu34LEbjge2hBlI0mZQhhQLO6wp/92Z/xP//7f88j
      jzyyrv2+EDoP78lybGkVZ1ny4oM5wkoT3/PwXZ+LC026I5lCTl+p4Y0UyRkm1RY8NG3y1rll
      3JLgK09t/2Qbw9BRNVW73qfo9/ZE6q/rroqJvh2GutVmUADDNPDDAKEZXdt8Z0fqgUghCtvK
      UQjq/7YmjxJT2t8FXiuy/rhupHj7PtLzwPeiTKpQRjpFNhedAbC6jIzV4OywopS0FucpX7zA
      apDFHx3v2P+TEG3ZM/TcgRJmFMx8Ad13yFz4oGMQEDHXvdQiWTgQBqFugGGR9Zs8vW+aRw59
      lpmZmQ2jQtMwNjrMwofn0EYm2ZXXeP3wEtauSUarDWrJpoTGxJBBHY1dYzmMvMnDhXF+/tol
      pvfPkNsBBVloWpe/YWD66BhSIjoQig5Qv0dUr6nfwwAZeAjfh9C7tQxgGgZeECIMQRgGhF6L
      0PUiIvW8KBLU85C++vGjlTUMojhvP+hEiXaZHQW4pRUyU7PomQyaEVl5EAJD1xG2jcjnEW0l
      VpgWMgzwyiWEplHcu5/Sh4cJg6AtokXwalXmTp+nlp0gaPst+pFZiEbQaKANb7wiKiaTUiKt
      DE5uOsoK0wyEYbVjWNqCYULMGWtc56tf+TUmJiY4/tEJJibG2b9v36beRaGQ5+XHZxDFUXK6
      xtOPzPDhjQbZyVEems0z4giKWYsxfwJdZJjN70ecX2ax7nNwVCc/ZDGds3lodmRbZVAUNE2P
      comV5BP4EHgQ+NFP6KMFfpSXHfiIMIh+ZNvkHUY51xohUc0yga633z8hYb1GfvcetIzVpg0N
      oeVuLQNMDRV47xevoFntFxzl30XOCi1yWCgi1ewMxkgWPZNFs9tKYsc6I5S2iyp7WDr8DsNP
      PI2Rza2znqTF7QNRLFIbmm7g1arYw2sOuuqFczTMIrIw2g6p7Y9A6AROA3M43cnXxbTtzzyn
      SSgFDE+pizrMm4owoCBbvPfeexw//hHlSpmXXvoEhXye8U0cqKGbBk8+ONPpz8yuMaZ3jcXm
      OENUW8FCtfrJJ7I0HQdCyZuHLyMmxnh8fGcO9svn8+wKq5g3jkYWQeVlF1H2lqZraBmjTRtZ
      dDuLkcmg5/Jr8UJdAZCi00bouZSOvMfIMy/Gvo9wSxlgcnyC4iGD7MyeDYOcwrYoMGhAQydk
      Ohbttxlolo1fq3QYwFmYZ6XiEIw/0G52436EmkGYciYv9I5N8laW8dHXjAE9Vv0OhMY51+LG
      m++h18uEMuSdt99CE4JvfOPrG/Yx1lA3jw0QsqAYV+gaLzxzkE+owL8dQMa2mJyawNp3CN2y
      151yH8dmj3kSpgnIToBGXGS8pYWxRoeHoknuM7h4BlX8lWw4WE0naMvxaSt+1wEZKTBHxwhq
      1c7f1w4foT68Z8OKcPFn+LpB0IMBVNxQ0q7vra7gZvvvGF2/C0FrdDelfc9T2fc0gWbieT7l
      SiV2bYjvb65CVVSKZPCFwzT0HSN+iEJlcobRWcg2oo9BP1ffSSkJ2wcFdiVTbaPPm0Yhn+9J
      pArJgW+4IqrrNI3Q2/phEtboOEGzSeC2cGtVpFOPZNABIYFQMyNdZsAIz44HPFPsa9BLvdXK
      4I7M0NzzBFIT2O3gtDAMqZTL/PjDRWpepDOtVJsslhss11v4YXTU6WrVwQmUwC1ZuL7Ch3MV
      livuhn2RYchSuYG/+Y22J0zTxBhgzrZi9o3ugzAZL8YtFoFs20YMUM8mdeVjjZPTIHStw1xb
      gQwDGtevUl8t0QpAmtnohMeJvVGFuAFEBGlYhJup1yME1tQurCvLNLPrE0f66THRhxoZTfJb
      v/llPv2pTwFw7eoc/3hikeWKT0PX+co+wZ+/eoM9k3kKQzme31/g9XcucqIc8ru//DgPFaOj
      jy6uNrDzBsdWfT7/RH9dwvM9jpws86mX9mHs0Cag6zp2xiZ0XYxMb59IBcMAGwAAIABJREFU
      Lyixpje9yNRaSreUASzLwmJ9Tm8a0rwC/bhfaEYnfn8zMqKUkub8DZbPnqcy/QShaSF1EyFD
      9EYFe+kS7sgMYT4q0ZEany5lZJEQWuQdHlQ2FYLc9G6majUWVq/hDM92WX4GaUcTggP795HL
      RURTqjSZHC0wNZThi4dGqC7Ok8vmeenQFGPFDHrQZPfMGEteqbP9+16LmqsxO6Xz3ql5Fssl
      pqfHeXk2w9sn5rhe93nogRmeHNd49fBVSr6PZuWpVst8cK1Orenz2P5RTpyZpxTCw/t28dCw
      4PUT85R9ePjgLg5ZHj89t4rvBVi2BZ6PMVTkC49NkmmLUsPDw/jNehSBu8l5AAhl2FNnFIhO
      xPBt0wFsy+oMViFNXOgnHoW9Sp7oGqG36TNdQEqWT56gPLSHID+CtHKgm0jDxh+axJs6iFWe
      J3P1I8yFC1BeRF+8hHHjDNbVE2QuHyNz6SjZy0fJLl0YXPxR/dY0hh54kBG/1HEEqQoZg7QT
      aHqX7L5/7ySm0+LE3DIfXKuBlWE8F/Da0Ut8/9g8rp7jpYe6TZeVhRWs8VGymsb+3ZN89YVZ
      5q+VuDJXwrFyfOmJcc6dX+DYqTm0yTF+/ekZRjWNZqvF0WsNnnx4GrG8QnbPLF97bpbL11c4
      fXWJkZld/M6zk5y5sEqz2cIcHuFrL01TcwRfeGE/Gad9hGkboyMjUT5wn7wJaK/saZMh+yyS
      QnR25/jc3nIRKK8JSl396s3dqRUdenC4Zpj4zuYPmfbqVRxfEK47aC9CaGUxNJh+5CDNa1eR
      wTLm2DBGZhgjl8coFNHa8nfQbFI5cyIRbdc9Hlg/ZmGY6Otq1vQxhbaRWbrIkClYXFrk4fYJ
      MlJoPP3IJPrFOucvzHPopb189qkCWc3nv/7kEssPjpPJRE4j1w8IAp8j131eeDGLt9rE0jU0
      ASHR96sVh7OGzYOzBdzlKpOzNprwo4pxaDy5d4yZgsUFX5LPmhhGiK1LfF+StQ0MI8SQklAK
      MhkDXRNkNRNLF+uqyY2PjcHJc5052oqDr9d8C13v7ABxGrrlIpC9DZmxr6ZvmshqJfU62Xac
      RSa8bqtO49oVguxwT2LTnBr5rEF2epbsrlmEJtYX5G0j9P3I6xyGqaJSLx1G2btF6CN1IzUa
      NQ261+LLLz/LM08/3SGW8kqZH55YYrkleO7hWWS5wt+dKaHLgLE9E2TdCn/5/hJzZYefvXee
      2sEJwqEcw7pgRUjOXVlkblmnODHK/imbc/PzXFkNyeVyPH9giO8fucpHlsTODaEJgaFpCAG7
      94/y5i/OccY2GJ0Y4cCExqsnLnNaSkZnprA0D6ttn7etKAjSNPQuEWRoaIjQcda8u5tEP8lB
      6HpUoDhx3S1ngHzG7ogJ2+HuJIRpQcr5uzIMqJw5hbO0gG5nKD74MNbwCIHbQtMNWosLuBNP
      9GzXqC2TnRpDGyCkWRB5MGUY0Gtqe5rxdB3hu0gz01fZj8OZ2M9f/Owt3j36Ib/9a7+CpmmM
      jY3xB/9/e2fWJMd13fnfzb22rqre9250N0BsJAgSFEXLIiVSkmV77HGEPR4/TfhDzcPEfIJ5
      8EQ4wh5HSCPZsihR4g4SJBYSW6MbaPTe1VtVZebNOw+5VNbWC0yh29YcBAl09a3MmzfPufec
      /9nePsMnjzW+NRNGHP3t2ACSBrP+t7cbpSdvfrVIthyGU/f29fO3P+xFKjCiPIo//YMcvgx/
      FgL++o0MSmgUIptjPLqUky/yN28X8KTCscIN4i/7irgB2GboXf9OdM8fXwsTj779UrP3ulQq
      hZsAh0VvHZ+EYSYCkKbnKgC6rjM4MMCdrQ2syAvbqZDVM13bdtoQmBD7ldRXn1K+dAWEYOfe
      19QrFQLdRBNQE073yhQqQK/vk+mfORpTChGlXnYf11boKr6mpiGiJhld7xPHsyiJCAL0vU0K
      uk89cHnvxqdY2QzaTo2/+ev/wuVULo6m612NvZ58jkJvA3URmtbEFEJomKkPmmq1tpCua6QP
      WE3XDyyw1Uq2bVNyHKr1GlqEBHVar2fZODXLijamBj3XfICYXrx4kZ//3d8nAnCchzmICY1s
      tknCk8A/PawKYPYUEbpBdniU9R2X2vB5tNoOSu/uyheBxKGO7jhdxzTPTwvDdrsY6o25NZdj
      CeJKZ5qOVt1B82oIv44mJTphvEsgw5goLZBYIsDSFDlb5+r3v83ozFRyrTs/+xVSBmTto4Un
      j4+WjzTuedHF8VE+2N1JoNA2dZZnOx2MTLYpbzwOxX/uAtDf309OEwSui243lw6P0Y+0mZKW
      +PRp0YYMmBayVmN3/n4Yc+95SLeOkhJZ3SdeNmdklN7VVZa3niKLQ226fxP8Jj2yPYVGLFLL
      mPScANBE6OWWUfCejMo8psv5BbIRvRoE+NUq1cfzUFlnrt/DtEzsHhs7Y2NnHWzHIfB9SgN9
      ZPK50FgmdOoEUiI0jcrqOtL38T0PETUWMZ+hqvVpoPHRET787Fbb5w3eiDAGjgd361HSfSBl
      EnwpXfdkWiRlTYNd3wO7W+38ZjnviAa1Oj00jYwhmCvqmFYJheLBF7dw+8cxphqFZoWmUzr3
      AnsffkSl0H9guqJW20XPOGHxXaWSchoHxelous7mJ++H3wmCpOp0NOlwHpqGiOrV2MUSdv8g
      IyNlrn7vD5NCTvE99nd2ufmr96lVthG6jluv49VdLMMIu6XYGbKOQ8Z2KNo2l7/9Bpb1zQSo
      nQQ5to3mtYeTCCFCmPMI5nFHTUHT6TMkY8N5hBC4tTq3P799Mv0BChmHHdmqj4XlSlSEpAQy
      /DeBBCkJfBnGcgcBSvpRGLUbFsWVYWhsf3+Z6UvnsWyblYXH7NR8SuNTYeGsFAldx8lY+E9u
      4lp5gmwRmSmAbqDtVdDcfcT2OvguFUOxsfAEU4fR7/8QZZpN9XWa4sk0Dd1xKF58EaPQIWe4
      hWKh3r3zJb1Dgx2RqEw+x+jZGTbmF9FUQOCFbaNqbp2651LZ2YY4ZVCAc+8r/izjMD727NUo
      TpJs28LooEIqKZv4Qvp+qPJKPzltiU7ZeIcPPBciHtKly9yL55m5fAHpSz79l3exRidORgAy
      hs7unS9C/Vz6YUy3inXjSJMQGqahYVkmlm1hOzaZQpZMvoDl2DRCokHXDDRdI5PPYdlxFWkw
      +gbbmB9Cg7n/ylVKe3v4OxV25x9S3fTxPB9fNwlyvQR9EwSmgxt4KKHjrD4gcOvoB6kWImyM
      EQddpam78abQq9sUB851BAKEEIzMTtM3NoL0PCzHwTCNRIdtJISE/9tcXeO9jz5kdP4Rr736
      ahIjdFw6TtGub5Jsy4adbSrXP4hyAYKk34NChbH+Ioz1Nw0Dyw75I5PJ4OQyZHI5dEMn5g8h
      BLpuoJs6+VSxtyAIsE9KAAxd4+K5CUr9fdjZDE4ui2nbbbq1QqF1bGHUPEZ0SJp2cpmOwU8x
      6baDbjvYvX3kpmYIPI+Vj95n1RpE5UPDMLxiBpSiPjzH40+uM3blRYxCWIKkk1omNA2/ViXN
      don+qprHAtSXnzLQV6R8QP9fIcIGfGScps86sWXf8BCbCBa2KvgfvM/3vvtm1+seRPV6naWl
      JYaGhshmOzsJfxcUBAHlYpa5mUnsTAYn4g+9pUhXHPZwmCO1Ew9puoZpmaBOqEVSuVTCKdj0
      j410HySg0e2xy5AD9HHdMJIj8Sj1JTXTpP/qNeTHH7GzvYJXHkFGnRuVUgjDZrs4QfDZF4y/
      /CJmLh8a2b4f7sKRcRu4dajVOt6jSX9VoDwXtTTPubffOHR+RyUhBL0jQ5SGBnhy5y5ffPkl
      Fy9cOFJjcqUU9XqdJ0+esLi4iK7rlEql5yoAuVwO27QYmZk6JBfk6KdSK3IkhMAwTQLvBIxg
      gJ5cnkpt58AxAnEkg6fbCaFpGppqCEArmtRp5zAch+FXr1FefcrKna+o9M+hnHxouwqBcHLs
      Gmd48tGHFPKZsAJZEO5EKtr95f4uTkrt6lYBWghBbXWZidF+csXuRa2eGffWNIZnz/DxR58x
      MT5OsXiwTSKlZGlpifn5eer1OuPj40xOTj6zCvWslMvlkK6HChTigHyDo6xIeEp2HmlYFkG9
      fkICUOzBe7T2jV4zhN+DRuKJJtBFlC/a7TvR6RHvEEIIdMchOzHNcDaHfus2W9UCsjiEil+G
      0Ah8n+z0LFapnNwvZvPq40fUtzaTezTqHrWTXFmi/1uXvzEdO3kepajvV/HqdbIDZf7+H/+B
      //qXf4XTwZ/heR7r6+vcvXsX3/cZHh5meno6DF1/jrp/TLquU+4ts1fZoVA+HEg4KgWREzE+
      CU3bItjdPxkBsC37iJGbjcOrmz+giZri57VGo4qWscl1Wu4EDV51+gYYfa1A9uYNlrZX8ItD
      aEGAqu3TU+rB6RtIVCulGtWGCQI042gYvI6ip/dgR1Q3JuykAwsRNpR+cvcBm/OPKReL9OTy
      TJ4915ZjoZSiUqlw9+5dKpUKQ0NDTExM0BM1KT9JymVzuLUq8GwC0Ik/RPhB8rPp2Kj61skI
      gKZrBLLzztw8+XDCOxubbK2uMfFCFPEIbK9vgIJ8qYfa3j5urUa9Vsd3XXzXQ3o+fqWCtreb
      lMVupTSc2Yl02yEzOIRx5wGalPQFW0gZUHjxSke7Iu4QmZ2e6/As7SQDSb1Ww8kdX8eOi4u1
      XvvTn/+Swckw5zoIFI8fP2Hl6TKzMzNkMhmCIGBzc5P5+XnW1tYYGhri2rVrv9O+0MclU9ep
      +p0BjOSZUy9v8ev75Io9lAfD6ALP89heXSdfLiGEoL6/T71aw6u7eK6L9H1WnixT39w5KRSo
      vV1lTJ2s9i9/+zHZnjyP7z1EEOqrscPId8OTRNM1dMvEtCws20b6EmVn0KJjv5suHa9jQ9xS
      c1GKWmWbut2DEUiyI2NkxyfbBEoIgQok1ccL6JkcVoQSHeq21w2qu3sUj1nbM75nJxoYHcFb
      3kBTit3dHaYmxrl04SI9PT1UKhUWFhZYXV0ln89z9epVyuXyN9Bv+Jsl0zQJOqSjxtCvgIT5
      lx484vqth+hK4SgPTRPU6i5St9B8NwQmEGGtUd1AGSbCMPE2t7F7e09GAHRdp7Kyxhe//oC4
      oJVhWYzOnWlRCcLHre3t8dKbbyClpLq7RyaXJdcTpRC2MEKsilx/9zeYk7MYuXhcPFy07czd
      mFR5LjtPn2LWJbr0UcN5dCfTEX3avv0lQtcpnr/cuH6H+aVJ5IvsblVgauKg5er+/Q7Xrm/v
      8sM332JgYABd1zEMg/39fR48eMDCwgLZbJbz588zODh47Jqiz4sM3eD+Z5+zsriUrGUml2X2
      pUtoevPmWNvbR5kOzuw53J1tlPSxekrYsVC3qEFCCPxala3KR2TPnD2hE8AwMAyD0mB/UvMl
      kJKvPrqOpuuMn50Jk9xTBqymCTK5AoUOiEkrM3qux+Z6BfvyueQzkbIlOpG3vYWq15N/69k8
      cnmRAQdmh0r0DPTx6N4C256LPTCElsliZHO4m+vUlhbRC0VyE1NHciDJep3ayhKqssZCZZn+
      0WFKA/0dx3Z6zgMz5gSsrK2SzWWRvkx2fdM0mZ2dZXR0FMvq3r3+NJBpWay6GhWVTepFyY1t
      7v7vf2JqeoyBsWECGeZ4VNY3QCl0w8Ap9yYxQk12Xss7l/t7YSKTZZ+MAJimSTabZfxsc53N
      kTNTrDxaZHXxCfVaDd0wMEyTuasvYh2ASrR+7tXr+J6LfcSSJt7GGtrjexRyNkLTyRZzaJpL
      /so5evp6sR0H07YYnz3D1soqy4uPWf5qE0/oaJZNbmoGZ2DoSPfaffSA+uI8c2dGGX/rdfy6
      y/3Pb/Ly299NdqhudBSmNR0bz3X52c9+TjabJeM4nDlzho3NDR48fMDk5OSpZn4gnHephDOW
      OhkHh5FjkzxaXuLeh1+G4J6uo1tWUtQ4fqqDjF8Av1pNVOiTQYFsO4zlaCEhBINT4wxOtsex
      HFZGJf17z3WjoIqjkbdTYWp0kAuvXT1wXGmgj2J/L9lCnsdf/wSVyaFrgtrdW7iVzUafA92A
      QOLt7oQNP6SPJgQOksmxQc791Y+bPN+P7z1g+eEjhqePV96wza4JAgrZHI/mH1Eol9DyGTa3
      Kqx+9ikP7z+gurOLQJx6FSifzXas8KHbIUTNxHT4QZfU0zR1sv1kvRaWz+SEPMGmaRL4sn1y
      ouEAE4iwOhyd9faYOhmavufj7lfRK5sYPaWGrn+A57iTQHYiIQS5UpFv//E7mLaFpmncvX6D
      bF4jm8+wW9mmtl8jm8/Sf2ESwzSTe2YLudDp1QJdjp+b4+HN2wxNTRx5d04bhCoI8Hf2qa9t
      4kgwJ0ex+ssYjo0z1ItX9yjNTbJX2eH6l7dYW1/jnbffCeNnHOfUnQhOJtNRAEJ/i0oQMCVE
      Ep17HP6Qbh12dwjqtZOzASzTDBuXpRCIuG2pDGQbPim6PGinVyc9D2WYbN+5iTM8SnZyOlm0
      TmT2lHh6/yazu3tk8rlDs79yPYXECF9dfIzp2Fx+47XjM280vjzYz73rHm716JCoEGELVn9n
      n9rqBv5eFbMnT352EN1peG9N28aMvLk9fb0MTY3z8POb/Pf/+T8YLPfywx/+iJkzZ06VENiW
      hSbad29N09DQwu6VKUockV34o/U6QkoGsjr7dz57vmVR0lQsFtmrNMr5JR5cIdA1HS1OvRMC
      TdPQdT35u9X50/ryfM9DzxXofeV16mur1NfXOpbWiMko9eKhUd3fB46ellnb2+fR7bu8cO3q
      sRkoPVo3DHr6ell6MH+k76ogwN+vsTe/xN7CEghB/swY2YmhJubv+F2l2N3dxfN9Hi4u8JOf
      /oRKpXKsuf+uSdd1sqbRVMgq4Yfo95qmJWuo6Tq6FuZitKp1nfhDSJ+pC2e58tpLJ3MCQFgC
      Y2lrm0JvuYn5gY4/Q/jgKnJnBy0hDuldW/o+GGGj5cLZ8+ze/wq73NdVX4ydbofFCqXJc12+
      fO8DJi++0IBkO1y3axWIFpq8cI4bv/ot05fOH3hv6XrUlzdwt7bRMw6Z0UGsYv5QXTgmTde5
      +PqrjJ+dBWDlxh0ymeNXYvtdkmEYlB2bjeg9duIFTdOahIJjvDukj2nb9I0On5wADA0O8dWX
      1xlmKtHzY6ZO4muUwk9KWYThDXF5k1bdLs1o0vPBtFBKYRZ6KMydZ/2j9zCyebIjY5jlvg6J
      8O3J1/GxKlK7TUyPv75PeXiQ/tHhrs94lJMkHpPrKeDVXXa3KvT0lpviegCCuoe7UaG+UUF3
      LLITw5g9uWN1Ul9dfEJpoA8QeLU6m0tPuXzp8nMPeDuMDMOgL5dlzffRUgwtA5moyfHPQaCa
      0TNxuANSSImdcU4OBQLoLZfZ39lJjBlo3jGDIMDzfZQKaDxOEHmKRegt7iDpSikCGaBZjcAv
      M1+gfOUa9fU1dubvw93b6E6GzNgkZrGcMFHsgRZCJMFTnWLZ1p4ssfF0mStvfedAdOo4NkEg
      A4r9vexuVhJnoFIKJSXu5g7u2hZKKTJDfexLDztjhesWr5eUeK6Lncl09ngLwerCY26//zGl
      wQH8jW3W19Z48+XXjjTH50m6rlNw7DBDMPpMCIFGo6q4lBIZyLaAAoVC1/SOa5DYByrAinIr
      TkwALMtCUwLp+wjTAPRk55dBgO970cO16G/xn4PUBCmTam0x6bZDdnSc7Og4ge9TXV5ib2Ee
      eedmmJm2V6G6t0dPX8oTHaEMaQpkwPzNr5i9crktSQNSJ0dcA5U4WrSREBPPPQgCKmvrrC48
      YePpMvvbuwCMzk4T+BJva4f66gZKgTNQxuotInSN27/4NZtPlzl77WUGp8bx6i7Lt+7iVXbp
      vzhHb5dT6dIffIu7n37O6tfzjAwOcuXFF4/dWeZ5kBCCfKGAWlqHYikBP+J186VsM4RjtaB7
      AHRjgxUobOeEBUDXdTKmifR8DNMgCIJEp9OEwDRMZBAQxI2ym9OpDry277mg5br+XjMMcmMT
      5MYmCDwXf28Pf3ebjz+8wcTjZWYuniXbRa9fWVjEsEx6ervU9E96/ER/iXjnUSgFft3F9zyW
      5xdYXXhCEASMnJnk/LdeRQUBt9//hPrmNvXVDQLXx+otYvf2oNmNRPeLf/AaT766z90Pr7P1
      ZIVMLssfvnyNocFB/tc//j09A30YLamb8e639vgp1b09zp8/z0svvXRqfQHlUgnt4SIQhjLH
      qpAQYdsjLVKZZZRO2zgKDskSk34oBNGpf2ICYBgGeTuD73nYOMhANhm/IkJ/lFK4vtdSbOoQ
      A7XuIaxmfb4baaaFVbKwSmXU6AQLC/M8+um7XLw4x+QLc1F+aUi1/X3u37jJK++8FdaaPGgm
      yS8Ubr3O2uIS60+esrtZwcrYFPv6OP/aVYoDjVLk7tYOk8Mj7C88xSoVyI4Po2caDrP4OQzT
      ZOLSOTy3zlzfMMPDI0zFHl5f4tbqbQIAIXo0cW6W/VyBx48fc/HixVMrAH29vZj1enKaStnM
      HzESpKlQVT5qLcXA95ve2YmeADknFAAAFE0PGZMQAlM3cAOPoz6l67qIZyhCKjSN3OQ0Ncdh
      Y3mF6Yvnmn7/+O4DhqcncLKZhlCl5rq29JQb7/6WgfFRBifH2FpdZ/PpCr7rkikUGDs7Q+GV
      IqZlYUSlS1QQ4O9Vqa9uIas1AqXYFpLJ8UbNom4CbDkOpmU3mB+4MHeOp2sbWLYd9tVKMbjQ
      NOxshg0lWd/dZqtSYXBg4FT5AGLq7e1Fq9fwVdgqS6lQCNIweGwX6JoeqUSH80drwYIT8wNo
      mkY+n6e+FxWtipwZrfAmkEh8HLR82OvyXe/IsGArBW6d2vxdLrzWjO0HMmD54SPG5maSObUy
      zsLtu8xdfYmtlTXu37iJYZpMXzrP63/6I17+/h8yMD4aJnibBkoFyHqd/cVl9uaXUFKSnRzG
      Gu5lY3Xt4CjSCLYdmpni67Ulfvbzn1GL8pCvXH6RvC/47J/f5dOf/ZLdjUYtbqUUKw8eMT04
      wvb2NgsLC8+0Rs+DbNvGtuKeDxF/dIGUjUQoDn/nyvebWjudaCD42NgoDz77hMGpCWiYjqER
      qzUQmbTe50vZVlowHhcvkC9lJFCh4ZlOeTyMavP3ePXVS2TyDRtC+j7Xf/Fr5l65gt2Cmfte
      uKCarmNYJvX9fd748x+3XVclOxkEdRd3dQtvawcj65CbHMEohB7gsqnz9ac3cOt1TMvqWvVC
      EHp5Jy+9wNbKGn/3T//Ad65eY2pqinfefIt33nwL3/d5/8MPuHfzQ8ozE5SGBsj0FLh77x6v
      v/IKV19++VTu/jGdnZzgw8oW+mAcaCiaoND03C3TxJd+WGbyAAROBQGa1sg3P9Hct5GREarb
      O1FOACGzBoogCPAjYyXt2tY0DdMwOibCp3eHnlIPyvcTIWldirDKW2Rgp75XW12mpPkMTzfH
      5FTWN1h5tIhhGk3og/Qln/zzL/nN//kpX7z3Pjubm+iGkcw7/R9KEXg+9eV19h8uIatVsuOD
      5M6Mhnh+YvfogMKt1kjhSU1rEa+HiB6uNNTP4IU5fvnpRzycn09+b5omb7z+bf7TD/8IbXOX
      L979LY9u3OLN736XJ0tPeO+99zqeuKeFZiYm8He3UTFvoFBBuEFKKZt4I9wkDczIcdaNjGwW
      zw8bqgvEyQpAxsnQk8s3hUTEr1hFNkGrEBy2YwkhKPb14m2uNX2nLXyiRSwC1yVYvM/L37nW
      ZEBWd3e5//lNXvnBWzz84hY33v0tO5Fa8fDLW/SNDvPKD75HplCg2N/H4ORYy3U93NVN6svr
      7N1dwK/sYvcVKcxNYfUWk6jEmHTToH90mK219Xi2TevS+qyxWujksigjrAuaflZd1ymXy/zx
      D36Et7HND95+h48//pjhoWFmZ2ePHPZxElQqlbB9ry2eXxEiQ35KCOBoJ7zhZAg0na3VcH1P
      PBduamycxbUN8qU40SWuDxf+y48MH43mgLhOYQbxAhR6y4gvvj7wvmkhCDyX/ft3eOGFaexM
      Jrl+IAPufX6TmcsX6B0Zon9shM3lFb74zQeUBvpZWVjk5e9/FzvjMH3pfHTdxvtSSuGubeKt
      VcJyjIO9WL09CNPo+rKEEExdOs9n//oegxNjkRoUrwyhZzrt9o8+r6ysMl4oMzsz0/G6AH/x
      F/+Z3/zmN5w9exYhBKOjoweu0UlTIZ9n0DZYU0HSrrapkIEK8GUUG5TijY78IVLWY0+Z1cdP
      KA8NnOwJADAyPMLu5labRy+kiEE7nASBSqkH0Z9AhX/39JbI2kZYjfkQUipg/6ubnB3vZ+by
      +aZaNA++uEkmn6M0FFZt03Wd/tERXn3nTSzbwjBNbv32I7789Qf4rhvZrXFAn4auaZgZB6EJ
      rL4iznAfmtV8RHfagTO5HEOT4yzcuRv5RdpDMdLk1mpUHi3x+rXXusKaQggmxif48z/7c9bW
      1njhhRcOXZuTpmw2SznjELgeDUW2GQ4PveiybR2DyCGZcEeKf+z+QWrVOkqdQH+AVuopFNA8
      P6qPHxu+zWMUoWFrGkZDnUk8rs2DlQLN0JGejxYlz3ejwPPYu3ODKxfPMJaqRFbd2+PBF7fI
      FQpMXDjbVibEchxmXrrE9KXzSClZfbzExz/9BdmeAnNXX0ycaEIIrL4SVrkYFjw9Bg1PTfDp
      L37N5PmzmBFkmrBAyikUBAGLt7/mrWuvUyh0dt6lyXEc/vRP/uTES58chTRNY2JsjFuPnqJn
      xuPIlDajLlABBOGm0x4omdpsiNbOMPFqtTCw8jk8x4GUy+WwlYaSQVh9TUA3PPdo+mrjlOjU
      FzZ9rf1HDzgz0sv43BkQAs91+fqTz7n+i1/RNzLE+AuzXRlFCIFuGFi2zdjMNK/9+B1GZqb4
      8r0P2K9sJ6ePEAKhN1CLTjZJp7nZuSymZeLV6qggYK+yTXVvL2wXUp0bAAAHDklEQVSEvbFJ
      ZW0jsZE0XWdnZxtf+qytrR1q2LaGlJ9mmjlzBlXZaKB4Hafdqu50e7ZGRIH0w1KWJ34COI5D
      Tz5PZW2dfKmYqDFpazj+pxYhQUEQJHBXNIQE74ywE+l7qO1KWICrg+DU1lcYFDXGZ+ZYfrTI
      yqNFnj54RHlkiNmXX8SyLXY2txL0gegWMal4O1IpD61hMHJmio9++i8UesuMn51FN/QmCLSJ
      0shO+j7R73zXY/72V2ScDAN2jrrnsbhbYShXJJNxePjVA3wNzGyG//vLX/DJp9dZXlvhR2+/
      w5WXrjzrKzlVNDQ0hF6vIfd3QTcSRK2ZIrg7EmzpSxRBY1jTeIXc36O2v8/2xhZCddhWt7a2
      nmuhpCdPnvCPP/0Jmq41dLXY2wcQQX5KgC5C3Rqi50oJe8NGAK8W1YbRtYbxExlCSimCeo18
      IYsmNHZ3tvHqLoViMawaHBvIieEU3khLdiCR6PuxUZqeZyADqnt76FaY/C8iJ1881dbY9qa/
      VSpYTko0XWPmzAxnpqdRSrGxsUF/fz9CCHZ2dtjb32Nrc4vKzjaa0CgU8vT39TM0dLQk/eNS
      tVpFCNGxzOLvin7+r7/ks9t3wl7QgaLxOuN3FP0kIoOYdB/heOVV8pMG2CrAyWVOhwAEQcDW
      VhjuGwQBNc9t3g0jUkqhaxpZO5N8L1YnfCnxpR/GiCtF1naaYscPu78fSEy9MzqTNr475Z52
      c7x0+l4rpNuG7Yvm1E9d18nlcqem5dFJCECtVmNvbw8Az/dxOxTNgkh1NC0sw2yLIPWkH0YZ
      Sx9d08lEBYxPXAWCRnaPjDy4KYEFmnX/QClqbj1CWfTkIcOfrc5Q4RF8B2bUKilug9T6+1ZK
      8haiaNVOenWr70G1zCvObmu9ZnqMlJJqtXpqBOAkKF7bwzYaCH1HtSBI3me8qZi6gamDMs0m
      3joVAgBh7Ee1WkUjVHN81V4bMn5Q1/cwdaMt8SGNDnXaqbtRU7RlSv1K31cphQwkMggaaIIA
      GRmcOf3wtMLWUyMdAp7GsE9rhOZJUVzhzvf9sE0r7aXzG2EwPogwr7xjS9eUj0aIE8wIayVd
      1xOGMA2TwGvo80nogwqzfaQKkqoKIor58XwvQgkEQjVCJ46LdkgV4Ho+RnTCxD6HqluLptC5
      BEfVrWFoOpZ5cIO69G4V5zjHFId/t6I4/56b3n0T1Hqam4YRMnpklyU2FCGveIEfKhKxLRUE
      eDLsrUZkQsS8cWoEIA0NaprASbDv5mR1AB09+Q6ERmfd8xLjyNB0bNPCi+KJDN1oWqhOFOcd
      eBF06ksSNatb7FFTtKhSeFJi6MGBak2822uJId/uzW4NC//3Aln+rkiIMBrYdd1wg9QNDE1P
      QIpWW0rX9SaEzvN96r6brKmlG2iEjQZPjQDoUUmLTjkBMbO1Mk2THp6KEA0iMdeERsDRgr1k
      EOD6oXEVL2hoWMuONkErU6oIvvWkjxZoGCk1plXfP8w+iU+CeKzv+6cucf15k2VZVKtVoH39
      047B+GdowMpSBc2bFQ1+OjUCEEt5W64ntD9YC7rip8Kn49+HO78O0WnRSXVpNUq7UZAad5gR
      5kk/ctrYCVzbadxBFL+ceLx3pGYi/7HpIEO4FVFLv+c4rbZJAILwGpZhni4BOMhD2moopj8L
      VLtBpFLGTuOzZtTFD2TS40uqDtXGWqC0oxrW8WwOQi4Ou0563qc5ZPl50WHe85ha31kQdAdT
      4BShQMAzoR8ykG2IQPjw7bttEwRJ6Fl2kxMn5TrpwnRHgVQhtEH0FnWnEx10Pd/3E3i49aX+
      vlI3DSGmTies30WjSNTqb3SG/0YyTbNph09TqwOpwQztTBEyoN42Pv5O7DQLm3EbOKYVdq2h
      Hbtvg1m7UDw/SzexTKtZ2FqOZgiRCdkhijG+TyuC5R+xeO9/ZDKiZKNOlN4gDtsorFQOxr+L
      EyCO+4mZIq3vhfmgsQOMxPjt5pSK8ft4jK5peL4fwWqNsfFcjuNPQKkkYrV1x+6knx4E06ZV
      NU0LE11+n51h6XfSSjFwkj4xoeEZTkqnAAia/EenSgCg8zHXCnOlSamwp5hSYV/Zw/R1IUSy
      20OUWRTIJI6nlY6jdlhROl4naLMTHfXa/98OCKmbHZC216BdtdSFhqKz1/1UqUDQPVS3NSy5
      ldFacfajIi6GpmMZZhvUeRxq7D76ke/bOsfD5pyOfv19pbgWUCulIfL4Z+iOuqXX+tSdAKZp
      tsF+h+2gR4Eyu5EQYZyIoYcJ73W/vTHDQZS+Z+hssZt8AIciRupocUtShojV73OYRLfN8d/C
      H6fqBEhLcnO8f3tVhHh8Jx/BYZBqx/uK0MVu6sffE9L3rvtuVLT1YGHs5Eg7iHzf/71Xg9L8
      IVNr0Yk/WnmgNeQk/t3/A7/8aS2ukaDBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 31' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 33' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deYwj2X3fv1UssopH8yabzb7vnp7p6dnd2R1lstYupI1WFizbUYQkcAxY
      MAIYiB0YcBIEcQJYCQI4fwSwEeSCYQSCYMFBYEUxpFjRWtldW1Is7czuTN83m0eTzZvFq0nW
      wcofrSqR/TjTu5oZTnv5PsAAu/yyio/F933v937vV12MpmkaKJQBhX3eDaBQnifUAJSBhhqA
      MtBQA1AGGmoAykBDDUAZaKgBKAMNNQBloKEGoAw01ACUgYZ71h/QbreNfxTKVYN5klogTWsj
      cxJDuaFhZm4KqcgBWIcfowEXopFD2DwjCPldAABFUWAymcAwzFNrPIXypDyRARSpicPDY6jN
      IvJFFZzXi2Yhg+lxD9JNGxqncbz65mfAs9QAlKvJE60BOAsPr4NDNN+EY4jHzMw0Rnxe1Mt1
      TM7OIThkQ12moQ/l6vJEBpAbNdx7sItPvPIyRr1WnJycIlssweqw4jSZQr5Wg91M19mUq8sT
      9U7WzGNyIoxo5Ah8aA5DbRGj88uYWVqF0MxiZuU2eNr/KVeYJ1oDfBToGoByFaHjM2WgoQag
      DDTUAJSBhhqAMtBQA1AGGmoAykBDDUAZaKgBKAMNNQBloKEGoAw01ACUgYYagDLQUANQBhpq
      AMpAQw1AGWioASgDDTUAZaChBqAMNNQAlIGGGoAy0FADUAYaagDKQEMNQBloqAEoAw01AGWg
      oQagDDTUAJSBhhqAMtBQA1AGGmoAykDzRA/J0zQN0AD0+IvnsqLAzHH0z6FTrjRPZIBaIYk/
      /da7ePNvfwGnBx8gLUqYnL+GcnwdYk2Bb2IFL12feFptpVCeOk9kALs3jJdfWAULQJVkQJXB
      mUxQTQ585mdfwTv/9z20r42h3W5DVVX6qFTKleOJDMCyP1lCLN58BStmDe+8+wBmXoLUrMNk
      4cGyrPE++oQYylXjiQxQPI0ikTlFri5h2CcgfpLB5NIyHFoJ77x7D7fu3H1KzaRQng30GWGU
      gYamQSkDDTUAZaChBqAMNNQAlIGGGoAy0FADUAYaagDKQPOhDPDD99dpGQPlY8mlBihXqvjO
      29/HN7/zLlRV7UebKJS+8chSiFZLwjffehf7h1FkckVEYifYP4rh2sJMP9tHoTxTHmkAnrfA
      7/XgnfQ93Ly+gH/4D74Ajnui0iEK5crxyB5dr5+h2ZLwpb//C6jW6rTzUz6WPLIYTlFUABo4
      joOiquBMpif6IFoMR7mKPHJY57ifdPgn7fwUylXl0izQyckJ4vE4vvKVr6BSqfSjTRRK37g0
      sI/H41hbW8Ps7CwymQycTmc/2kWh9IXHGqDVamFqagocx8Hj8WB0dLRf7aJQ+sJjQ6B0Oo2v
      f/3rODw8xHe/+13k8/l+tYtC6QuPNcDk5CRee+01WCwWWK3WfrWJQukbl94THIlE0Gw24fP5
      EAwGf+o0Jk2DUq4il2aBVFXFt7/9bWxsbKBer/ejTRRK37jUACMjI1heXobJZILFYulHmyiU
      vnGpATY3N+F0OlGr1ZBKpfrRJgqlb1xqAK/Xi+PjYxQKBTgcjn60iULpG5duhJlMJrzxxhuo
      Vqsw0ZIIyseMS2eAUqmEhw8f4v3330ej0ehHmyiUvnGpAW7evAmWZbG4uAi/39+PNlEofeNS
      A6yvryOVSiEWiyGZTPajTRRK37jUAB6PB6VSCUdHR3C73f1oE4XSNx67CG6324hGo3jjjTfQ
      arXoTfGUjx2PnQFisRhUVcX3vvc9pFIpeDyefrWLQukLjzWALMvY3t5GJpOBKIqoVqv9aheF
      0hceWwynP9tLh3uCpz7SYjjKVeSxa4DNzU0IgoBQKETvBKN8LHmsAZxOJ7761a8iEAjA4XDg
      85//fFcmSG7W8MG9NSzffhmtYgIPd6JYWHkJ5kYGm3sJ3LxzF8Nu2zP/EhTKT8tj1wBTU1P4
      9V//dQQCAQSDQdjt9i5dkSRIbQ0tScL2Xgx/4+7LiOzuYz96gtdefxl76zvPtPEUypNyaS3Q
      wcEBfD4fcrkc0uk0xsfHDc3q9CLodoHRAI7hwDIMGABtMGDAoCW30G636XOCKVeWS+8IkyQJ
      Dx48AM/zWFlZ6SqIK55GcX9tF9ahAKZHHdjej2Hu+kuwNE+xuZ/EzVf+JsK+8wpSugimXEUu
      NUChUIDNZvsQ9wRr0DSAYRgYp/zxjABQA1CuJpeWQmSzWXzjG99AJBKBJEmPeSdjdG6GOf9v
      2tUpV51LDRAIBDA0NITDw0O0Wq1+tIlC6RuXGiCdTuP09BSyLEMUxX60iULpGx/qEUntdht7
      e3v0pnjKx45LDTA3Nwen04mVlRUEAoF+tIlC6RuXGuC9997D8vIyJElCIpHoR5solL7x2I2w
      g4MDbGxswGKxQFEU3L59u1/tolD6wmMNMD8/D7vdjg8++AAMw8Bmo3U9lI8Xl5ZCRCIRjI2N
      YXh4GIIg9KNNFErfuHQNoGkafvSjH+Hdd9/F2dlZP9pEofSNSw3AcRwURYGqqrikaoJC+WvH
      pSHQtWvXjDognuefeYMolH7yoTbCWJbF/v4+crncs24PhdJXLp0BKpUKtra2UC6XwbIfyi8U
      yl8bHmuAcrls3BDj8Xjgcrn61S4KpS88dki3Wq2YmZlBrVbD3t4e/cNYlI8djzVAqVTC1772
      NZjNZrz55pv0QXmUjx2PNYDNZsOnP/1p+P1+lEolOgNQPnZcekvk04LeEkm5itC0DmWgoQag
      DDTUAJSBhhqAMtBQA1AGGmoAykBDDUAZaKgBKAMNNQBloKEGoAw01ACUgYYagDLQUANQBhpq
      AMpAQw1AGWguvSn+w5I5iWD3KIHQ1ALcbB0buzHcunMXfie9i4xydXlqM0A0GsX4zCJmx0PY
      PYziZ159CVsP6WNSKVebpzYDzM8vIZmM4t2jBGy8Fbxgh6Y06GNSKVeap2QADdlMFtWGBLB2
      MEoN777zDuyBebAsa/w9IXpLJOWq8dTuCVYUCc2mDMFqBaOpOGs0YXc4wP64w9N7gilXEXpT
      PGWgoWlQykBDDUAZaKgBKAMNNQBloKEGoAw01ACUgYYagDLQUANQBhpqAMpAQw1AGWioASgD
      DTUAZaChBqAMNNQAlIGGGoAy0FADUAYaagDKQEMNQBloqAEoAw01AGWgoQagDDTUAJSBhhqA
      MtBQA1AGGmoAykBDDUAZaKgBKAMNNQBloKEGoAw0T+0BGZ0Yf3CaYUD/FjTlKvNMZoDo3hre
      +j/fQSJTeRanp1CeGs/EACdZEZ/+W5/E8e7uszg9hfLUeCYhEGPiwJk4aKr8LE5PeUb80Vvr
      iGfKxOu/8rOrGPU7n0OLuvl3X/s+2u3u57kwDIN/8cuv/tTnfCYGcHAyvv1n38H4wu2u19W2
      hupZk3i/iWXhtPNQ1DaqZy2ykSYWQzYesqKi1pB66CYM2SyP1M2cCQ6rBZKsot4kdYvZBLtg
      QUtWcNYkTcubOdgEM5qSgkaL1AULBytvRrOloCE9Wm+0ZDQlhdCtvBmChcNZU0ZLJnUbbwZv
      4VBvSpBkldDtggUWswm1hgRZ6aFbLbBwj9YdVgvMnAk7sTw2j7OE/ndevwYAqNRbUHs86NBp
      42EysSjXm0QHBQCnnYeJZVGuNdHu8UAil10AyzL4jd//s57X/7/+k5+DxWzCvd0UFLX78/UH
      DmmaBrFG9i2GYeB2CGhrGso99GdigNVXXscNVYWJ6z79aaGK3/j9bxPvnxlx4/f+8WdxfCri
      n/7ntwh9edKP3/21N7AbL+Bf/eHbhP7iQgi/86XX8fAwg3/71b8k9Ls3xvDPf+lV/GgniX//
      3/8foX/qxSn85hc/gb9ci+M//s/3CP1zn5jDr/38bfz5/Qj+8FsfEPoXPrmEX/nsLXzzr/bx
      R2+tE/ovvXEDf+9TN/An7+7gT/5im9B/9XO38AuvLuFrf76Bb/3VPqH/o1+8jTdfmcN/+98P
      8d33I4T+W3/3E3jt1hT+y/+6j+9vxAn9t3/5VdxZHsPv/Y8f4v5eitD/za++jtW5EPH6Rf71
      V/4Ch8ki8fp/+M3PYnLYjd/+g7dxkiPXfX/wz34Owx4Hfus/vYV8+YzQv/ovfxEuu4BStdlz
      ANNw+VO8VFXDl373T4nXbTyHP/6dL6LekHvqzyYEYhhwP+78nY9JtfEmfPG1pfM3aZphX8+Q
      AFmW4bSZe+oBtw2yLMM7xPfUR3wOyLKMoNvaUx8POiHLMsI+e099esQNWZYxERzqqc+PeSHL
      MmZGXD31a5N+yLKMhTFPT31x/Pz45SkfvghSnw2ff/7N2QAEC0vok8Pn7X9xYRhuh4XQR/3n
      3/+VpRGEvDZCH/acX7+710cxFXISus95fv0/eXMcSxNeQnfZLJBlGZ96YRK35oKEbuc5yLKM
      z9yeRkWfwTt0nmMhyzI+d2cWZ/oM2qGbGECWZfz83XlIigpAAzQYutZuQ5ZlfOFnFn88g/xE
      Z3B+bFvTLlx7AGBgNp1/Nsu0e/42z+0hee12GwzDGP+vKIphGl3XH69K9aula5oGTdMMXdM0
      qKr6kXQAXX1B0zSYTKafSldVFQzDdH3eh9Wf20YYy7I9nxipaRpqtRqazSb29vbQbDYJPZ/P
      Y2trCycnJ1BVMqbVz9+LdruN09NTbG9vIxaLPfZ4TdNQKBS6Xm82m5BlGaVSCYeHh8TDv2VZ
      RjQahSiK2NvbI84vSRIODg4gSRKazSbq9XqXns/nkcvlerYJABqNBg4ODqAoCmq1Glqt7jWT
      LMs4OjrCzs4O8vk8HjW+Per6fBi9szNdpFqtQtM0HB8fd30P/bcuFAqIx+PQNA3FIhlO6e99
      1NNEz87OUKvVEI1G0Wg0us6tf74syzg4OECl0jsNr78/n8/3zwAcxxkf/P7776NSqXT9OJ2j
      Qzwex8HBAUZHRxGJRLp0SZJwcnICm80GSZIQjUa7dFVVsb+/j1gshrW1NaOD6XqlUkG5XMa1
      a9dgs9lwfHxM6O+99x42NjawsbFhGEDXi8UiKpUKEokEXC4X4vF4l55KpcBxHNbX1+Hz+ZBK
      pbr04+NjeL1ebG9vo1qtGj+SrudyOdTrdWxubiKZTBrXSNcPDg4wPDyM7e1tiKJodIJO3e/3
      Y2lpCel0mtDr9Tq2t7extbVldMSLn7+5uQlFUZDJZAyD63qhUICmadja2kIsFgPQHfLG43GU
      y+eZpEQiYegmk8n4bS0WC46Pj41rw7KsMbp30kt/+PAhDg8PcXx8jGq1aui6IePxOJLJJDwe
      j9F3TCaTod+7dw8bGxvY3NxEJBJ5PjMAy7JIp9PY2NggRkCGYXB2dgZFOc+GDA0Ndekmkwmq
      qiKfzyMcDsNisXTpjUYDJpMJp6enWFpaMjqojtVqRaPRwPb2NhKJBILBYJdut9sRDAZx48YN
      XL9+HYIgEHo8HocgCGi323A6u9ODVqsVTqcTq6uraLfbsFqtXbrf74emaVhYWMD+/j7MZnOX
      bjabMT4+jhs3boDnechyd1ZkeHgYmqZhamoKkUiE6DiBQADHx8fY3t5Gu90mrs/x8TFmZmaw
      tLSESqUCSepedKZSKczMzGBzcxO5XI6YQVKpFIrFImw2G0RRxEV4nsfh4SECgQBsNhuhu1wu
      +P1+cBxnGKWTe/fuYW1tDevr60YH7uTOnTtwu90wm80IBAKErkcIDoej5+f7/X4sLy/jxo0b
      CAaDMH35y1/+MvGuZ4wkSZidnYXX64UkSeB5vkvXNA12ux2JRAJjY2PEj1ir1RAIBBCPxxEK
      hbqOZxgGqVQKVqsV6XQa4+PjRCfWNA1msxmSJCEYDHZ1QlVV0Wg0UCwWcXJygsnJya7YWFVV
      BINBqKqKYrGI0dHRrnCg3W5DEAScnp6iWq0iHA4TnTSVShlroNHR0S6d53lEIhE0m02USiX4
      /X4i3Egmk5BlGYIgIBQKdel2ux2hUAjDw8PgOM74p8NxHCKRCHK5HHieRyAQ6AohWJYFz/Nw
      OBxIJpMYHx/v0lVVRTqdxujoKFRVhcfjwUX07+92u7sGCP08kUgEZ2dnmJ+fJwYIs9mMiYkJ
      hMNhcBxHDICiKGJoaMgItS4OQMB5mFQulzE+Pk70nXg8DqvVCqvVCrfb/XxmAEVREI1G8d57
      7/WMUY+PjyHLMrEwA87N0263cXh4iKWlJWOa7UTTNFgsFqiqSpxfj9H17NTFztlqtRCNRomF
      nI4oiiiXyygWixgbGyNmmFKpBFEUoaoqQqEQMplMl55MJjE8PGzMPhfj/VgshnA4jFQqBY/H
      Q8TJsVgMoVAI9XodNpvNCAN0jo6OcP/+fWxsbGB7e9uYSXWcTieWlpawuLgIQRAI3Ww2Y39/
      H1tbWxgbGyNicf2anJycGOFVJ9lsFsViEaqqErObpmlIJBKYnp6GIAhGCNWpVyoV7O3tGb//
      RT2ZTCKXy2F+fp5Yn2mahtPTU4yNjcFut/ecQfS1x9raGqrV6vMxgCiKaDab4HmeGJ0ZhsHd
      u3cBnI8kF3WO4+ByufDSSy/1HIGazSacTicymQxeeOEFI47UsVqtuHPnDprNJhwOBzFCOBwO
      3LlzB/V6HUNDQ8SP6Ha7USgUYLfbIUkSMQ2HQiHk83nk83mk02mEQiHieEEQsLq6Ck3T4HA4
      unSfzwdBELCysgLgfETvZGRkBPF4HCzLQhRFQh8bG8PU1BRWVlawvLxMDCCRSATb29uIRqNI
      JBLEAHFycoKVlRW43W6Uy2VikV8sFjE+Pg5VVXsmEJaWljAyMoJWq0WMzgzDwOl04ujoCF6v
      lwg/gfM1ysTEBHZ3d4lFLMMwCAQCyOVy2N3dJY5nGAaCICCRSMDn88Hv9xPn93g8mJmZwfXr
      16Gq6vMxwIsvvgiPxwNBEIgfSNM0HB0d4fT0FJqm4eyse+OEYRg0Gg1ks1msra0RU6QgCHA6
      nXjppZdwdnaGkZGRLl2SJOzs7Bgd6OIIqs8MCwsLCIVCxAivaRokSTJi/Yvta7fbUBQFTqez
      5+wmCAIODw+NxdrF8M/pdGJ3dxcPHjxArVYjQoRWq4WbN28C6J1JE0URLpcLDx48wOnpKXF9
      p6amMDs7i/n5eSwtLREzYDgcxvr6OgKBAEZGRogZMBQKYWhoCEtLS8S1B4BMJoNUKgVBEJBO
      pwkdOF/H5fN51Gq1rtcZhsHIyAjsdjvxu+moqmpk6C4OTjpWqxXRaJRYPwHnv58efbTb7edj
      gFarBZfLhbm5OSMLo9NutyFJEiYnJxEOh40sTye5XM5YO1zsQMD5KBaJRHB0dET8gPV6HV6v
      F6Io4oUXXsDJyUmXXq1Wce/ePUSjUcRiMSINK4oixsbGUCwWUSwWiUV8Op3G2NgYbt68ieHh
      YaITZDIZTExMoNlsYmJigpjGo9EolpeX4fF4YLVaiRCoUCigVquB53k4nU7CwMViEaVSCYFA
      ADzPE2nSTCaDo6MjbG5uIpFIEAbSR32r1WrE2Z243W4jPLl4bj0EWVlZwa1bt4i2a5qGarUK
      r9fbs23AeRKj0WggFov1HBwLhQKWlpYwPDxM/Hb64KRpGsLhcM80qCiKqNVqMJvNsFqtz2cR
      /Pbbb4NhGJTLZdTr9a4wgWEYFItF1Go1jI6Oguf5rlGQZVmEw2E0m02oqkqMFI1GA9VqFbOz
      s7Barcjn8/D5fIZuNpu70mQLCwtdIwnP87Db7RgbGzOm0M5sgiAIkCQJo6OjiMViCAaDXe2z
      2WyIxWLIZDJotVqYnp7u6mSCICAajcLhcKBYLGJycrJrFLZardjf38fQ0JAxS3a2TxAExONx
      +Hw+sCwLj8fTZXK3241EIoF8Pg+n00kschOJBBYWFlAulyEIAoaGhro6WjKZxPXr17Gzs4N6
      vU7MApubm8jn8zg7O0Mmk8Hk5GTXb6dngTKZDPx+f88wKBAIwOl0QpIkuN3uLj0ajeLs7Azj
      4+MolUoYHh7u0lutFlKpFMbGxiAIAhECappmJD4URYHL5erSg8EgTCYTarUaxsfHn00pxGXc
      vXsXNpsNDMP0dGm9XgfP89jc3CRiaEVRsLm5CY7jkM1mMTo62nUR7XY7PB4PYrEYzGYzZmZm
      iONbrRYkSQLHcWg0Gl0duNVqIZlMYmtrC06nE9evX+86vlarwWKxYHt7u+eGUC6XQ6PRwOTk
      JPx+PzHCZrNZyLIMl8uFmZkZQk+n00Z2w+FwELqqqlAUBVtbWwgGg8QaJJ/PGyFauVyGoihd
      BpqYmIDFYsHS0hJyuRwRRkxPT0NVVVy/fh2xWIz4fteuXTOSDBc7JwAjPAJALHIZhoEoikil
      Ul25+U4mJiZQr9fhcDh6rhEqlQoYhoHFYkEmkyHek8lkkMlksLy83DME+sEPfoBQKPSTMJJ4
      xzNG0zTs7e1ha2sLDx8+JAygT7+SJOHWrVtErpllWXAcB0EQMDw8TIwwsiwjlUpBkiSIoohS
      qdSlN5tNuFwutFotzM3NEVmYarUKn8+HUCiE2dlZIpOgKIqRH/f5fEQcqygK5ufn0Ww2sba2
      RoRQiqJgcXER9Xod6+vrPXdyl5eXUS6Xsbm5SeTp0+k0FhcX4fV6MTQ0RFy/UqmEkZERmEwm
      Y6HeiZ5/L5fLyOfzRKYlmUxiY2MD6+vrKJVKPRfJu7u72NzcJMJXAHjw4AF2dnYQiUSI8E/T
      NLRaLYyOjsLpdBILbL19drsd1WoV2SxZmdputzE7O9tzkawzPT39SN3j8SAUCmFjY+PciM8j
      BIrH41haWgLP8xBFsWsUYxjGyAUrigKbzdaVCWIYxsjDt9tteL3ernO3Wi0UCgUsLCwYm2qd
      7zGbzcY+QiaTwczMDJGHz+fz4HkeXq+XyBTZbDa0Wi20Wi2YzWYiVcgwDKxWKzwejzHddo50
      DMPAZrPB4/EgEAh01UcB5wbXZzG/30/oDocDsVgMgUAALpfrPI7taL/dbocoikZ26eIsFI/H
      kc/nYTabIYqisV+gk0qlsLy8jFarBZZliX2IRCKB0dFRBAIBI+XYic/nQzAYhNfrNUK4zu/O
      87yxvjGZTEQW7MGDB+A4Du12G+VyGeFwuOt4i8UCp9MJnufPS507Zn9dd7vd4HkeLMsSIZAe
      Ng4PD8Nut/c/BGIYBktLS9ja2sLQ0BAWFxe7dE3TsLOzY0zNfr+/60vKsoz79+8bHcNkMnXF
      oVarFXNzc0gmk3A6nUQqrNlsGiMTy7IoFApd64h6vY5SqQRVVZHNZjExMdEVZ4qiiGQyaWyY
      2e32rjWGLMs4PDw0iv/m5ua62i9JEtbW1qAoCliWxeLiYtcs1mq18ODBA6OAa3l5uevz9fhb
      X/zeuHGjK4wRRRGiKMJkMkFRFGKjbmpqCqIogmEYLC4uEiHQ/Pw8OI7D3NwcstksEaYsLy/j
      9PQU5XKZ+O2A8zSrPgiFw2Eixj85OYGiKMhms5iamiJC3BdeeAG1Wg0syxqhlI6maSiVSjg7
      O0Mul+u5SI7FYjg6OgLHcUSKW9M0pFIpbG9vg+M4TExMPJ8Q6PDw0ChjuBgnAuepQKvVihdf
      fLFnmtHr9cJmsxkXqxNFUYyd0kKhQIQwkiQhHA7Dbrfj1q1bRIjUarUwPj4Oh8OB1dXVniGU
      1+uFoiiYnJwkskCNRgM+nw/tdhujo6NE++v1umHKkZERIkSq1WoIBoPGTHcxRNJnL5PJBK/X
      S8S5lUoF4XDYmAEvhjixWAzlchlnZ2c9i/nK5TL29vaws7ODnZ0dQs/lcqhWq2i1Wnj48CEu
      Eg6HjTKF6enpnjrHcQgGg5iamurSNE3DwcEB6vU6qtVqzxCrUqkYUcPF76afg2VZjI6OPlKf
      n5/H9PT0+UDxPEKgVCoFv9+P9o/rvDtHUACwWCyw2+1oNpsIBAJdTjaZTEZ822g0iFKGdruN
      fD5vxMmVSqXr/Pq5bDYbGo0GRkZGukYSnufRbre79F4hhsvlQqlUwtzcXFeIMTQ0hEKhYKQo
      L2aBXC6XUauip0I7dY/Hg2w2C7vdbozgnbrX60U2m4UgCGAYBqFQiNArlQry+TxGR0dhs9m6
      RnE9vBMEAeVy2QjTdERRhNPpxNjYGBRFgdfr7Tq+WCzC5/MhHA5DkiRihhUEAX6/H61WC1ar
      lRiFrVYrfD6fsVC/OAOl02m4XC5wHIdqtUpkCIPBoFENMDEx0XU8wzBG+FipVIgMnR5eVyoV
      jI2NwWq19n8GYBgGKysrkGUZNpuNyCToM0Sz2YQoisQiVVEUY5oVRZHIo5vNZiwuLsJkMoHj
      OGKUaTabiEajaLVaRs68k3q9jng8bkzjFxfhoiji7OwMZrMZLMv2zNNLkgSLxYJ2u00cn81m
      oaoqeJ6HJElEHv/09BTAeUdqNBrEDJNMJsGyLKxWq1E23oleiiHLMra3t4lyBT09LMsyJicn
      iRBH38VNJBIIh8OEPj4+bnTQXiN8Mpk0Uqjvv/8+oScSCezu7vbUGYYxsm6apmFiYqLn8dVq
      FbVaDWtra4Sez+eRTCZxdnaGg4MDQi+VSmi1Wtjd3cX+/v7zSYPu7+/DYrEYWYFbt24R7+F5
      vud2u6ZpxmJHluWe2/GdI/rFEUiv/7FYLDCbzT3P/zi93W4b8SXHcZfqF0MIvUbGYrHAZDL1
      1C0WCywWi7Hj+ajjGYbpeby+yEsmkz3TrKIogmVZ5PN5vPzyy10zwN7eHrxeL1wuF7a3t3H7
      9m1ika7TaxOy2WxifHwcdru9ZwdsNBqYmpoydsQvou/g6vtBelmMTrVaxdLSEliW7Xl8vV7H
      tWvXwDBMT/3s7AzLy8sAzuumnksIlMvljGrQWq1GTKM2mw17e3swm82YnZ3tWa24v78PQRCI
      EOMydEMcHBzA6XQS1Y48z0NRFBwdHcHj8RBZDqvVilarhUgkYpQLdGK321Gv13F8fGxUZXYy
      NDSEcrmMaDTatdmm43Q6jZtGJicniVont9uNbDaLk5MTTE9PE1kOm82Ger2OQrnq62EAAAM2
      SURBVKEAv99v7LfoNJtNI3ull3N3DhjVatW456HdbmNkZOQjXV+9/XoG52KI43Q6kcvljLXK
      RT2fz2N8fBx+vx/NZpO4Ph6PB6enp8ZG6cWFsNvtRiqVQqPRMNYbnbhcLqRSKTSbzfMZ7kN/
      s6fI9evXjRF2YWGhS9M0Dbu7u1hZWYHdbidcrN/xtLKyYtxY8VGoVqtIpVJGvf7FalJRFJHP
      57G6umrcfNNJPp9HpVLB6uoq6vU6ketOp9NoNptYXV3tGcLpd7Gtrq4il8sRIVQ0GgXHcVhd
      XUUqlSJq5o+OjoxiuXg8TiQBDg4OoKoq/H4/9vb2iH0Av99vJCBmZmaIGXJ6ehorKyu4du0a
      ET5ehn6jjMVigcvlwubmJqFvbm7CarViaGiI0IHzLJTNZoPFYumZIVxbW4PT6YTNZsPW1lZP
      3e12w2KxYGdnp6fu8XhgMpmeXwh02YjCsixisRgURSEWyPoUHIvFzm+E77Fb+Dg4joOiKIjF
      YkbG56IuSZKhX9xnMJvNRq1Kq9UiPt9isaBerxt1RBc7mCAIyOfzxl5Cr0ViOp1GvV4ndnF1
      Xc/E6OHWRV0fgTuvl87FPYuLRCIRIw2Zy+Xw2muvEe95HHoRHMuyxHfT9dPTU2NP4CKXtU8Q
      BGNQulgpDJxf/5OTE2iaRhQSAue/XyKRMDZc+3ZT/IdFb45+w4goil2d8DL9WZ+/U9fvX+7M
      dXfqqqoa5dm9dL2orHMzqFPXU6CdtUideqPRMHbFO3X9PbVaDYIg9OyIj6JUKhmp5ng8jvHx
      8UvvH+6k8/NLpRIxgF2mP+vzX9SfywxwGT/84Q/hcDiMxnZ2QFVVcf/+fdjtdmNB/FEM0Gg0
      jGlYL6ntPL5arWJ/f99Ih1qt1i5dFEVEIhFYLBaj2KrTAHr8bjab0Wq1iHKNbDZr3DfcaDSM
      PQed09NTZLNZmEwm1Ot1zM7Odhng5OQEhUIBJpMJlUqFuG0zHo8bi1y94vWjGKBzzdErC3MZ
      etjFMAwKhQJef/31Ln1nZweKooBhGJRKJXzyk5/8SOdfX183bpqvVqvEIvnhw4fgOM4opb9o
      gA8++MBIwDSbTfx/xejNR4K4VqMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='179' name='Sheet 35' width='192'>
      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
      IqEsjQmuUwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 39' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd2CV9bn4P+84Iyc5WSc7ISELCBAIewuyVMBtnWirV1ttvd33tv312npb
      W9trW/fEAeJCkC0ge48QNoGEDLL3PDn7vOP3R8JSRIEEtZzPP8k55x3P932/z3c+Q9B1XSdA
      gKsU8ZsWIECAb5KAAgS4qgkoQICrmoACBLiqCShAgKuagAIEuKoJKECAq5qAAgS4qgkoQICr
      moACBLhoVMVHc10l5TVN+BXtyt5c11D8PhT1QgYMGh1NDbR7VFSfm6bGRlxeP+c7Q3ryySef
      7CFRA/QguqZweNN8VuaW0Ss9k2CDSFPZPj5YsIHg5Eyigg09cl9N9XFk20L++fI8CprNDBmQ
      jsUk4ag+zsfz3+TDJavYun0XzUoQsbGxWIznb2N1v4uaigpcmoFgiwnhK++s09FUwZIP5/Le
      wuVs3r4TMSGb1CjLeY71s+PFlyiKH0ySv5hF81YgRacTHxPyhfsEeoDvKoKINTiC3I/XsetI
      FaqusWvJaxyr0gkPM6GpCh6PB6/Xi6pp6ICuqfi8XjweDz6/gq7r6JqGoihomorf50PVzrST
      uqbh83rweLz4FBVd11HcDopytxOZeSMP3j6BUIsMgM9ey8E9hYQl9iPRqrHkmSd546MlNLlV
      dE3D7+u8r9fnR9N0VFcjW1auJy+vuvO7LllOyedX1HNabJ+zlVVvPsWKfVUMGjeJ4Zk2Glrc
      6F09wulr6zqg01FVQKvHh+p1UFlVS4dLAV1HVfx4PR483s6yylf0pQXoNgRBJDl7DNMnb2fD
      pvVkWuJ4azP85J+3YNPa2fjB27ywNBdrWBjT736MO67NoTF3Ac/M3UBDi4OY7An84icPEOE6
      yZJFawhPT2PHkrVc/8dnuS4tBDQvpbvX8sxLb1Djs5I+dBo/fmgmpYtf4L1NBRDmZ75V5Cf3
      TMdmNQI+9LBkpk2fwdDMcK4d8gl/fW03h0eOJTuomGef/5CyuiYEWxbff/yHCHve4r1P8wjf
      k8dn6wbx6z/9EM+htbw8bzHVDY2kT/wBv3z4FuKCO6toW2Uuyw6I3PvEb5k1MLrzIegqjSUH
      mDfndfaUNiLaBvHoj3/I+IFRaCIIAp0tviiCAH5XE8vfeYWlmw/gMSZzx+M/D/QA32Vki41x
      46eilu7l+X+8Sp8J9zIuI4SqPauYs6WcH//2SR6+cTA7163meKUdJBMT7vwBv/zpnVC8js2F
      NageN8e2ruaN99ZiSe1Lr9CuFr31BK+/toiYaY/xx/96gKDyrXy2o5Dk4VMYkRpPWtpIpo8e
      QLBJOiOQHzQNEAz0GjCQjF4q9W1tqKKR1FG38PNf/ZRsQwkLt5eSOWQcQ/tlkzNiGrfdOA6p
      pZwVy1YSPeo2nn7q/6Hkf8yiLeWoXZd2NpZjiO7F4Izo07dTPS1sWrWCQj2LXzzxJNf1bmLp
      B4updaqcj/rCTXyyvZ17fvMnfnptPB+88VGgB/huIxKbNZJpOWt5/pNonv/XGCyoNJRX4G63
      s2vVIjRHA/XHdJrr2wmXjZzYtZF8bwf1rW5anT6IBkKimXLLA/zoxtGEmTvnDm0Vx6ihF3+6
      bTJpoTrthw+zvrqBmCmT6ZMcRoUth+GDUi9cgXQJCRGDYMBbsodPC33U1bdCP51efQaQ1vsk
      EVlDmDgxg5biPOpPVtLi2cXH1RYcrU7K806izEhHOvuSZ/3vtTdT3WBn4pTbGJGdTYp8B6Wv
      rqG6xXVeceqO7KW1o4Hcz5YjO6rx1jQFFOC7jmgMI6dvGmHh8aRGmAAFTQXdaGP42DEYNY1J
      M2xkp3l57vcfEXbdo9wxwMDCtiaMgK6DOaIXg/v3I8xsOD1JFAQZwa13zhIFDZ+mIskygtA5
      Ae8caZ9HHgDdR8XRIxRVSoyPCGHr3Gc4EnQ9j35vIPZcP/M9Uuf5qgeP6kXrkkPDQu+sQYxI
      jWD06PHEJfXj1FQ+OKY3/rp9HCxoIDknpktIEUERQdVBAE1QUXQJWZbOIxnogkhIWByDh48m
      RNQYN90SGAJ99xGQDTqCJHRVXpnUYQNJFsqpaNMJCxIoLztJU5sTr9sNqofagqOcqKlDoXOc
      LMsikiies0ISlTGM3sn1PPvWYjavXcmGA4dIy4jFLEuAyBeXbYwIzhrWrVnKq//4K0/9bT5Z
      s8aQnRGD4vfgl8FZV8yaTcWIioogyARJFeze8ykbN2zDFxbLgAHhtNXWYAoJw91cSkFFM6cW
      WcN7jeKWUQIfvfIX3lywmPdefZqP9ntJGxjHqg3L2bB9B8vem4feK4FekeazxBNABFXQ6T1q
      CqLYTFW7QqhFpzD3SGAZ9N8B1ePCLkYyclg6siAQEpdCWoxM7s5cCkoqMEclkpMzhLTwDg7s
      PUKDVyM6qTc5Q0eSFhWET9dIzuxPjNV4+pqCMZyc9GiO5+7k6IlaUkfP4uZrxxJqlnA5nIQk
      9SUzJeJ0C6r6vXR4WqhtaMSNmXF3Psz3bpiILchIaHQQhbm7Kar20TcrgfisoQzPTMRqkGgo
      KuR4aR0jrruBrLQkmsuOsf/gMZrdAjkjR5EU3bl0KRlMJPcdiNHZwPGCYtq8MiMnTGHswFS0
      plL27NqPHt2fO+6+nwybCXdzMyH9hpBkEXDoJtL6ZtKrVwapVj8H8vI4UVyJIXkIQsAl8t8X
      xe9HEEVESUIAdF3H71OQDBKS+PU6f83vwaMIGE0m5EscL+i6jurzookyBoN8Tueh+P1ogNHQ
      OdhRlc7hlShJiMJ5dgd0DUXRQJSQpa7fVT8ur4JkCsJ0/tHPOeermoaGiCyKAQUIcHUTmAME
      uKoJKMAFcDgcaNoVtnXpRlRVxeFwfNNiXBZutxu/399j1w8owAWoqalBVc+/qfJdwO/3U1dX
      902LcVk0NTXhdrt77PoBBQhwVRNQgABXNQEF6AF0XUdVVDTt3AU2XVNR/H7Ur7Pwputomoqq
      anwT63SapqF2WYCe873qx68ofBdmRqrS+fzOptN61I/SZSEbMIXoZjytlWzfvJnyZh+i2caw
      8eMYkByF39HEvp1bOVbehCGkNzNumUpMcOeitbOlitzteYTlTGZociiau5mdmzZSXG9H1UWi
      0wZx7bjBWA09/7o0xUtVwT72Hiqkza1jje3LlGmjsZlFWsuO8NnWvbR7DGRkj2T08D4EG0RU
      v4eK/H0UtJsZPWIQEZYzvgitpXmsyS0lJnMkk4b15quW6bsDX0cDh3J3cLSsBV0Ood+QkQzt
      n4JB95K/awO5BdVgiGXiDVMCPUD34mXvW28z57MjeFSFsj1refGlZbQ4HBzbs4y3l2yiQ/WT
      +/FbvP3hPryonNy5kH8+/Seee2Mee0+2AeBvOMR7i/fS5tHw2StZMO8VNhU1XpESOOrLWfDC
      O2w70Qi6k3XvvMpHK/PxtJ/k/flzWJffjL+1lPdfms++Y/Uoqod1b/6BPz/9f7y1YjvNDt+Z
      i7lrWTjvbd6Y8yrLNhShXJES+Cn4dAUvv7+eNp9Kc8l+3n75IwoqWmkq2cKLcxdS1eGjaPMS
      nn9xXaAH6F4EosbP5On7UokPt1C9613++FYdbfYW8jauJ33wIzz84FgasyR+M/cDim8dgLtJ
      JfvaWfir30HpGm0Y4obzxJ8GEx5uAW85Jb/5M5VNnitSAjnUxrSHfkJ8vwzCTBDTmsf647VU
      JNSw97iJn/75B/SztqG/8jw7jxxmcJ8RuHzRTBgXzp66MwZyuq5QsGkpm5y9mD0NDp3fQLMH
      EAjLHsNvhk8nOTGa9qItPPvKeppaHdRvn48QdSOPP3oTekkSjz65INADdC9GskYPJyXaQl3h
      bl5fvh99SBZWUaGh0UjCkD6EBgWRMHgU0b42Wt0Cw2+6m1tumEKEDKemDKIplDBTG1s/W8pz
      f/kbRQ2JjE2LuSIlsFht5IweRKjg4uimj3guVyDr2gw6yjsQM/qSHBNGsC2e1F698Dk60IQw
      bvvZLxndJwXTacsFDXvFYRZuPsLNd86if7QRQTuP/VyPIJMyoD9ZGQk4agr4eNlnFIUnk5AQ
      RGW+h9jxOUQFW4jul0Oq7AsoQPfjYe+Kd3nh5Tl4Esbw/2ZPIcQsI+gCot75uHUdvF9xFUdd
      EXv259PogoTsCLy+K9MDgEZrdSGLX/87Ly7ex6z7f8z3x6cAIHXaRgPg1+HLdkhUn5O8TWuo
      15NJDw+lpdWJx9dGh9N7hSbPPkr2rOGlZ/7CUW8yP//B7fSJtyIA8qlZiA4eApPgbkajcucC
      3nx3A6O+/xizJo4iLsKCp92J2eTCUduCSiJKay1OUcRkODUlFLtey5n2KLbfVH73uwm0N1fy
      8TNP8eH2Ykan2Xq8BF57A+vef5Xc2lDue/RRrh2SjgEdS5iIt6Yer19B87lxOVsRrHKXwZqO
      iECnQbWAq7WO3K0bKGmJYO5Ltdgriqjxq3y6qRe33zCa4B6dCes0HN3I68+/TfT02Tx4w1RS
      Y60I+LDaVNpL6lDIBHsTdk0NKED34mLPyk3UGXMYkBxB7clj1FZH0C/VRp/sFBbtWMPYgSJ5
      b36MIXICqZECzXVVtDtbaHL4kKtLKS7V8BdtYK09lZmjMjF4Oihz+vB4rkzb2dFayc6tFdim
      3keE6ODI4YOERaWQmJWNVXmDD9ftY1ZyM9u2NTDm4d6YZS/lReVU1DXQ3tJGZVkxQlQE9/zm
      OW70d/YWh5Y8zbrG8Ywb3gdTj485PBzfmcuRxnj+OyuZtuoTHKgPJi2tN9kTxvLe+4vZsj8C
      59ZFNCqDAgrQrficNBFJsH6IF585AoBuGcc/n/0Prrn5YSrmvMpfn/hfZGN/fv/897Fh56NF
      81m94zBeORhWvsIT24by6K1pnFw2h98v8qPrAnHZU/ntXTlXpAiKx4USZCB/1ycc3yOAYCFn
      wkP8/NHx/Prhev4y5zX2uo0Mm3InMyZmI7qKeOaJJ2lCR9PgjWefJnHwg/z1t9MxnXosx7Mp
      jx1Ir7jInq9wipc2LYio8EbeeO4fAOimAfzsvx5m6KSHub/oGV7/25/Q9SR++dQvA+bQF+LE
      iROkpqZiMHRPjB3V58Xj9SEGBRP0Fcb1uqbh9bhQdRmT2XTG9v0i8Hg8VFVVkZGRcakifwGf
      y4FPFzEFWTBcgRlkZWUlYWFhhIaGdsv1NEXB63GjG82YDYZAD3AlkYwmgo2mrz4QEEQRsyWk
      hyW6eIyWEIxffdi3FlGWCQqxnvn8DcoSIMA3TkABAlzVBBQgwFVNQAECXNUEFCDAVU1AAQJc
      1QQUIMBVTUABAlzVBBQgwFVNYCe4x9HRNf1zkZQFRPH8pg1nW6YIgtDpG6zrCILQ+fmKo6Pr
      fME3+ELynDr21O+6rqPrOoIg8o0U4UvegSAEFOAK4GX5s39inyu4yxJSJybnFh6ZOfC8R2vO
      GvZXqgzpk9Rp/6M089GCT8m54Xb6274J0wid2sK9LPl4Cc2iFUkAQ2gsE6bfxpi+kec9w15/
      nEpvAgNTwjs/Nx7lkw3F3Py9W7F9IzXOz64PX2VtSTsGSQJ0rOkT+P5NYwMK0POoiEIS9//i
      R6QHQWc7JKF43TQ31tHW3kFLmx2zLZmMpDBqDu9g+W4vqrM/4RHxpPWOZNy4KcSGmnDYW3B5
      JAx6O8XldvoN7Q+tNRSXVuDwGcjMySHO2v3J8TRFJnPoddw37RqsMoCOIMi4W+qod3qx11XT
      oZpISsvAJrSxY/Nn5Lv74R6cRHJaGhFhvZgyJoYI0UN1hZ3IGCt1pSV4TJGk946isfg4pQ0O
      rLYEMjKSCTF2t8OAhs9t5eZHHiQnJpjOeBBioAe4MoiAH7/Ph18CDTCYRPwdTeStW0K9lEhC
      XAgFhz+FG27F196B6nbT1NKEJoSQosjs3ZXPNTeG46g6wd7ck3hxo1tSSE6P5sjmdTSI0YTr
      raxYbeeu26cQ2gMOJ5rq6yyDBoIkYTCCvTSX5dsr6Z3RG397A7UdPsb1DaehqR1FbKOhKQhb
      Yi9Mvipy93YQl5hO7o5cwkI7yK/wM3j0OKzHd7FqVxm9kmMpK92BXdEZk52GoVuHSgKg4vf7
      8fl8aIBsNCKqSkABeh4BxV/HgleexSx2Oo2PuO0hxkWoGMPjyBk6nezEEPY2vUyHGMrwgf3Z
      3epn4rgRmAwyMk242rydmRV97RwqqWX8jOsYm51KR80R6jzhTL19OlGimzXz51DQOJ6RcV/P
      4vRrl0BUKDqwib1H9yEJEBafwvW33kmQx0v4gDFMnjAQd2keO6t9yLZ0xg3NYo9rOFMmJCHL
      Bhz1flztfnQB3K3F7G9M5KE7pxMfLrDu4+1kjpnAhKxkqg5s5kBdBfbMFGxB3anFApLByap5
      r7JBEtGBvhNv5PqhGQEF6Hk0ZEMi9/34h/TuqpeiLONrrEAyWwixBiNLMgajAUUQkA0SkgGM
      RiNGgwQ+ELoW6zTNzNAhY7l2VH/Mgk6r4qDw2H4a26uRdfD5jcT3gHuHrsn0Gz6NIVMmdPYu
      goAsy9TqAqbwSELMRvySAUlWQZAwmGQkvxGz6ZQiCgh0Tuj9WgIP3D2d3jFhCEozDm87h9Ys
      IX+zEZ/LTXjW6B5wntdQ/aHc9PD3GWgLBjrzDwiqP6AAPY/e6QUvyRjkU3MA4dQv50FCcTlR
      dDjTjne6Q4qSTJDZjCwKCLqOLJhJ6d2fSTdPJ8os43U7CIrsAWt9XUejs9KfSr8lnK6m5ymF
      JuL3eFDhrEBYnccZzEFYTiXJECSCxSAGjZvKxP4JKD4/imTE+iXJtS8LTUMXZQyy3CWJEIgM
      d2UQ0bVmtixfzJEuBYjuO44RMZwVYwEksTPmghwWS1RHLsuXt5KQmMGwIdGnMs9xTmY6QSAy
      JplEywl2rttEeLCEVzUxcnosod3seCuIKrUlB1i1pAWjCMaQCAYMHYOZMxtJgiggCZ2fgiKi
      sW/+jMXOE2SPHkMMOohdgp+tL5KVoTnprM7NZWNtJKrXS0R6NqNzrBguwQPuAiVANrrZu3Yl
      5UEGNCC010DGDUwOuEReiO5xiVRpKCui8azctZaoXiSHG2i32zGHRxMkC3Q0VKGFJRBu1mmu
      qqCi0U5IeAzJyTaaa9qxxUeiuDtweWRs0VZEOrM12pvqqKxuRNHAEhFDr+QEguTOytM9LpE6
      Xmc7NVXVuLpCu0nGIGISemHxNdMuhhEbFoTfaafdqxEaFoagOKksLaXdI5KYlkq4SaWpWSUu
      3kJ9jZ2I2EjMXRExdMVN9ckyGtrcyCYzUQlJxERakbv2SbrHJVKjrbaC2lbn6dhLprAYUmIj
      AgpwIbrbJ/hi+Pxm0gWOPCd47tnH94RP8NflCxt6X3WsrsN5Nte62yf48wSGQN9Svv6ur/AN
      7a5emIvZtRYEgW+qEAFboABXNQEFCHBVE1CAi0TXdXRN+4JxWA/dDK/bjdevfMmS6aVeVkfT
      9CtUBg1nh6PbQ6PrmobWDfIHFOAi0TWVqmMHqLL3fPI8zdfM+tXrOVRS360K4GqooLCsBu8V
      yP+n2I/z2pvr6e7o6E0FeRQ3X75aBRTgItFVP5UFe6h29nTt0bHX1aIYZWJjbd36olwNpRRU
      VOFReroHUCnP3Ufc2KF09xpOY+EOitovXwECq0AXjYCq+ijct4mqrY34gnoxc8Ykwgw+ak4c
      Zuf+AnxCCMMmTKZvQijtFcc4XmenvqQQvzWJvimRlOYfx2O0MnzctaTHhtBcup81244gh8cx
      cswYeseEImh+autakOQookMNVB7Zwc7DZehSMP1HjKF/aszptfKLLoEk09FSzY51FTTbNdIG
      jmD4wDTMkpO9az/jWK2TqJT+jB+ZTYisUVF4kLK6FurrGglPH0qC1MjRgkrCM3KYNHwAsuri
      SO5WjpU3E542lBvGDeyUzdvMnkKRkfdF4bE3cnDvHk5Wt2CK6M3EqeOxBV26WguSTNmxXSzf
      X4NdjGLCpAmk2My01BSxe9cBGh0aA8ddx7CMKJz15RTVNFBTUkg7oWRkpNJeWURduzvQA1w0
      go7f0UhzVStp2YOxVu8gt9pFy8mjrN6wl9De2aTHaKxe9Sll7QqO8jzWrTlCbL+BmNtOsnxt
      HtbULGyym317SnA0HuGDRXtIHz6aBLGdHdvyaHYpKB4nzS1VhKakEiQp1Fa20Ssrm8x4ic3r
      d9Nkv/R8AaKk0nL8CF5zAtkZ0dQcz6Wmw0/J+vdZXyqRM3wALSV7WHfoJD6vi6JdGymqhQHZ
      6RSvW8bWMh99+6dSur+I+jYHZYc3kFfiZ8iowdh3rWZzqR2A9opjOBN7E28x4uxw4FWDGDBs
      GKHufJZ+duyy5gWC4KbuaBExfQYR5y0lt6QOd0s9W9aspiO4N8Oz41m75AOONvlwNxSyaeUO
      TAn9SLK4Wb9qE05rIlnJlkAPcNHoAsGRaUwccwdD4wyEndzBEa+L4toabJnDmDByMEZvMh7P
      GopKm+jrhezbb2P0gDDyW1oJy4pn5JB+1Ba6OXjcS3neCYKyh5ESGYpmSKU4r562VheSUEt1
      hYkpU6IQ0MgaPYxmuxN/UAzyoXI8fj8QdElF0PwSGRNvZMKIHAztVbQ2t+H31rA2181dv7iR
      tCCRjGAnr2+vwdfHRkh8CqNGTyM7WqVi02H63Xo96WIDJ4/a0RUfpQcKSBo7G1uYgWsmp/LB
      7lImp/Xh8MFm+mcOJcgoYY6Oo/8giXann/iM3hTsrkNh4KVXQD2E8ff8gNG9TdQ4itkKNDeX
      0iKlc9vUMUTIIDsq2HWwmhmRAqlTpzN2RD9ai4x49ChGTBiF2ZkfUIBLQdc1VE0FTu0Q64hC
      EKGmEAxi58aOJAho/s42TlEVOo1gNLRTYf61zsQSHQ4PNUV72Npeit+roGvhmAzQfOIgSvoo
      Io2gOqpZuWA5juBQrGaFZoeEfpk2k4qqnLsKpKlIhlgiuyzwZFlG97q70rVqaJoGaOhdYdA7
      by+i6z4aqxup37GJjggTfoeDtDgBV0sNDXIQg6JtiLpC2fE9rN9+DFNkBJLehipmXZb86Kee
      6xmTQUGXCDZFEtRVqw0GGdXembRP1c68A13r3HhGC8wBugdBxiKpHK+tpt2VicXnoKnBhS09
      GOwXOlEkNikcszORG26eiORz09Lhx2ZVWXeglcH39kIEPC3FFKkZ/Pfs6WhtxbzXcKBzidTV
      jt2lEWGLAHcrjW4D8ZfqNilbiRaqySttY2pGKHWVTRjCIhCkC42SNQTRRK9+CZhSRnHDsCQE
      Txv1LjPN1Scwm4Kx2YLRVQ8NjfXY+k/lpkkZ1BVuZPEGFTQ/zU2tGEIjsBrAbrcjmqxYLZdm
      0WowmHG3HaO6ZTjpkVBxopnQAWEXLvYl3ekqR+DM8pkkyciCgdSsvhSeWM1brx5F11Si0kYz
      MTmUjvJTJsFnnwWSwYDRKBA7aDzZJz7itVeOYhBUwlJHcH22SGnQAG6I6KwIRlsq0Q0f8uI/
      j2OQHdS0xTFdgLqqo2w/7mTmzOk4Dy5j6ZEMHv7ReL6OO4zUJZEgCMiijCCGMvmmkcyZ/zoH
      Ikx4fMFce+NQjLKIeFrys+xXBRmjWUaSDfQbOYaiFQuZk2dC83nJnnYP4fYmzJEDCDNJCLqB
      iJAwtn36Cc/mGTEYnPjNkxC0DjZvWkuvsdcx2Kqwa8VKQvpfx5jhyV8rn/CpyiuIEjICEbEp
      pMceZtEbLyEaVISQ/szuHwUFZ5tln3kHgmgMGMNdiPMZw+m6jqb4QTIgiQKa4kMTDUgCqIqX
      9jY7mhREeKgFWZbQFT+aICFLQmfmdUFAEkV0vXM4JMkimt+Hy+FAFY2YgyQOLnwH++j7mJ4e
      3nXTzmQZHQ4vxqAgjAYZo8EAuoqi6RhkA7rqw6+KGE3y6cHRlxnD6aqCqgtIkgi6jqppnQ4i
      aHhcTuwOL0HBVoItJkQBNFUBUUYSQfH5EQ1GRHQURT19ns/jwu3xI5nMqB0N7Ni8nT7X3UVm
      hKFrGKV0ToQ1kWCLCUmUMRhEFL+CIMtIAih+P4JoQJLF02X4MmO4U89dFgU0VUFF7PrfT4e9
      A68qER4WgtEoo6sKGl3PvWsDTZJkQAv0ABeLIAhIhjNdtCgbT7cpssGMLdp87vGy4UxvIZ95
      3IIgIXb9IBlMWCM6223NWcYxRxI3JQWfdRERU1AIpqDPD29kTvmPC7IR09d8m4Ikn3nxgoAs
      npaQoOBQgoLPPV6SzzQAsvFU2QXk05nrJUwWKyZL56fa6mo6DBn0ijCcvocoGbCGR3AmNUUn
      BqPxrP+/vivn2c9dlOSznrGR8MhzkwkKZ/0uSNJZfYAYUIBvGzohjJ0+hgjDd/fVhEQkMmps
      FOavPvQb50uHQE1NTbS2tl5peb5VOJ1OgoKCEMXv5naJpmm43W6Cg4O/+uBvKW63G4PBgCz3
      TIPwpQqgqiqqegWMRb7FlJaWkpyc3GMPv6fx+XzU1taSkpLyTYtyydTW1mK1WgkJ6ZmgYF/6
      ZiVJQpJ6NKPxtx5RFDEYDN+IR1h3oGkagiBgNH5309qJoogsyz1Whu9m3/6tRcPl6MDp8Z3z
      ra5puDocuLz+brHq9Pv86Nq5V1JV6Ln1PB2/14Pb7bsEE2oVj9OD/6w837qu4/f6z72DzplN
      wh5Bxe104vWfe5PvZt/+LUSx17B62RK27C9FM1gYMnYWd90yCiPNLHrpZfaUtoIhmGvuns11
      Q/qdkzFdV1pYNf9dqoMyufW2mUSf1dj5m4/z7oLldNim8PO7BnJ4+1qWrdyOzzqQn/3+AaLw
      sW/5Yg4aB/LQdQPgknaIfexdtYQ1Ow/iOmvU23fqfdw5Oondqxewdk8Rfk0gIm08j//kZsLP
      SE9zTSEL35pHeZfNc3TatTz2yHScxXv5cMlqymrtmG1JTLvxViYMsrLw+dfYX+tn+JQbmTV9
      KGa1g4Uvvk38rAe5JuPS7EY1zcG8v/6FE84z35lDbVw/+8dkKIUsXLKK4qpmRPwTCDoAACAA
      SURBVEsM42fczPSxWZgJKEC3oGtOdm5dxtoTXu598EdEWxS8Shiy7mfLG8+xrCyGJ37xfYS2
      VoToSM4x4vSU8tc//JOCVo3oGI2Om2cSffq6HWxc/im5e3fgSeyLfayJTVv3MWDK9/Bum8Oc
      5SP58YAmVmw7ztQHxl9GCWQyh44ntPdAFERURzkfzP0YzaBhr9nF6u0NzHjgIdJsCh/+5f94
      d+1Qfjq9V5eQOs0N+RS3W7jl/u9hk1UMlhhMzkreX/IJjREjefS2gZTlfsbKxZ/hPepgfXMs
      j89MYuXG1RxKTSahdB4bqiL4e5LlkksgCEFMvWM2I1VANuErWcr/vlvFnY+1s2nBRhxhWfzo
      5sHUF+5k2bIV9EpMYkiKNaAA3YGzvoZ92wsYOuouYswgmmxkpMait+9n2V47D//qXkSPF2N0
      EnHRkefGvTTE8cPf/gt/8zE++HATpxtgTaEsdyObin3cd+sk5uVJeDo8aHIkyf0GEKelsONQ
      CRvbiokdMZJ4mxGvBuZLmraJhMclEh6XCJrCkQ2HUaMHM65POnFxg3jmuRs6y9lSTajJj1c6
      MwzS0fE0V2MOTSIxKhSrJQxbuAXdcRLdbyDNFoYl2EpISAxhplbqS5uIGTiNrCwj+w4dpbFk
      N4uWVvPgH2ajut0oRivyJQzMBUGiV78BnR/8dua9nc+QO/+brPB4sn70q85Hqip4T+7DaPSj
      CZ1lCChAN6CqOkpHDblbl1C8C5wegQm3zGZCUgNOVx0r5r+L5PejylbGzryTmaP6Yjac2gWz
      EB2pU93s4ew1N7e9ho2bdtN7/K30jzqIJAoER4Zi1lvZtHQBQnE5Uf2SOFHaginsBB+/uZfk
      Ybdwx8ycr2UK8WV47Q3sO5BHytBbSI7tWj7VfVQXHWblh/Moso3nZ2OTz5yg66htrdRVFfL2
      G2VgjGT8tBuZNjKFcUN68cc3XuVobgaVBcUMu/0/GdM7mG0LV/FRWzA1TR3UN+ZhG9SXvLde
      Y5s1kSkzZpHTJ+5rmUJ8GY1H1rGhNZ4/XH/WDrjmIPezFaxYs5He0x8iM6FzqBWYBHcHuoDR
      Gkv/cTOZ/fB/MGNCKlsXLyK/1gVyBGPGX8cPHn6IKX2MrFu7gzaH9ysvWbB+PruKvSRFWSgt
      b6C99iQNeijXzZhMhGAnaswNRDUX4AsKxeE3MHzCaA58PJf99ZfuJwDQWJ3H4QYDo4YPJkgA
      ND9lR7bw/PPv0BAxhEd//B/0PtsKW5DImHA/j/3wQWZdP5VRfTTmvzWX0sYajpXWMXjydCZf
      ey3Tp4ylrbwIek9i9qQE2v0SyfE21JhEQor34socT4JgZ9O2PbR6LmP53d/Ius25pF07jZRT
      W+P+Jla/9xavLdrJkNt+xO1TRxHa9VNAAboBUQRVMJEYl0pWn36MHn89aVYvbjkMs9FC+uih
      9O/bn2tGDcCi+1CUr17uaK5qosPZxMq5r/L6kt1UF25i0drjxA8Yy+yHHmZyTDXHnVmMTE0g
      OiWDEROuY0iCg8Kqy1OAPYsXE9x3GoPiO9fdHS0VzHtpAZHDbuaxh+6lT/S543RBELDGpDFs
      +HBGjZnArFtnk+xpoLa5ltJmIxMnzuKGadO5+6ZriBabaWiRuebGO3nglomoDgcD+g3G1y4y
      8rrJTBjWB5/bgd116QpQf+wg+6tkrhuW1eUx52Pfp0uYt6mRR3/9a26aOJxI85lqHxgCdQMh
      MTEMHhLD8i3LiA+djlbyKflqBFP6jWJa3/W8+I9P+N2Dozm89TgeKRaDpHN44yc0Bw9mdFYE
      9U2tVJfX0NrcRllREZakeCb/9J9c+5+d41Tfobd5fGUCv7r/WgRRwOs+xN/ePcy9/3qFsP1L
      2XW4iuPHdrC7OpjZyZe+YeSuXsXHJ0L5/U8nnV6laqvazgk9nEeGJ9NUUUqjKhGRlEyIu4x1
      u8sZM3EMee8+Q23yFK4ZlET1zveoDI4n3haOVa9hU+5ubKZ+VBzYxfE6gUlhQSAKFORvp4Q4
      Hhs3CN9mmT0799NYdxLZkkqo5dKqpeptZse+XUQMHku/3rEIAmiuOnYdK2DQ5GsIxUXxsWMY
      TGEkJMXSnr8G6cknn3zykp/YvznNzc1ERER85YagIJmJi47HU53Puk2bKW2zMPO22YxJj6LP
      4DSaDm5n9Zad1PqjuOu+WaTFWjm+dQ3tUiJhvjKWLF/F0eJaJDNUHDtMW3AK2SlRyJKIKIoo
      nnZa1WiGDUhAAOoO7aUt/hpuH5ZMdLQVZ9VRNmw6xJBZDzJjcOxpuRRFwW63Exl5/lRGn6d2
      /258KTOYNSTu9Hcd1aWUVjdz8tgRjhw9yrETJ/Ba00kQGzi4t5jE7P7EhqrkbdvCzr15lLcb
      uePhxxmakkhiVChlh3exZdseKh0hzLz9Fkb0T0Dw+Th58CgpI24gp1cEffpGsnXJUhqJZdZ1
      U0iLOaPEdrsds9mMyfTVMxtfh53Kihayh04gI67zGoqrg5amBsoLizh69ChH849yot5Dckpv
      Ogq3BsyhL8RFxwbV/NgdTiSzleCz0vxomoKjw4nBZCHI3A27yprWGUrwVDhBTcGrgNEgfWOx
      QVXFj9fvx2AyI4tnzJnRvDidPiRz8JmJ/6lYoOKZz5rqR0HG+LkloEBs0O8SooHQ0PAvfi3K
      hIZd2DPp4u7zuambKGP6hq0dJNmART6Pcosmgq2fa70/HwtUEBBlI99EEQKT4ABXNQEFCHBV
      E1CA7wi6ruNxe/B9jSXUbxpNU3G5nPj8Xy/yj66r2Nva8fj8X33wxcqiamife2aa4sfjdqFo
      l+ASqWsqRblrWb+/jrE33kFOr887uQXobtSmfF5+7j2K2hwI5miuu/Nepg3P4FQqrbJdy5i/
      Mpfbf/cU/UN6Ps6+vbaEZR/MxTL6DmaMHszZCR09DUd5+bm3OWn3IkqhTLjr+9wyui8GUQDs
      rJo7nz2VYfzmidlYAG/dUV6Z8xFF1W1IIfHcetddTByRcVk7waeoP7aFDz7cTMakW7l+yiBk
      xcOxbYuZu3QPHlXFEBR8sQrgY/PLP+O5z8rQYgbSf4rvq08JcJm4WPzi25REXsPvHx/OyT3L
      eHPOh/RP/hmpcVa8tQf5aOlyNmypY/yvoX8PS6P5nRxcP5e5y/KYljKFc8OLulj+2nw8A2fx
      X5P703FkNf967QPGZP+OxGAjRZtX8en27VS098UNmL1VvP3WXOpjJvGHR4bicLoJsUZ1y7Ck
      cMULPL1oN3JwJMb65s6EfToYLVHMvO8x+iaHU3tw4cUqgEpI6ix++1uJFR9v4DvQG/9bIBhE
      4lIicPs1gk1GwoMENHQUTyurV6xH6T2ZafXbuBLNUd2JrXy81cONt92Cxfj5HJEW7vzD3wHQ
      /C4qwkwIFiM6Oh01h1m++SgT757FxvfL0IHa/bnkN0cwe1oijQ1thEbFEWkL65Y0qUkjb+e5
      GQ9ycM3HFLd0Zdk0mEkfPoVknweXsx3dGHKxChDEiFkzqD++OzB5uGJYmHzzGOb9+mmKt/fH
      XVZCv1sfJyYimJojq9lX7uLGByew88B2LhjDqjvoKGPB258w+K5fkNl0gEJdP6/7gd/t4MCm
      hSzYcJScG+4lSlLYtmE9rrAcJuQksen9k0iA36ci2AtZsqQDwedHN0Ry/T2zGZedwuVmSg2O
      TQS1A3w6Z091vW11bF23gt2Hj5O3pzywD/CtR21h646jpE29h5nDknGU7mX38SPUNaWx9I1P
      cKRNxOCrocFhpzy/gIaB6cSE9sSKupstH37Ahro4nkj0UXCkghrRT1ltO4OSzt7jUFj35tOs
      KXYz5qb7mTFmIK7KDSzYks/QmSNpLCnD4WqhqLgSqyoSkpDF+Ok30C9WZOfyJazdsIs+aYkk
      WnumaspmC4mp/RgeFEWwdtGJsvVOVzxdQELocmPTu/Y1voWZ2v4d8NWRe6iDu39zA2N6R+Ef
      Hcvh//mAmqYTVDj8OIp38+bLOyitrqT43TcJv+8/uX1C7x6Qo4WSZicRch3zX36dxppq7IqE
      15hM9qOT0XUdQRAo++xlPtjl5Md//T1Dk2yYJIHKxgo8Hj+H1i0gX2mnoqaR+XMXMiUnFofL
      QN+0NNLjQ9CGllC6347X1zNja13XEc2hDBg5kQG6xpjh2RepAFoHu9Zvp6Q0n9KqKkybV+Eo
      z2Lm9cO+kV28q4KgWPokary7YC3WmdlUHdpMbbtIXOxoXvzg+q6DXLz46K8Z8Ow/mBzUQw2R
      MZGHfvcXHgLAz5YFCygKS+TO6RNpLNtHXpGLMZOH8tniXKKnfh+LvYqjR8qQpEj6j36Y98f/
      sPM63jwe+8k6/vrUL7G6yqk98U/e/HQDs4fHsCtvN7rtGkKDL7f1V2msKKO+rYmK6irq3RLH
      jhYSF2tm1TsLSRg7ieRwM47KnRepAKqXspISKlv9ZA0fCG2VHC+JZsZlihvgQti466Ef4Ppw
      FR9/lI9kiOSmh2eTEnX2sEMiZ/I12K6YVZdAUp9MJDkCWVXZu+wtdhinMHqygYFTJtNakseq
      lV2HBqWR0qcXJrmridRtTLgmp3PqYEnh3nvu5/1l65i/KJfIpMHcNW0sUebLncwoFOVtZWth
      LZpuRKCWNcvXM+PB75HSy8LujZ+yy69gCAoJGMNdiG8yUfbn0XUFj8uDZDBhNH49ea6EMZzq
      tzP3by8x4IGfMDrl0uyddNWL3enDbAnG1OPGcDqqouDz+RGN5sAk+LuCIMgEBfdMcKjLQZQt
      3PzDHxEWe+nGfoJkIiz0chw5L+puSLKBoC7DvYACBLgsBEEmKtb21Qd+Swks5we4qgkoQICr
      moACdCeqj/Y2Oy7/Ra4r6Dqq04nT7ebrrIB7XV409dwjFaV7QiMqfg9NjU24zw5dqCl4HO04
      3D60L7mH5vPQ3FhPu8/3leEfdV3H4/R87rvO8I6Xj4ajvY2mVvvXCuMYmAN0A7rqJn/HMt6c
      /yl1HQqSyczEu3/BPQPcPP/Ku+SXtwA6XpcDqc8tvPT72cSGd0bP97ur+fCff+fT/EYEVSVu
      yFR+8vC9pEUYqS48yAfvvMkBYRyv/fEewsxu1i+ax0dLt+OSM3ny9T/Sx+hmxcsvcTh6Mv9z
      72guLTQioPupyVvGL/6+EEGW0c29+eXvfkymtZynfvMvahQDgq4SnHwNT/35MeJMnfaauq7T
      VnmMd176F3vKnahuE4/84wWm9QnF5+jg+K4VPPPaCobe97/8+ra++F3FPP3Lp8hvExky5VYe
      +cEMrJ4q/vbrfzDsp39i5oCIS5Rfx9tRw9J5r7N4azGCrBOTMZOn/zybpm2f8H9vf0KLp1Mh
      0sbM5JEH7qZ3uBxQgO5AdTtpblW5/pEnuXZYOnWHPuGf7y+lZtIf+O2Tg/FpGoKvjRXvvE5h
      WDLmoDPbhiWr3mdxYRRvzX+BEPsJ/vX351hXMIZ7+gWz7N2PaWr14ZDbUTWNtpNFHC6289CT
      LyNtfoo3PzrI49k17Guz8MCdWee6GV4krrq9/Onltdz9P89xa040bW1OgoIsqE4Xd/7srwwe
      0ocgpZ6//fBxFu27m8fHRnWeqKkcXv8OVTFTeO7Je3Fsf5b//fsbDHn9Z1RuWsGyPaVE604a
      2x0AnFj2IbX97uH1W+J5a/5SDh0biLjzJfzDvsf1l1r56YxQd3TXJ2yuiuDJl94gK1amocFD
      MBrHqxuImXA/f7trMpKgIooyRmNn1Q8MgboBOSSKiTffx/Uj0zFJHRzcV4gpOJ4wGWSzGYsl
      CHttGcdrNMYP74/1rMi44SnpRAd72Ll9N3sPHqGNCJJDQwiJ6MWDv3+Sx+4cT5Sls7VVFR1d
      NCMbTdiiQnE31bLzYAm9szNpqK6g3XfpY6DKPbnYIwYQ15TH4sVrKWt0IcgGLJEZDB2USEdD
      Gbu37qBJjiIz4UxsIF3TqCpuY+CoycRbIHP6XcR5iznplMmafAtP/OG3TBkcxqms2B6XRlBo
      BEaTTHCwmYajm1lWEcescaEUFFdxyTGxdJ0Tm3cTFpdI5Z51LF2ZC8FW0JycbG6htaWaAwcP
      UN3UgWQ2nnarDvQA3YivuYh3585nS6HAT359I9Fd+1W6382J/dvRYvqSlRl/TqsTlzOWQcIH
      vPTcC0SbHfgTJ/FIXAwG2YAh1EC1xul5QVhCLLEWO3Of+R/0Fgf9ZvSmuLAF5eQOSnetYt22
      6/nVL2/iUnYLVFVHqdjKsm12gpU21n+2gVv+8+dM6R9DyYE1zJmzgpNVZcRd9ysmJJ+lAHSu
      4weFngoXF4zR76Sq3sWoPp2S+M+q1BkTR+H48zv87oCBkLAIqlv8ZCTqvP/c25gjI7j25nuZ
      NrbvJVVMn7OFEwc2EOJOxl5RwK79xfz0v+7AFhuDuKuIdSvyqa9XGHfb3dx6wzhC5YACdA+6
      hr3yAK+//joF4jCefuou4mPCT3s1OdpqWL+ljOxHHiDmbPcpdPJXLWanMJY3X70Xg7uGD+bO
      49PDJ/jxlBwMonDOiN4Ymsjt9z9M5uEijFFhbJz7PkFpfTGabcyaMZYP/t8f2Fw6hVlpF58S
      SVMEEib9B7+aPR6T6OGzOa+wdmchE/omkJY9jf/+00gaS3N5ac4nzN8+hB9dk3T6XAENNPX0
      s5DNwcRGnz+LfVjaZP78RCz55a04a0oo1Cw4tq9n3C/+RkL+WrYeOMCgQekkhlx81TSEJDLl
      pt8we2QUuq+R//vpE2wsvJU7Z97L0Ck+NE3h5L7tfPjZBrL6D2BkenhgCNQdqK4m1ixfSJVt
      Cn/+1YMkRIUiqGrXaohG6ca5tCSOZeqIOEQ6J45uRxt2p4OThXVY0rOIjY8nJqkfaWERNNTb
      T6+2iOgImnqqqSXYlsyYiWNx7/mYlj63My4hHNFsIdxmI94m0N5xaWOIiPgwqg/txy8FERoc
      RnxUMEZJwmtvxu6XiUnoRfb4m/jRZBvHD5Sh+T20ttlRNR1LCJw4nI9bgfbK3ZQrwUSbzii6
      jIaud/VjopHY9ByGpFs5Ud7A8EGjMAkyobZI4mNCEHQN/8WuonVhtRmpOl6IZA4m3BpJfJSM
      5vXQ0tyCJgUREWEjKsKE6nPi9fjwu9oDPUB34OmwU1VcgcEazfolC0DUsEYnMXLCJBI5yYer
      qpn4m1+cTiqhKT52f/ImjVGTGX3tcFa9uoJ33m/F7KxjX3UHkyan4G0rZOWafVQWHKShysPi
      TxaRPnAkE0f2oa1gE3PzjPz6H2MJOr6W9Z8dYOH7ZeR7M/lp6qUlxEscMYVpW//OP+bMY5jN
      y/4j9Qy5OYH2wnW8tbGJ9LRoZFzs3WFnxEOptJ7cz4IV+dxw//fImTyZbR99why1go59a+g7
      7TEyTA6O7t3L0RM1HDjZRHnzZ7z/STNjx40i2RbE3u0bcEUPJHtACsKwOJa8O5cDnnps/a7B
      dgmtvyCIDLv+Rra9s5pX5zaQoJ1kv9SPX8V62LFyIUVOK0kxFmqK87FkDie1VwTFm+YEQiNe
      iK8dGlGUCYu0ERkViSU4CIvFgjXSRnxcPMGCB0NcFuOHZ5wTttzv8RAem0z6wAGkJ4Rjb7Oj
      GyMZPmE61wxIRdZdNDR0EJ6UyaghWYRaQwizxZIYG47f7iQhewzDUiIJs9mIChZxeU1cc8Ms
      BiWdMRq7qNCIhjD6ZqShOVtwKCYGjprK1GGZWK0h6H4FQVdBCGHg+OlcN6YPouJHlIJI6N2L
      6LhU4q0GHHYnUf3HcetN1xBqULG3teH0aiQPHM3gzHjMllASE+MJCTKAItF/6Ch6RVhIykiF
      jjZsvbOZNGYIUWcF0vraoREFAUtYAr1jQ3F0tKNakpgx6xaGpEYTERmOUfPiUnQS+g5j2qSx
      pEQHo3jcAWvQC3GlrEF1XUdVFXRdRJKlczPInP+Ezr+nlj11DVUDURQuOzSipir4VR1ZlpG6
      BNF1HU1T0buyy5/P+UnTNFSlK+v72aERv5b8OrquoSGevucpLtoaVNfwKwq6IGE4W1ZNRVE1
      RNlwzvMNDIG+BQiCgHy+sIJffsLnPot0V0JPUZIxfe5agiAgSReuKqIoIn7dTI5fkF9AEKRu
      CYWCIGIwnEcOUUIWv3iHLy2VqqqXkBHw34vOlln9zrp7nnqHivL1AlR9Gzn1DnqqDBdUgO/y
      g+sONE3D5/Oh9Wz+zh7D7/efLsN3FVVV8fv9PVaGwDJogKuagAJ8C9D1Tjc9Vf1iT6NpGoqi
      oJ01HNU07QvD01Mh9799dJZNO8uMVNf1L1iz9rz8OqqifsGaNTAJ7i50Py215RSU1JMxYjQx
      Z+Ur1TWFhop8jtcKDOzfh6gw81kneig5fIBjRbXohlD6DhlEelIMBlGjvamSI/uO0uDwExoV
      x7Bxw/HVlJCffxKC4xh9TQ4WVGoLj1MjxDA0M5pLtgYF0NwUHzlMuxhBv/59CJbAXnOMvcdr
      Tx8iiDIxqYMZ2PuLeRDaa4rJL64hc9R4ok0CrtY6jhUUUlPXihwSRUZWFmlJwRTsyaOyxUty
      3wH0SY9H1rzk5x4kJDOH3rbLcI3UVRwttRScqCAycyCptlAEAVwtNeQXnqCurgNTZDR9+vYj
      Oa5zFzjQA3QHmpeiI1t55+23eO5vL3C0/dy5k8dZxcev/IOX3l1CUUXbOb/VHt7Ea28tptHr
      orIwl/feW0plUwceRwurP3yHdXsLcHucVBedoK6pmvUrl3Kg4CQ7P5nL6sP1eJtKWLZgCUXV
      zZdXBn8Tny56j9ffeocPFq6mscsdwO9qo7K8nPLySmoqjzPvhRdYX9zxxUfgrGX94rf565/+
      yTGHBko7uRtWsXLTPtocHZQc3s6CRWs5vGM17yzaRGXJcZYvXUlpg5O2gvW88/4mnJcTa1PX
      aa4+yNy33uClZ19hy4maThsqXxs71y1m0cZcmjtaKNizlgXLtlDn6HxHgR6gmwiyxjNm+m2o
      lfNRPtcIH17xLiXSIMZkWc4ZCoCH/VsOkDDlVh64eQxKawmvvTSPvLJaxoeXcbTKxH3/9UP6
      RllR3S6aygto8wYz6fb7iTz6Aq/tPEGvtHLcSf24bUT6ZZlDg0BkQg4zb05m766CU8abRKaP
      4f7eI9ER8BatZPvGvswcFf+5c/0cy9vBoY4w+sUl4AcQzWQOn0TahEiSYsKoObiFOYt3cWB9
      x/9v7zwDoyrTNnxNn0mZSe+9k9B7BwuCgqIgIiK2Vde2rn6rq+66n1ssq+uiYi8IitKlSYeA
      SpMaAiEhhZDey/R+zvl+JHQsQLB8zvVvJjOZ95zz9vd+7gf/AbdwxxX+LFiylrracrYuXs/Q
      +/9Kt8jz64d+LEqNgZ5Dx6Nx5Z5Mti06mykpa6Df8ClMGtGD2gNf8en6IzSZvcQEKH0jQJcg
      UxOTmMXgARkEBahOi4gSsZetZe4OO3c+NI4w1bnzXLkkUd9sx2G1IygMxPrrcXm9tJZ8S1VD
      E2vmvMFTT/yNL3YeQ5LL8LrstDQ0UHm8HcnZxMHCBqL0CtZ/8QVF9dYfFVF2XpQhDBzan6yU
      sDMytctkMhRKJQpsrFy8k9iJU0k93bZQkjBVl5C79QD9h40jJdSvYxYm1xKblEpChJ72+grW
      rlqCJjGT9Mww2mvqaGhowWp3U5a7huqEKwk7vpnl63fSZPnhiLLvQh+WwvChPYgKOdWQZAHx
      DO4ex8bP5zB7zhzenbsAdVQaiWEdUy1fA+gKZLKOg6CzOmBXezkfzFpB+nW3E+104LA5sFht
      eE4uALWMmDCaoGPLeOn1d3lr1n/5cucu3KKI5PVi93oISe7F1aMy2LPoZVZVaRncO5qNn77K
      qsoIsg2VNFu9FB7Ix26p5O2/z+K47SK3rmWyzlNY6TwVUKTp0DccMBqYOjrljEojig52rl5E
      rX863bNDcXrd2Izt2N0CCA7KD3/Nf/7xD1ojRjHjlhsZedPN5Fi38/IHS/DIFdTJgsm0fM2S
      XU0Ub1vDivU7L24qJJMhk8nPSZ8meT1IChWhQXKam5vxqkNQqmQInck4fFOgy0hbyWGqrG6C
      izcw77CZosOlFNtD6dUzhhh9h6Y+IGUYf/hjBLv2H0Xpl4XkBI1SgSYwhLTMDG65+XoCgDhb
      EZ+VWXjg3imk9r4aR0s+H84vokePRMyqMCZPvBL1Xx9mf4Wd1JyuzagoOVvZubOAmIFDiQs8
      U2wnOmvYsLkUb5qaNQs+43B9DVWLFhN8wySSXPnM+mgLPcbdy5QbRqBXACRy31NPUV9Xx96v
      vsYRnUHjykNMfvFx4gvWsqywkVabQICha/pmb3s5O/JrGTXlD4ztn0T7sd18NP8riiv7EJYT
      6RsBuhyhI0AdICh9CPc8+ihjh49gxIBepGek0T07i0C1gubKYspr28Ftw6WNYez4a0kLVtLi
      DiQ1NITg5AEItYfZX9QIODha1oo6QAdKLWHhctYsWkPajbeQFKjAaHXi9hppskCg36W7tEqe
      U/J+kGgsL+NIo5cBfbLQdfqWe60tFBWX4xKDuPuZ/+HOm69h0KDhxAeFkDNiAIlBTrbv2Evk
      sDFMu3YQOsGD0BkZo9AE4rXXUNTioWevHvhpBJrabVicViS5EtWl+ryLIHg7cxfIFCDaaTVZ
      EEUBh60do01EJpdjayzzjQBdgb2llhUf/pfNpW2YW9pRPv0AX3Xry/S776d3746k057WIMoq
      WkjNTEYnF1n/yRu0JE7htivkvDZrMfWtLrwKf0bfNI2eSWFoRR3Xj97Hp/98grlaOWJAFn97
      LBOA8i2rOaIZysv9YqAxk12z5/HnB5cQ1+c2Rsdf3DZizY4VvL14PXXtFixmJwcfyafnTQ/z
      6NhMKssOoknpQbfUiJM9ZuPRPcyf+y1Tn/kjvfoPOHEnKF2zgZjufYkWjtFmbOTArk94ZPMC
      JCT8Ewfy4D3TyIxQcWDzN0Rk30JmVAiRM0bw+HMPozbEM2X6nUT4XXgD3B7eCwAAIABJREFU
      kESRzW8/w4K8JuwmM8KuA+xZHsukB59i9KAezF76OrmfiUhyfwaMnUpOagiHP331u9Wgbrf7
      Ny+FqKysJDY2FqXy8vYTktdBa6sRlX8IhoDTK7CI3WLCaJOIDA9CcaJn9HpBoTi16yO4sLpl
      +GtVZ+iW3G43jY2NxMfHX9byXzAnPFBO3FdJQvA4caNGpz5TsNbY2Ii/vz8BAZdoC+m109Zu
      Q6kPRq859Tx9I8AvAJlSR9h5twDl+AUG43d2HsKzG6RCQ8Cl7SD+tMhkZ16DTIZCreOyXoLS
      j5Bwv3Pe9q0BfPym8TUAH79pLqIBdETvCOcRZJ38hCh0aNG/6z9IYqeg68J//beMJHWmqDoN
      URDwuL1nnTD/vEiShNvtOa+4TxKlc+qN4PXi8XSJL+KPQuqMXhMl6cLTpLZWl7Evvxi7V8Iv
      PJEBfbIJ9lOflGBZG46xfW8BNq+MuLQcemQl46fqaGeSx0FV6RGKK+qwuSUCQqLI6dGdqGB/
      31D0Azjaqsnbf5SA2Cyys+NRImE11rB/xz7q2t34B0UxfOxIQlSXN3hHcJsoysvH6R9Ndrd0
      /M4JsrKzP3cLxQ0mdGGJDBvSlwiDH5LHQd2xIoqO2el/xQCC/TSAi8rCQxwqKMcqaEnr3p3u
      2alnJN7uSiTRS3PFEfYVHMfh9qD2D/zuoHhBEM4NBPE08d5bb7G/0oLS3cbWb3bQ7p9I/+Tw
      jt0HwcTKj99jQ4UNnaWCbd8UE5/RncgQHTJAMFeweMEqiupNSE4je7/9mgZ5CN2S49EofnlR
      VyaTCb1ej/zs48WfmMZDW/j084Vs3r4HsyySvn1SUXg9bF0wi9xCK1GxQZRsXUWRO54B3aJO
      diaCIGCz2TAYLj55xRm465n/8VxWrt9KpVFGj/69OTuZY82uhbw1fx/xmREU7/mWUpuBnokG
      9q+Zyxdr17E6t5T+Y4YREaClpWwfn3y6AldgMEpXGzu/2UNgXAZx4QEnO1SbzYZarUb9Y8Mt
      vwfJ6+J4/jfkVdrx91PTWr7rAkcASUGf0bdxS1YywTqB9TNnsmp/BfdfldNRYNFGeWkVOVOf
      Y2rkcd5+ew3NbVYkQjrkIf7RXHfrnegC9firnaxZOpv9VfU4PSL6S00M+/8YhVpPvwk3k1p5
      gMrmjk7J623j4MFWrnnyfxiVEIh5QBB/emEp5eN6k37ZtlNUpPa6iuj4dArKjefRHVnJXbGD
      Hnf/L7cOjqA5eTn/+mw77VdlEZKYw4ScLJyzdyNHAjyUFZSgSRvAzbdeT7DMxMr5czhQcIQe
      GVEEXoZRQKbQkDbwOpKH+uOvU2GuMlzgzEMVxqhhfYgMUHB87xZ2VlUyfFDKKQW6MpyrRibx
      zTsfsXLbYYjLJiHWgLdzLihXBxAXo6epopC1S+exYV0JGfGZBJ4dhe3jDEIz+jKkR3eiA/yQ
      dz4yGXIkt5vq6hbMJhNeXQoJMisX6Yv141CFMmhQTxJj9MjlZ2eJB5zV5Lcp6JUdgQIlkdnZ
      hEhuPEo1Gf1G0icpnkClhhMxCyq5nKYmEy0tJuwOiSBdBErJzUX6Yv0gMrkcpVxOfWkea5d8
      yFNPzr7QNYCTkr0HqWhq4NjBw3S79nfcPCC98/BFwlR3nHpZNFkZlRQeayCp+wCqS4/g79+X
      uE47cMFYxeatW2kx2kkf2JuIcDVer3Du3raPk8jkcmQiZ9Q4pSqE6ycPZP2BjWw3J9JWupEj
      ThlTL2dfIpMh73zW50eDQRmItnNBLlhteERQyDjPNFJFzqD+FDesZvv2nST6Gdm8bQMRI++4
      rIdTXoeRon3b2HvcSFT2kAv7La+pnPdfnwlX3svDd/4OpShitdkw+BmQySSaC7awYruRJ554
      mPodi3jlnZnU3f4/9BvS8TPW+mPkVdiZcOs9hOhk7Fr1OUvXfE239CQCtb4G8MMInLDKlckV
      ZI6YStJILQFaLwech/m6JY6onyLXnATiyYQcEk67hbZ2O6HRcQxIsLJs1T6y7+jN0d0HMOkj
      CThpqSJ2XkNHA9GGpnD99IfRaTXY24opPFxGeHgM2svUiN1OE8XHWhl266Pc4KfC1nD4AhuA
      tZUGrwvH14t4ZY8CCZHggXfy73tHIENObK+hdFs1i5kvvYBao2HI+OuoP7yDsvYrGBAVhOAy
      smvlfMraXWhUMmyCkoETZhDxk2UI/DXiYtviT1i/v4TWljqMdg1lxfuZ/Mj9GEq+4IO15aiV
      Ag0tcn7/3P0EXcalVM2O5cxet5vm5maa2hyUVR2h/6TfM0TayqqjWm6/83ZGzLiNrc+8xTMF
      EbSZVYy77S6UriY+fHUWpSYrx8oaqX6xkbSswUy5MYeNS5dRVGXD63VgSBzIzf0yUF+m/RDB
      42DX6o/5aIEaP7UCwWW8MC2QJLgwmqwIp+05yzUBBAdoOqZBkoDdbKSpxYRcF0hosD8euwOd
      IQiNUoEoeLBbrVgsZpwuEU1gECFBgWhUyksLZrpM/FRaoO9HwmExY3d5Tpt4yPE3GFC4zTQ2
      NmF2yggJjyAizIDiMmqBvA4rJrvzjPMbpUbLF8//D9JVf+LuMZkoZALtTXXUNxrxD4oiOjoE
      pUzCYjLiOW3VrFBpCPDX4DC30djQhKAJJTY6DH8/zRkL0y7TAtFxPmWzGLFYbVitDtSBwT4x
      3Pfxy2gAF89PIYYTBAs7NuXTe9xwujYKoYOubADn49f5ZH38YlAoAhk5bvjPXYyLxrf57uM3
      ja8B+PhN42sAvwAkScLrdp9HENZhm+7xnmlULArnChFFsWuc1UShQ5h2prbu/OW4WDqc8ISz
      3usiZzipw0nPK0g/6v/51gBdheSmqbKEvCM1dL9iDLGnqcQay/PZV9JGRs/+pMecHd1ip3DX
      Dg4W1yGq9HQfNJCc1FgUXjslh/ZwuLQWt6ggJLYbo0dn01ZayP4DR5EC4rl6/FAC8FKZn0eV
      PIbh3WO4aGc40Un54f0cOFqF3SMjNDGTYX1zCFQLlB7aw6GSGtyiguCYLK64ojenp8mzGRvZ
      t2Mnra6OdwLDsxg9IpsThu+m2oN8ld9Ods++pMcp2bf5a8pb3aT27EPP7ESUopP9W3ag7zGM
      zEjtuWX7MUgSDksDebv3UtFkQVJoSO83koHpEQCYG4+xa38J4RmD6Zt2Kh2rbwToCkQnhfs3
      8/7HnzD7nTkUW07snrk58OUCZr0zh4/f/4xdR5vP+Wr13g18sCAXdVgIorGcJfOXU9Vowlh/
      gKVLt2BBg0EvY/uSuazakk/uhnXUmjwc27qIVXtrcTaWsGr5elpMtku6BHtNHguWbcaqCCBI
      62HvppVsL63B2JDH4sW5mDvLsXPpXDYcbDn1RUmiqeYgq9fvwOSREAUBQTi9621n+XvvMH/l
      KvKONtF8cCPzNxcgOVrZvGYtpfUW2g+vYf6X+ZzHvv9HIyFRvvtL1u8uR+mvJ0CoYf7c+VQ5
      vZTu2sT7785mzpvvs2pP9Rnf840AXYKckKgsJt6aTGDr+6c5w8kwJGQxbXoGW+Z/hNdztnzM
      Qd7OItInTGHS2L54LZW8/+bH7K2s56aeOdz5UBoR0eFoVRL2navZe+A4yUo9Q26cRHhyLW/u
      LSOpuQIxpTsj+iVfkjOcOiyL2+9NJiomEjVGLLXvUm+yosvoxl0PpxAeHY5OJeH6dg2FVUZu
      6t2ZKBsJl6ONiNTh3DL5BrSyjus+UZdL18zlG3svJg114PVK1BwsxjBwPDeN1LJw6Vqa6o+x
      6fMtXP2H50kLu8jen47fTOw7gQd6BxARqkchHOOre/9Lo1dGbEQC42+eQaLwMvmuM6devhGg
      K5CpiIxNpke3GPy0itMOrJSk9OxNWmoSapXsPBIaOX5qOWUlNTQ3t2G2ywlV6PCKIkpdMAnx
      4XhtreR+8jK5lgQmX5eF6DJTWXyUg/mNKLyN5BU2EqpysnTOHPaWtnCxWjilXzCJ8VFI9kZy
      Vyxmx1E3/WIj0XWWQ7S1sWXef9hojOHGK1NPfk+SJKzHDlF0JJc3X3+TOUs2U9tiRULEcmwL
      721q5IGnJhKuEJGQERgRSHNxEUdLKmg3Oyhc/yXtWWNQ7F7Ep0s3Ut1mvyhnOJlMRkBoDNEh
      GoxNhbz1t1dRZI+jh7+c6JQMuuVk4adTnfMMfCNAVyCTfcfMW/YDnbKGoeOvpmDufN549yh6
      uYmSw6UMH3Y9SAIttUdY8tkijpnU/O6JpxgUL0fbmMry9Z9DQAoZ+grqrTKajx4nOUnP56++
      g+HVZ8gMvLicZs7mUhYv/IxdlX5MffAueqZFIpMEWmsLWfrZIkrbldz9xNPkBJx2UTI5SYNu
      5kZtDS6Xmcpjm/nHweP868kJ5C7cgL77KMKsdqpNdiwqIzHjxzOo6DPmrXKSFBNGmxRKcvNW
      cqUcooVdrPEquG3yFehVF943i247x/I2M2/5doSwkfzlsfFof2BU9DWAnwAZfGf+K7+E/tz7
      YBh5R46j1HqQuUW0KgVOcz3L5i6kVpvN/Y9PIC1CDzLoM/IGkrqPwlq7k/eW1NK/ZyhtilAm
      TrwSih8hr9JBZveLaAC2GpbMe588RX8eefQachI6Mks6LI0sn7uAKlU37nv8etIjz7RFl8nk
      hCX354bk/h1vuKp4+pFXKKzqS31zCxbntyxYuJ/a4gLshgAGD5rBbY/8kTF1NezYnEt4Qib1
      K/IZ/+J9JBSs5YsjLbTbBPQXKmqSJJrKtjN35TZiB9/EbWP6EaQ8866f7xn4pkBdjQBez3ne
      Fj2IYscfJFGgofwIpVWt4LJiU4YxYvQIIpRuGux60kPDsDTmc6RdzZTbJ5IS4o/g7PynCg3B
      IQJL52+kx9QpxPvLabM4cHnaqGqTCA68OGFhy9Gd5BYH8MjtN5IREYjH6cQjCFiaDnGoRcmU
      GRNJDT1VDo+liUMFJVhtDnYumcO2wnpEoO7wHloEDZEp3Zj26NPcM20aN40fy/B+WfTsN5DE
      MAMKtR9283GK2qFHnx74qT3UtVhps1kQ5SrUF9H7S5JE0Y7NyCJHMPWq/vir5HgcjjOmhCIe
      BMF18rW17qhvBOgKTjnDteN2OJE/+yBfZfRh+vRx7F/0GbsKq3C6HLDwZXZu6cmzT8wgb+EH
      tCZMImKUnDdnLaS6yQG6UK679XZ6poRR/VUFTQ2lvPbXP3YkclD5MWTyY/zumjTKt6ynMeZa
      HukejhTTk7w5n/L0Q8vIGHkvV8VfXOigxeRCL5TzwpMPnXyvz82PMkZznOamY7z+7GMd5VBq
      GTT5ccaHHWPFvN1MeuIhAgPcvP+fp5ktyZAEiXEP/J1sfSAKQ8eWr+g00VYeh19IPMEBWrxO
      GwXb9pHa71aywoOIe+A6Hn/+D2wNSWX67XcSeRHOcADWlnaOH1nKk/krAPALjmDqw3/AsvsL
      Vm06iN3lxCt7l3sKNvK7++9CvnueTwz3ffx0znBO2ttNKP2C0fv/iAosCCCXn+YM58buAZ3m
      53OG87pd2F1ONH4BqBWKH84TfI4znAsPKrSXyxnuO/CNAL8AZEotIeEXsAV4dlJghfo87gw/
      LUq1Br36R06/zusMp+2aPMEXiG8N4OM3zXeOACqV6lerg+8q5HI5Wq32V3sfOjK8K9BqL+WA
      6edFqVSi0Wgu2zV855OVyWS/2gzpXcWJe/Bz+wJdLCee36+1/Ce4nM/g131nfPi4RHwN4CdA
      FD1YzQ6+y/5SkiSsbUbMZudZX/RitRhptbjOkCe7HK5zXPu83i6SE5+PzljaVouLs80CT37E
      7aK9rQWLx3Om2kBw0dLahvXU9juSJOGyu874/omNocuHgM1s4ywpkG8XqEuQJESvhUNfreDD
      hd9y+8uvMSRMA5LIsW2LeOHjtdgcHvxicrj39/cwODPmZPC6KDQy/+WX+PJgHZLMwNXT7mLa
      hKH4i1Z2r5nDO4u245RkDLv9rzw6PpVdaxby6cJNOAL68OI7TxIrd7Hl4w/Y4z+Yp6cO5KLl
      0JKI19nA56+/xjFNN+5/6B7itCB6bOxdO4e3FnyDExlDbn2axyb2OZkQUJIkbM2VLHjvVXIP
      NyLJI3j89dcYFK3C21zAGzM/ZE9FPUGxOdxx/x8YmurmzT//g131AsOuv427po7Gz9vKW8+8
      TNo9f2F8TvD3l/OCr0ui7vAW3vx4IeX1ZjRBsdww/V4mjuiGSibzjQBdgmhj5+alzNlYiKWu
      FZO3ow+UWg/w2tyNXPvYiyz6/EOm56hYvHoPbfYT3ajArk8+YIMxi48WL+L1Z6dRuGEZ+wur
      qS/fySfLq7nvX+8x7z8PcWTh8yzels/Og7Xc/tc3uC+nijfm5VGXl8uWcheThqdfWp5gVwX/
      +edMDph1uJtbcXZ2400Vu/h4yXF+98/3mPfKwxxd8iIbak8bqSSB/A3vcljZj1fnLuHvt8Uy
      62/v0OpsZdGcpTRFjWHOR7OZ3k/FylVL2DT3A45ET+Dd5x/BUfI1+wqq2ff5K1THjWFcV1d+
      QLIeZ+mK1YSMmMEnn83jmakD2L56HQUNbsA3Beoa5Dr6j57Gv5//K0NTIxBO9I4qf5JCgrBU
      llBQVEZ9u5eosABUJze8ndTUuelxxVACkRGT05e+qQZKjCZaC/dgyBrJ4PQQtAmjmNIrmK9z
      S5ErA1D7+ROTEIa9sZbtB0pI7pONzdiC5VI8BVWxPPjMizx97yRCNZyUEJiKdhOYOYqhGSFo
      E0YytU8o278uO/k1SRCpKGqh59CxxPlDt4l3EOUo5GhlNfUWNdeP6oWfv56c3lcSZG2ntLgV
      fUQ0Wj81QQZ/Wku2s6ggkCnjE6ioajxninKpSAoNkYYQ5C21lJSUUlZlJCQ0iIBO8yHfFKgr
      kCnQ6nSAEeG0PLtyQzpX9g3mqfffZE9CGFUNIvc8OYWAk16oGrp3j2bN6s9YwnUEumrILygl
      c2CHlbcuLIoT58IpGbEo89UEq00sefcVpIY6EkcmUnq8HZT7WbU/l8CU8Tx439WcmwjoR6DQ
      EKQHR4v7DNNbSfCgCz+zHGvKzaf+DsgUWvyDT5zUBqITnNQ1mlEE6vHXdjiDBxr8Mfhric/I
      Jn/LAl4uViPKVdS1lpOQomXV27ORB4VxxQ1TGNkvpcsqptwvmr7dE1jx1gJKDu+gsbKeYdMe
      Iy6444p8DeAy4q7fx5e7m7njyb8wIMaP/Ny1bN+6j1E9kgjXawAlmWOm8oBiOUvXLUcXFoIb
      BYIk0bHqPSVFMZnNqIPjuHFSb6L3HEETPY5DKxfjjUpFowlizFX9WPLCG+wYN5Qx8RfVBM7P
      ecpxnrQXyE97V6nWYtBrqJFOWTm6PR7sDgchWTfwVEYm+VVm5JZGjrrVeA98Q+qMp4kp+4bd
      e/eTnZVAlH/XVE2vsZzte4sYePN9jOmfTv2R3azbvZujQ3rQJznINwXqciROBl14TY00KVIY
      2T2HrIxuXD0sA6XbhNvlwe204XB5UOqC6D/2Tl6Z+SrPPDiRiPgoIgJ1BERF0lK8jzqHB9Fl
      5ttva0jrl0VIbBbjbpxAUPlaqiInMDIhHK0hlLikdNKiBRpaziNFvcDyS6fVcL/oKFqP7qG2
      sxy7dlWT3j8NUfBgszmQJAmNxkvZkRLcAtibD1Ll1RATGYLK1kRRXT0eQaChuh6LqMEQFUNq
      v1FcPSCBqpomBvQajMKrJC49lYzkcCSvB4e767azBLuJNo+enlm9yc7IYMiAHBKCvFhMNgS3
      3TcCdAUeh4Wy/H1UtLdR3tRCe+4mAlJjSY9KJEm5jk+Xr6J/nJYj3+5GFjwQjRr2rvqUlpDh
      jOujZu2OYrQqJVVHD2JUp9MvPoYQaQwxS9/ik7lLydaWsE+TzV/6hoMMTMd38N5XLh6ZeQV+
      h9eR+81RNqxtY58xjgeSL040ZqkpJa/4OLU1pVRWVbJ9wzpM3fuQkX4N8eIbzJ2zhO66MnYr
      s/hLvwjMlftYtrGYMZMn0OfKEWxftpQFulZMOxYSN+xOsqMTcfZO48Mv1+JnLKOicBuGrAkk
      ROiQBBcHvt1Ke1AmPXulIOQEs2XZco5ajqGP7U9IF/X+AIqACGICrWzctBJbQyLN5YcotwZx
      TaSe49sWf3eGGB/Q2tpKcHAwirPFZ2chuBxUlxyhqsVBVGYGQZITQaEhJr0ffVKjMDVWUddo
      Qp/Qi0kTRhId5Iexrhp1cDxRoXIqyso4XlGHPDiZ66+/mrTYYLSaABLj9DRUldPsCebaybfR
      N6ajclvrGgjIGMaI9AiCwoLxEyxU19kYct1kBqWc2knxer2YzWZCQkJ+8FrtzTUcPVaJU1QT
      nxKHwm1HFRpPRnwsyYl6GquO0+wJYtykafSLDcRpNWIyuolJSyYqOpVguY2qimrUcf2Yett1
      BKtVRMdHEyAzUVZRhyFlCOOvHElUgApRELC1WsjsN4LU8EAS0+NoKS1FHZ7O1SMHER10SvZg
      NpvRarVoNBcX5yDX6ImNjkFmb6ampgmZIZlrx19NTlIYlsbq75ZD+4CSkhKSk5NRqS4uxPAE
      kuDB7RFRqNUo5eduVUqiF5fLjVypQa1SnP4HPG43XhRo1cpT0hRR7NjyPPFaEvAIoFTIz5Cv
      OJ1OampqSEtLu6Tyf2c5TqMjWZ8buUaDUi4/dRohenE4PcjVGjTKzhn3CRMg+anXoiggokB5
      Vqqs6upqDAYDev0lOo+KXlxuL3KVGpXi1MzfNwX6CZApVHxfEhyZXIlWd55HIZOj0mg5p/md
      rYuRKVBdzif5XeU4vUgKBRrdeXIzyZXo/M4q3OmNt/O1XKG8vAtSuRLNeXJQ+BbBPn7T+BqA
      j980vgbwK0ESRawWI3aX++cuykXjcbmw2ly/qKTeFz5zlCSsTeXMe+dl1tYm8tJzD5ITH4JM
      kvC4PaBQoFQofpEZX36dSJgq9vDfl9+huN0JopaBk+/ivhtHotcokEQvBetm89pnX/Pge58z
      wPDz3nipeSd3P/QGLpUCJInA7hP576PjOLLhUz5YtAO7QoYqMIM/v/Q3uod6Wf/R6yzcmo9H
      kiFpYph2z++4bmT25VmcShJej5mC7WuYPW8rY5954cJ/RxI95G1dwoaDNbiVobhcnacmkoV1
      7y9EPWA0YwZn/Czxnf8/cfHtxt3EXv9H/nJdXxxFG/jbv9dwfEgPeiWE0Fa6jcVb82isdWD+
      DqnyT0nzoW8gZwYfPTsGXF6UWi325mKWfnGYyc/OYnwvAxtmPsRbr67irX8NoKDSwsQnXmJC
      ZgQe5KjVmsu3MyN5KD6wic82FOAwu7F6hAv/LVtDAau2HGT89Nso3FoFIkgeN06nlQpzHSEO
      C26nA7lChUbt22S6dLSMvf9RAES3hdL6OryhEWg1KlzmJjas205Ij7EMb9vAL8HDo7asAbcn
      juL8QvSR8cRH+aFS6YiJ01JdeZQ8UU2dWUlSegReUzMWuxNXbQlHFC7iEhPx97+Ms3KZkvQ+
      4/ln73Esf+llkF3wFMjC1o/mIfSdxrhsP4q3VCAHDq54hUV72igpKUFb0UjBxggyc25g+ox+
      XHqCex8AXpedbV+8z5I9jQy5bgYJQX5U713D4XY106cOZfOOjSh/AcOuNjwFw+ECli/Jw+QQ
      6DH2Dm4fnUpWZgCvffAWe8JkVNeqeW7eIJRiMbGRGvK/3cb+rWvwBGYwfdrNDMiKutiohu9H
      Jket0aHGgoCInAtqABJN+ZtYtPcIwx+ZyvHSA7RZqjhSVslVA29ieqqJ1fMX499zJFf0yiDQ
      EOM7ZOgiJMnD6teeZNVxLVMf/AMjusWhkJqYPXM5zgHjMVcfpNrYhnzXXjIG9CQ+5OcLgk+9
      5k6eG+JAFD00HVrNrPnLGZJ2BZsOOLjziecYlqDjyOpZfPnRGvo+M55b7/sTDrcXr6OFTauX
      8E3eATLTrsPwE1WeC/gZL5XFVQRGRLLj87f52mGivslK+5wFDP7kFXrGGcnLjUOfmkVOz2wU
      vkVwFyFweOG/WVgSxgtvP0eSBmTI8JrbMGRnILMcZdWyQ5S1NtOau4YUQxTxgxN+prJ6MZls
      6EIiMOjk6IV0VOoabJZaREUcVwzMINZPhWb8SNb9twKjw4HCCyFh4SgxkBCWiAXpoh2uL4jO
      w+gLaAAqBtzyGANu6XjVWrie59/azW2PP0yqnxxELT37DkYTG3Z5hq/fLC7y8+rQxmVzcN0y
      9okiClUkV1w1iKeff6HzM3beeugJuv3971zl93PefTc7l8ylQJtIdqSaY/t2ok7oRVx0T4Ll
      HzD7o8/pEa+naOsa4vvchVhxiIUrvyE0OQ2daCV/fx7ZN9xz2Uy+BLeL0r1fUdTUzpGKGsjd
      cPFiOLlCQ1BkHGkpsfhplchkKqJTEggP8v9/swX6Y8VwlxudXk+QVoYgSsgkkBT+pKTE4Xfa
      JoO/IYjouEQMylM3/0LEcF2DirDwQMztzVjMDoISenDDTWNIjIghNTEMu7EVk9lBbLdhjJ84
      mqjQQPzUMtraWrFLKnIGXcGI/r0wnKYbuVQx3OlIgpfmqjIazF5iMjKICVD5xHDfR1eJ4X4u
      ukwMd4FIooBXEFEolMhPiv86Eu0JgoRKdaaHqeD1ICJDqVSeM3voMjHcd+Bbp/rocmRyBapz
      En7JUChU59iaAiiUqp/t3MgnhfDxm8bXAHz8pvE1AB+/aXxrgC5CErzYrCbqaxsRtQFEhYej
      D9SB4KK1sZ66difBEbFEhfifEZGEJOCwWjAa2zG75ASFhhCq90epkOFxOWhtaKLV5iY4PJSw
      0GAkp52W5nZUfoGEhAehRMJptWATNITo1ZdmaCwJWM1mvDIVAYEBnLahhCS4MJutCAo/QvTn
      CXwBPA4rFpsT/5BQNHIZXpcdi9WOt1P9qdToCAzQYms3YrI4CQoPI8Bfi0wSMbcZkfsZCNRd
      SrJgCa/HidXqQOUfiJ9ahUzWkXzDYjHR2mxE4R9MWKgBP53mQk8kIQblAAAIAklEQVSCfXwn
      kpeGsl28P3spDVYZKpWCzH7Xc98dQ6nZvph/fLSNoCAJlzqCKXc/yOicuJOVy2MsZfYb73Oo
      RUQrObCqY7jv4QfoF+fHV8s+YPnmI2gD9cgVeu746yOUfjGbLXsqsdnU3PvqCww2WFk48x2a
      sm7gySkDLv4aBCtH8naycM48mgN68ue/P0nKyXrupTZ/PS/O+ojW6LtY9NLkc2+By8TXC17n
      1bnbeGrZeq4IU1Lx1RJenL8FXUAgIJHYfww3Dovg/Zc/xq7QEZk1kN/ddwshlsP885l5jH/2
      n1yZbri48ksSNmMFm1evYMnSbYx44nnuHZ6NQnRwaOsK5q7cjqhQ4HIJxPUew/13TCDKX+Vr
      AF2B29rC1k2bUaeP5aXpYwhUC9jtEgpjGZ/M28u43z/F1H4hrJ/3Jl/v2ke/1CiCO0MgvQ4P
      0X0nMn3caAxSIx+98joHa5tIkpnJ3V7P1D+/yIisaFztLbQ2VFDZomDG0//Gb9dLfLK6gNBu
      1VRr47njyuxLs0b0mjh0uI7Y3iORVxjPOI21NVewat0BkpLjsXvON2v2Unl4O1uPWQn1D8fd
      +V5jo4m0sXfx2KThyBGQy5UULXwJ78AZvDI+lDmfraKkrIL29Z8SP+leRl9s5e/Eamyg3q4n
      JS4JxYm0zKIHURvJLff/iUHdk6jNz+Xtz7ZzvG40UenBvjVAV+A0mWmoakLlrGfxB2/z+bKd
      uFQ63I0VGAPTuKpHDApdMH175WCpbsJuPxXUoovpweQbRhOs9lBZfJCC404S9IEYy7bT6FRS
      vW8db77+PvvrvOhkEl4BJEmGQibD2d7A7kOVJKXFULh/P82OS7FGjOTGaTOYeFVf/FWcsrny
      Oji6eyO12hiuG51z0tT3dBytdWzesIOk3mPpGx/S8V3RSkVbK8eKDrBxwwYKKxqR1EpEUUQQ
      FciQoVDIqN29ge1CD4ZGtfJtXim2S5C0hsX34+67p9E3PfpU2LTSQL+RVzGsVyqSx0Hejq0Q
      Fkl4mD/gWwR3DTLwtFWQV1iI6KemYN1bvDpzLrVOL/KAANSdlSYoWI9WLoezIqJEr5uD6+fw
      lxeXknndTYzIicdrNVJZW0JRjQmFt4q3X3qK3PYA0iLcvPmX+/jnF+30imvkeLWR/K82s23D
      PP7x7GzaLjbaSq5Ep1UAwhn25m0NR1m+ppQBV04kTqdBKZchiOLJz0iil9JvV1IoRHLVNX1R
      yiXkCIiiguT0TBLlFvK+zeXVp57hzblrib5mLPId73HPn16k1uSksNZJj8BSZr2+hEUfvc2q
      zftxXczZrEyGQqlGo5aQzvauk0Rc1gre+dvDrC1VMmnadJKCfNaIXYcoIyBpCHdP+iNjsg20
      XjeK1/89myPVg5GcJlydVmstze3YPR443RrFY2HPstf49yYz9/3pWcYPSARAqdLRd9DN/O/T
      09ECQ2c/zuf7jMz8/eMMuLIWlGbmvPYFMb0ykfyimHrzGOY9cg+biqcytVtgl13aoUWzKLP7
      kXB0Mwsq9nP8gJL1uzO4Zkg3VIDgquKdmRuQDb6a3WsXc7i+lvrFywgfdy1Dx9/G0PEAEpX7
      tzDrk62UD36cme++yrGqJo4d+JZKXSRNXxYx482PiTuwgmVHi2gY0pNEQ1edvosYq/fz8vMf
      YE+6mhf+PIPw02q9bwToAjQBWjQKMwWHDmJ1i0j2dmQ6Nfr4NAzGY2w92oDoMlFQWIYhMRad
      ToWpuZbGNiuWY1/xxsoa/vDMc4zrHYfg8SCIIkHp/XA3FXGkxgS4abc4UGrVoA4gITWS/V98
      hmbUNHqFanG4vYiCA9RK5NIlPlIJJOFUso3YgZMZO3ogKqcHhShDFaBDcAl4nWZqahvxuOHK
      O6cwKN2A09kx75Yr3TiNDRw5eJCqJiuiIOC0tuGWdUx7lAERGFRG8ivb6N2jD/4aOXaHCxRe
      ZAolskuVU4ognljECGa2fLkOa/Io/vHHWwhBQPR2dEhOY71vBOgKNIYIRowazIdfLOVfRVtQ
      WBtRpl5Lz4wcIm/ozYvvz+JotJI2l5Jrb++Jv0Jgw7w3aI6ZyOCAY9itJr6ZN5NvBBEQyRo7
      gxt69GdIyk4+fuFfrI7Scrxcw53/mwJAzZ61rKqO5flHeqAqN5K7cB3/fWEbVv/B3JJ0/i3K
      H6Lx4Fcs3rSD2sYGSksaaHrpH/S++hZuHT6e9BEdFdJ+QGC3O5wbRnenIX8znyzYz+Q/3s8t
      d9zZ+V9suA4WknzLdAYrGlj5+TK2l1kI9FfR3tZObL8JpMXpETxOduduQhE/mu6pMfiPzWTm
      q//EoIB+V95EuP+Fb4VKosiexW+xvriZyoIinCUNNO9NYdQ1o6mor6K1pYXXXi4FQBeVzc03
      Xov5qw99Yrjv40LEcILLRmNdBSWVDWiDY0lNSiTcoENyWSgrPUp1k53QhDQyEqLQKmW01hzH
      ow3DoHbR0NyO57Rpa0B4LNFBOhymZsrKymm2SMQnJZOSEoMKcLTU0ujWkRQTguR10FRbRU2b
      m8jYJOIiTk1/LkQM5zK1UNvchkc4VR38QmOIDQ1A3rmGEewt1JqUJEQH4bK00dhkITQuBn/N
      ifsj0FpbjyoyFr1cwNzeTHNtPY1WFwGh0cRGR3acIQgCbXWVSPoYwgxaRGcbxaWVeJRBJCXE
      oPc/pfz8sWI4SZIw1h2nyXrKHFiuVBEaEYnH3IzxtBxNck0A0VERiMZa/g/8CUN1P7EfdgAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='144' name='Sheet 41' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 42' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
